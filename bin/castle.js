// Generated by Haxe
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function (console, $global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) return this.r.m[n]; else throw new js__$Boot_HaxeError("EReg::matched");
	}
	,matchedLeft: function() {
		if(this.r.m == null) throw new js__$Boot_HaxeError("No string matched");
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) throw new js__$Boot_HaxeError("No string matched");
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) len = s.length; else if(len < 0) {
		if(pos == 0) len = s.length + len; else return "";
	}
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var cdb_jq_Server = function(root) {
	this.root = root;
	this.nodes = [root];
	this.events = new haxe_ds_IntMap();
};
$hxClasses["cdb.jq.Server"] = cdb_jq_Server;
cdb_jq_Server.__name__ = ["cdb","jq","Server"];
cdb_jq_Server.prototype = {
	send: function(msg) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,dock: function(parent,e,dir,size) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,handleSpecial: function(e,name,args,result) {
	}
	,onMessage: function(msg) {
		var _g = this;
		switch(msg[1]) {
		case 0:
			var attr = msg[4];
			var name = msg[3];
			var id = msg[2];
			var n = window.document.createElement(name);
			if(attr != null) {
				var _g1 = 0;
				while(_g1 < attr.length) {
					var a = attr[_g1];
					++_g1;
					n.setAttribute(a.name,a.value);
				}
			}
			this.nodes[id] = n;
			break;
		case 1:
			var name1 = msg[3];
			var id1 = msg[2];
			this.nodes[id1].classList.add(name1);
			break;
		case 2:
			var name2 = msg[3];
			var id2 = msg[2];
			this.nodes[id2].classList.remove(name2);
			break;
		case 3:
			var to = msg[3];
			var id3 = msg[2];
			this.nodes[to].appendChild(this.nodes[id3]);
			break;
		case 4:
			var pos = msg[4];
			var to3 = msg[3];
			var id4 = msg[2];
			var p = this.nodes[to3];
			p.insertBefore(this.nodes[id4],p.childNodes[pos]);
			break;
		case 5:
			var pid = msg[4];
			var text = msg[3];
			var id5 = msg[2];
			var t = window.document.createTextNode(text);
			this.nodes[id5] = t;
			if(pid != null) this.nodes[pid].appendChild(t);
			break;
		case 6:
			var id6 = msg[2];
			var n6 = this.nodes[id6];
			while(n6.firstChild != null) n6.removeChild(n6.firstChild);
			break;
		case 7:
			var size = msg[5];
			var dir = msg[4];
			var e = msg[3];
			var p6 = msg[2];
			this.dock(this.nodes[p6],this.nodes[e],dir,size);
			break;
		case 8:
			var id7 = msg[2];
			this.nodes[id7].remove();
			break;
		case 9:
			var eid = msg[4];
			var name7 = msg[3];
			var id8 = msg[2];
			var n8 = this.nodes[id8];
			var callb = function(e8) {
				var sendValue = false;
				var props = null;
				switch(name7) {
				case "change":
					sendValue = true;
					break;
				case "blur":
					if(n8.tagName == "INPUT") sendValue = true;
					break;
				case "keydown":
					props = { keyCode : e8.keyCode, shiftKey : e8.shiftKey, ctrlKey : e8.ctrlKey};
					if(n8.tagName == "INPUT") sendValue = true;
					break;
				case "mousedown":case "mouseup":
					props = { which : e8.which};
					break;
				default:
				}
				if(sendValue) _g.send(cdb_jq_Answer.SetValue(id8,"" + Std.string(Reflect.field(n8,"value"))));
				_g.send(cdb_jq_Answer.Event(eid,props));
			};
			this.events.h[eid] = { name : name7, callb : callb, n : n8};
			n8.addEventListener(name7,callb);
			break;
		case 10:
			var val = msg[4];
			var att = msg[3];
			var id9 = msg[2];
			this.nodes[id9].setAttribute(att,val);
			break;
		case 11:
			var val9 = msg[4];
			var s = msg[3];
			var id10 = msg[2];
			this.nodes[id10].style[s] = val9;
			break;
		case 12:
			var s10 = msg[3];
			var id11 = msg[2];
			var n11 = this.nodes[id11];
			var m = Reflect.field(n11,s10);
			if(m == null) throw new js__$Boot_HaxeError(Std.string(n11) + " has no method " + Std.string(m));
			m.apply(n11,[]);
			if(s10 == "focus" && n11.tagName == "SELECT") {
				var event = window.document.createEvent("MouseEvents");
				event.initMouseEvent("mousedown",true,true,window);
				n11.dispatchEvent(event);
			}
			break;
		case 13:
			var eid11 = msg[5];
			var args = msg[4];
			var name11 = msg[3];
			var id12 = msg[2];
			this.handleSpecial(this.nodes[id12],name11,args,eid11 == null?function(_) {
			}:function(v) {
				_g.send(cdb_jq_Answer.Event(eid11,{ value : v}));
			});
			break;
		case 14:
			var duration = msg[4];
			var name12 = msg[3];
			var id13 = msg[2];
			this.handleSpecial(this.nodes[id13],"animate",[name12,duration],null);
			break;
		case 16:
			var eids = msg[2];
			var _g13 = 0;
			while(_g13 < eids.length) {
				var eid13 = eids[_g13];
				++_g13;
				var e13 = this.events.h[eid13];
				if(e13 != null) {
					this.events.remove(eid13);
					e13.n.removeEventListener(e13.name,e13.callb);
				}
			}
			break;
		case 15:
			var eids13 = msg[3];
			var id14 = msg[2];
			this.nodes[id14].remove();
			this.nodes[id14] = null;
			if(eids13 != null) this.onMessage(cdb_jq_Message.Unbind(eids13));
			break;
		}
	}
	,__class__: cdb_jq_Server
};
var JqPage = function(sock) {
	cdb_jq_Server.call(this,window.document.createElement("div"));
	this.sock = sock;
	this.page = window.document.createElement("div");
	this.page.setAttribute("class","jqpage");
	this.page.appendChild(this.root);
	window.document.body.appendChild(this.page);
	this.page.style.visibility = "hidden";
	this.name = "";
	this.panels = new haxe_ds_ObjectMap();
	this.dnodes = new haxe_ds_ObjectMap();
	this.dockManager = new dockspawn.DockManager(this.page);
	this.dockManager.initialize();
	this.dockManager.resize(800,600);
	this.dnodes.set(this.root,this.dockManager.context.model.documentManagerNode);
};
$hxClasses["JqPage"] = JqPage;
JqPage.__name__ = ["JqPage"];
JqPage.__super__ = cdb_jq_Server;
JqPage.prototype = $extend(cdb_jq_Server.prototype,{
	send: function(msg) {
		var bytes = cdb_BinSerializer.doSerialize(msg,560507292);
		var buf = new js_node_buffer_Buffer(bytes.length + 2);
		buf[0] = bytes.length & 255;
		buf[1] = bytes.length >> 8;
		var _g1 = 0;
		var _g = buf.length;
		while(_g1 < _g) {
			var i = _g1++;
			buf[i + 2] = bytes.b[i];
		}
		this.sock.write(buf);
	}
	,dock: function(parent,e,dir,size) {
		var p = this.panels.h[e.__id__];
		if(p == null) {
			p = new dockspawn.PanelContainer(e,this.dockManager);
			this.panels.set(e,p);
		}
		var n = this.dnodes.h[parent.__id__];
		if(n == null) return;
		var n1;
		switch(dir[1]) {
		case 0:
			n1 = this.dockManager.dockLeft(n,p,size);
			break;
		case 1:
			n1 = this.dockManager.dockRight(n,p,size);
			break;
		case 2:
			n1 = this.dockManager.dockUp(n,p,size);
			break;
		case 3:
			n1 = this.dockManager.dockDown(n,p,size);
			break;
		case 4:
			n1 = this.dockManager.dockFill(n,p);
			break;
		}
		this.dnodes.set(e,n1);
	}
	,handleSpecial: function(e,name,args,result) {
		switch(name) {
		case "colorPick":
			var id = Std.random(1);
			e.innerHTML = "<div class=\"modal\" onclick=\"$('#_c" + id + "').spectrum('toggle')\"></div><input type=\"text\" id=\"_c" + id + "\"/>";
			var spect = $("#_c" + id);
			var val = args[0];
			var getColor = function(vcol) {
				return Std.parseInt("0x" + Std.string(vcol.toHex())) | (vcol.getAlpha() * 255 | 0) << 24;
			};
			spect.spectrum({ color : "rgba(" + [val >> 16 & 255,val >> 8 & 255,val & 255,(val >>> 24) / 255].join(",") + ")", showInput : true, showButtons : false, showAlpha : args[1], clickoutFiresChange : true, move : function(vcol1) {
				result({ color : getColor(vcol1), done : false});
			}, change : function(vcol2) {
				spect.spectrum("hide");
				result({ color : getColor(vcol2), done : true});
			}, hide : function(vcol3) {
				result({ color : getColor(vcol3), done : true});
			}}).spectrum("show");
			break;
		case "fileSelect":
			var path = args[0];
			var ext = args[1] == null?[]:args[1].split(",");
			var fs = $("#fileSelect");
			if(path != null && StringTools.startsWith(window.navigator.platform,"Win")) path = path.split("/").join("\\");
			fs.attr("nwworkingdir",path == null?"":new haxe_io_Path(path).dir);
			fs.change(function(_) {
				fs.unbind("change");
				var path3 = fs.val().split("\\").join("/");
				fs.val("");
				if(path3 == "") {
					result(null);
					return;
				}
				fs.attr("nwworkingdir","");
				result(path3);
			}).click();
			break;
		case "animate":
			var j = $(e);
			Reflect.field(j,args[0]).apply(j,[args[1]]);
			break;
		case "setName":
			name = args[0];
			if(this.tab != null) this.tab.text(name);
			break;
		case "popupMenu":
			var args3 = args;
			var n = new js_node_webkit_Menu();
			var _g1 = 0;
			var _g = args3.length;
			while(_g1 < _g) {
				var i = [_g1++];
				var mit = new js_node_webkit_MenuItem({ label : args3[i[0]]});
				n.append(mit);
				mit.click = (function(i3) {
					return function() {
						result(i3[0]);
					};
				})(i);
			}
			n.popup(Main.inst.mousePos.x,Main.inst.mousePos.y);
			break;
		case "startDrag":
			var document = window.document;
			var onMove = function(event) {
				if(document.pointerLockElement != e) return;
				result({ dx : event.movementX, dy : event.movementY});
			};
			var onUp = function() {
				document.exitPointerLock();
			};
			var onChange = null;
			onChange = function() {
				if(document.pointerLockElement == e) {
					document.addEventListener("mousemove",onMove,false);
					document.addEventListener("mouseup",onUp,false);
				} else {
					result({ dx : 0, dy : 0, done : true});
					document.removeEventListener("pointerlockchange",onChange,false);
					document.removeEventListener("mousemove",onMove,false);
					document.removeEventListener("mouseup",onUp,false);
				}
			};
			var onChange3 = onChange;
			document.addEventListener("pointerlockchange",onChange3,false);
			e.requestPointerLock();
			break;
		default:
			throw new js__$Boot_HaxeError("Don't know how to handle " + name + "(" + args.join(",") + ")");
		}
	}
	,__class__: JqPage
});
var JqPages = function(main) {
	this.curPage = -1;
	this.main = main;
	this.pages = [];
	js_node_Net.createServer($bind(this,this.onClient)).listen(6669,"127.0.0.1");
};
$hxClasses["JqPages"] = JqPages;
JqPages.__name__ = ["JqPages"];
JqPages.prototype = {
	updateTabs: function() {
		var _g2 = this;
		var sheets = $("ul#sheets");
		sheets.find("li.client").remove();
		var _g = 0;
		var _g1 = this.pages;
		while(_g < _g1.length) {
			var p = [_g1[_g]];
			++_g;
			var jc = [$("<li>").addClass("client").text(p[0].name == ""?"???":p[0].name).appendTo(sheets)];
			p[0].tab = jc[0];
			jc[0].click((function(jc1,p1) {
				return function(e) {
					_g2.curPage = Lambda.indexOf(_g2.pages,p1[0]);
					$("#sheets li").removeClass("active");
					jc1[0].addClass("active");
					_g2.select();
				};
			})(jc,p));
			if(Lambda.indexOf(this.pages,p[0]) == this.curPage) jc[0].addClass("active");
		}
	}
	,onKey: function(e) {
		this.pages[this.curPage].send(cdb_jq_Answer.Event(-1,{ keyCode : e.keyCode, shiftKey : e.shiftKey, ctrlKey : e.ctrlKey}));
	}
	,select: function() {
		var p = this.pages[this.curPage];
		$("#content").html("").append(p.page);
		p.page.style.visibility = "";
		this.onResize();
	}
	,onResize: function() {
		if(this.curPage >= 0) {
			var p = this.pages[this.curPage];
			p.page.style.width = "100%";
			p.page.style.height = "100%";
			p.dockManager.resize(p.page.clientWidth,p.page.clientHeight - (30 + p.root.clientHeight));
		}
	}
	,onClient: function(sock) {
		var _g = this;
		var p = new JqPage(sock);
		this.pages.push(p);
		this.updateTabs();
		sock.setNoDelay(true);
		sock.on("error",function() {
			sock.end();
		});
		sock.on("close",function() {
			var cur = _g.curPage == Lambda.indexOf(_g.pages,p);
			p.page.remove();
			HxOverrides.remove(_g.pages,p);
			_g.updateTabs();
			if(cur) {
				_g.curPage--;
				_g.main.initContent();
			}
		});
		var curBuffer = null;
		var curPos = 0;
		var size = 0;
		var sizeCount = 0;
		sock.on("data",function(e) {
			var pos = 0;
			while(pos < e.length) if(curBuffer == null) {
				size |= e.readUInt8(pos++) << sizeCount * 8;
				++sizeCount;
				if(sizeCount == 4) {
					curBuffer = new haxe_io_Bytes(new ArrayBuffer(size));
					curPos = 0;
				}
			} else {
				var max = e.length - pos;
				if(max > curBuffer.length - curPos) max = curBuffer.length - curPos;
				var _g1 = 0;
				var _g2 = max;
				while(_g1 < _g2) {
					var i = _g1++;
					curBuffer.b[curPos++] = e.readUInt8(pos++) & 255;
				}
				if(curPos == curBuffer.length) {
					var msg = cdb_BinSerializer.doUnserialize(curBuffer,1522840838);
					p.onMessage(msg);
					switch(msg[1]) {
					case 10:
						switch(msg[2]) {
						case 0:
							switch(msg[3]) {
							case "title":
								var name = msg[4];
								p.tab.text(name);
								break;
							default:
							}
							break;
						default:
						}
						break;
					default:
					}
					curBuffer = null;
					sizeCount = 0;
					size = 0;
				}
			}
		});
	}
	,__class__: JqPages
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var i = tmp.next();
		a.push(i);
	}
	return a;
};
Lambda.list = function(it) {
	var l = new List();
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var i = tmp.next();
		l.add(i);
	}
	return l;
};
Lambda.exists = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var x = tmp.next();
		if(f(x)) return true;
	}
	return false;
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var v2 = tmp.next();
		if(v == v2) return i;
		++i;
	}
	return -1;
};
Lambda.find = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var v = tmp.next();
		if(f(v)) return v;
	}
	return null;
};
var Level = function(model,sheet,index) {
	this.reloading = false;
	this.rotation = 0;
	this.flipMode = false;
	this.startPos = null;
	this.mousePos = { x : 0, y : 0};
	this.zoomView = 1.;
	this.sheet = sheet;
	this.sheetPath = SheetData.getPath(sheet);
	this.index = index;
	this.obj = sheet.lines[index];
	this.model = model;
	this.references = [];
	this.palette = new lvl_Palette(this);
};
$hxClasses["Level"] = Level;
Level.__name__ = ["Level"];
Level.prototype = {
	getName: function() {
		var name = "#" + this.index;
		var _g = 0;
		var _g1 = this.sheet.columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var v = Reflect.field(this.obj,c.name);
			var _g2 = c.type;
			switch(_g2[1]) {
			case 1:
				if(c.name == this.sheet.props.displayColumn && v != null && v != "") return Std.string(v) + "#" + this.index;
				break;
			case 6:
				if(c.name == this.sheet.props.displayColumn && v != null && v != "") return Std.string(v) + "#" + this.index;
				break;
			case 0:
				name = v;
				break;
			default:
			}
		}
		return name;
	}
	,set_mouseCapture: function(e) {
		var _g = this;
		this.mouseCapture = e;
		if(e != null) {
			var onUp = null;
			onUp = function(_) {
				window.document.removeEventListener("mouseup",onUp);
				if(_g.mouseCapture != null) {
					_g.mouseCapture.mouseup();
					_g.set_mouseCapture(null);
				}
			};
			var onUp1 = onUp;
			window.document.addEventListener("mouseup",onUp1);
		}
		return e;
	}
	,init: function() {
		var _g = this;
		this.layers = [];
		this.watchList = [];
		this.watchTimer = new haxe_Timer(50);
		this.watchTimer.run = $bind(this,this.checkWatch);
		var tmp = Level.loadedTilesCache.keys();
		while(tmp.hasNext()) {
			var key = tmp.next();
			this.watchSplit(key);
		}
		this.props = this.obj.props;
		if(this.props == null) {
			this.props = { };
			this.obj.props = this.props;
		}
		if(this.props.tileSize == null) this.props.tileSize = 16;
		this.tileSize = this.props.tileSize;
		var lprops = new haxe_ds_StringMap();
		if(this.props.layers == null) this.props.layers = [];
		var _g1 = 0;
		var _g11 = this.props.layers;
		while(_g1 < _g11.length) {
			var ld = _g11[_g1];
			++_g1;
			var tmp1;
			var key1 = ld.l;
			if(__map_reserved[key1] != null) tmp1 = lprops.getReserved(key1); else tmp1 = lprops.h[key1];
			var prev = tmp1;
			if(prev != null) HxOverrides.remove(this.props.layers,prev);
			var key2 = ld.l;
			if(__map_reserved[key2] != null) lprops.setReserved(key2,ld); else lprops.h[key2] = ld;
		}
		var getProps = function(name) {
			var p = __map_reserved[name] != null?lprops.getReserved(name):lprops.h[name];
			if(p == null) {
				p = { l : name, p : { alpha : 1.}};
				_g.props.layers.push(p);
			}
			lprops.remove(name);
			return p.p;
		};
		this.waitCount = 1;
		var title = "";
		var _g2 = 0;
		var _g12 = this.sheet.columns;
		while(_g2 < _g12.length) {
			var c = _g12[_g2];
			++_g2;
			var val = Reflect.field(this.obj,c.name);
			var _g22 = c.name;
			switch(_g22) {
			case "width":
				this.width = val;
				break;
			case "height":
				this.height = val;
				break;
			default:
			}
			var _g23 = c.type;
			switch(_g23[1]) {
			case 0:
				title = val;
				break;
			case 12:
				var type = _g23[2];
				var l = new lvl_LayerData(this,c.name,getProps(c.name),{ o : this.obj, f : c.name});
				var tmp3;
				var _this = this.model.smap;
				if(__map_reserved[type] != null) tmp3 = _this.getReserved(type); else tmp3 = _this.h[type];
				l.loadSheetData(tmp3.s);
				l.setLayerData(val);
				this.layers.push(l);
				break;
			case 8:
				var tmp4;
				var _this4 = SheetData.model.smap;
				var key4 = this.sheet.name + "@" + c.name;
				if(__map_reserved[key4] != null) tmp4 = _this4.getReserved(key4); else tmp4 = _this4.h[key4];
				var sheet = tmp4.s;
				var floatCoord = false;
				var tmp5;
				if(!(SheetData.hasColumn(sheet,"x",[cdb_ColumnType.TInt]) && SheetData.hasColumn(sheet,"y",[cdb_ColumnType.TInt]))) {
					if(SheetData.hasColumn(sheet,"x",[cdb_ColumnType.TFloat])) floatCoord = SheetData.hasColumn(sheet,"y",[cdb_ColumnType.TFloat]); else floatCoord = false;
					tmp5 = floatCoord;
				} else tmp5 = true;
				if(tmp5) {
					var sid = null;
					var idCol = null;
					var _g3 = 0;
					var _g4 = sheet.columns;
					try {
						while(_g3 < _g4.length) {
							var cid = _g4[_g3];
							++_g3;
							var _g5 = cid.type;
							switch(_g5[1]) {
							case 6:
								var rid = _g5[2];
								var tmp6;
								var _this6 = this.model.smap;
								if(__map_reserved[rid] != null) tmp6 = _this6.getReserved(rid); else tmp6 = _this6.h[rid];
								sid = tmp6.s;
								idCol = cid.name;
								throw "__break__";
								break;
							default:
							}
						}
					} catch( e ) { if( e != "__break__" ) throw e; }
					var l5 = new lvl_LayerData(this,c.name,getProps(c.name),{ o : this.obj, f : c.name});
					l5.hasFloatCoord = l5.floatCoord = floatCoord;
					l5.baseSheet = sheet;
					l5.loadSheetData(sid);
					l5.setObjectsData(idCol,val);
					l5.hasSize = SheetData.hasColumn(sheet,"width",[floatCoord?cdb_ColumnType.TFloat:cdb_ColumnType.TInt]) && SheetData.hasColumn(sheet,"height",[floatCoord?cdb_ColumnType.TFloat:cdb_ColumnType.TInt]);
					this.layers.push(l5);
				} else if(SheetData.hasColumn(sheet,"name",[cdb_ColumnType.TString]) && SheetData.hasColumn(sheet,"data",[cdb_ColumnType.TTileLayer])) {
					var val6 = val;
					var _g36 = 0;
					while(_g36 < val6.length) {
						var lobj = val6[_g36];
						++_g36;
						if(lobj.name == null) continue;
						var l6 = new lvl_LayerData(this,lobj.name,getProps(lobj.name),{ o : lobj, f : "data"});
						l6.setTilesData(lobj.data);
						l6.listColumnn = c;
						this.layers.push(l6);
					}
					this.newLayer = c;
				}
				break;
			case 15:
				var l7 = new lvl_LayerData(this,c.name,getProps(c.name),{ o : this.obj, f : c.name});
				l7.setTilesData(val);
				this.layers.push(l7);
				break;
			default:
			}
		}
		var tmp7 = new haxe_ds__$StringMap_StringMapIterator(lprops,lprops.arrayKeys());
		while(tmp7.hasNext()) {
			var c7 = tmp7.next();
			HxOverrides.remove(this.props.layers,c7);
		}
		if(this.sheet.props.displayColumn != null) {
			var t = Reflect.field(this.obj,this.sheet.props.displayColumn);
			if(t != null) title = t;
		}
		this.palette.init();
		this.waitDone();
	}
	,watchSplit: function(key) {
		var _g = this;
		var file = key.split("@").shift();
		var abs = this.model.getAbsPath(file);
		this.watch(file,function() {
			lvl_Image.load(abs,function(_) {
				Level.loadedTilesCache.remove(key);
				_g.reload();
			},function() {
				var _g1 = 0;
				var _g2 = _g.watchList;
				while(_g1 < _g2.length) {
					var w = _g2[_g1];
					++_g1;
					if(w.path == abs) w.time = 0;
				}
			},true);
		});
	}
	,loadAndSplit: function(file,size,callb) {
		var key = file + "@" + size;
		var tmp;
		var _this = Level.loadedTilesCache;
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		var a = tmp;
		if(a == null) {
			a = { pending : [], data : null};
			var _this1 = Level.loadedTilesCache;
			if(__map_reserved[key] != null) _this1.setReserved(key,a); else _this1.h[key] = a;
			lvl_Image.load(this.model.getAbsPath(file),function(i) {
				var images = [];
				var blanks = [];
				var w = i.width / size | 0;
				var h = i.height / size | 0;
				var _g1 = 0;
				var _g = h;
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = w;
					while(_g3 < _g2) {
						var x = _g3++;
						var i1 = i.sub(x * size,y * size,size,size);
						blanks[images.length] = i1.isBlank();
						images.push(i1);
					}
				}
				a.data = { w : w, h : h, img : images, blanks : blanks};
				var _g4 = 0;
				var _g14 = a.pending;
				while(_g4 < _g14.length) {
					var p = _g14[_g4];
					++_g4;
					p(w,h,images,blanks);
				}
				a.pending = [];
			},function() {
				throw new js__$Boot_HaxeError("Could not load " + file);
			});
			this.watchSplit(key);
		}
		if(a.data != null) callb(a.data.w,a.data.h,a.data.img,a.data.blanks); else a.pending.push(callb);
	}
	,reload: function() {
		if(!this.reloading) {
			this.reloading = true;
			this.model.initContent();
		}
	}
	,allocRef: function(f) {
		var r = { ref : f};
		this.references.push(r);
		return r;
	}
	,dispose: function() {
		if(this.content != null) this.content.html("");
		if(this.view != null) {
			this.view.dispose();
			this.view.viewport.parentNode.removeChild(this.view.viewport);
			this.view = null;
			var _g = 0;
			var _g1 = this.references;
			while(_g < _g1.length) {
				var r = _g1[_g];
				++_g;
				r.ref = null;
			}
		}
		this.watchTimer.stop();
		this.watchTimer = null;
	}
	,isDisposed: function() {
		return this.watchTimer == null;
	}
	,watch: function(path,callb) {
		path = this.model.getAbsPath(path);
		var _g = 0;
		var _g1 = this.watchList;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			if(w.path == path) {
				w.callb.push(callb);
				return;
			}
		}
		this.watchList.push({ path : path, time : this.getFileTime(path), callb : [callb]});
	}
	,checkWatch: function() {
		var _g = 0;
		var _g1 = this.watchList;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			var f = this.getFileTime(w.path);
			if(f != w.time && f != 0.) {
				w.time = f;
				js_node_webkit_App.clearCache();
				var _g2 = 0;
				var _g3 = w.callb;
				while(_g2 < _g3.length) {
					var c = _g3[_g2];
					++_g2;
					c();
				}
			}
		}
	}
	,getFileTime: function(path) {
		try {
			return js_node_Fs.statSync(path).mtime.getTime();
		} catch( e ) {
			return 0.;
		}
	}
	,wait: function() {
		this.waitCount++;
	}
	,waitDone: function() {
		if(--this.waitCount != 0) return;
		if(this.isDisposed()) return;
		this.setup();
		var layer = this.layers[0];
		var state;
		try {
			state = haxe_Unserializer.run(js_Browser.getLocalStorage().getItem(this.sheetPath + "#" + this.index));
		} catch( e ) {
			state = null;
		}
		if(state != null) {
			var _g = 0;
			var _g1 = this.layers;
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				if(l.name == state.curLayer) {
					layer = l;
					break;
				}
			}
			this.zoomView = state.zoomView;
			this.palette.paintMode = state.paintMode;
			this.palette.randomMode = state.randomMode;
			this.palette.mode = state.paletteMode;
			this.palette.modeCursor = state.paletteModeCursor;
			this.palette.small = state.smallPalette;
			this.flipMode = state.flipMode;
			this.rotation = state.rotation;
			if(this.rotation == null) this.rotation = 0;
			if(this.palette.small == null) this.palette.small = false;
		}
		this.setLayer(layer);
		this.updateZoom();
		var sc = this.content.find(".scroll");
		if(state != null) {
			sc.scrollLeft(state.scrollX);
			sc.scrollTop(state.scrollY);
		}
		sc.scroll();
	}
	,toColor: function(v) {
		return "#" + StringTools.hex(v,6);
	}
	,hasHole: function(i,x,y) {
		var _g = -1;
		while(_g < 2) {
			var dx = _g++;
			var _g1 = -1;
			while(_g1 < 2) {
				var dy = _g1++;
				var x1 = x + dx;
				var y1 = y + dy;
				if(x1 >= 0 && y1 >= 0 && x1 < i.width && y1 < i.height && i.getPixel(x1,y1) >>> 24 != 0) return false;
			}
		}
		return true;
	}
	,pick: function(filter) {
		if(this.curPos == null) return null;
		var i = this.layers.length - 1;
		while(i >= 0) {
			var l = this.layers[i--];
			if(!l.enabled() || filter != null && !filter(l)) continue;
			var x = this.curPos.xf;
			var y = this.curPos.yf;
			var ix = (x - this.curPos.x) * this.tileSize | 0;
			var iy = (y - this.curPos.y) * this.tileSize | 0;
			var _g = l.data;
			switch(_g[1]) {
			case 0:
				var data = _g[2];
				var idx = this.curPos.x + this.curPos.y * this.width;
				var k = data[idx];
				if(k == 0 && i >= 0) continue;
				if(l.images != null) {
					var i1 = l.images[k];
					if(this.hasHole(i1,ix + (i1.width - this.tileSize >> 1),iy + (i1.height - this.tileSize))) continue;
				}
				return { k : k, layer : l, index : idx};
			case 1:
				var objs = [_g[3]];
				var idCol = _g[2];
				if(l.images == null) {
					var found = [];
					var _g2 = 0;
					var _g1 = objs[0].length;
					while(_g2 < _g1) {
						var i2 = _g2++;
						var o = objs[0][i2];
						var w = l.hasSize?o.width:1;
						var h = l.hasSize?o.height:1;
						if(x >= o.x && y >= o.y && x < o.x + w && y < o.y + h) {
							if(l.idToIndex == null) found.push({ k : 0, layer : l, index : i2}); else {
								var tmp;
								var key = Reflect.field(o,idCol);
								var _this = l.idToIndex;
								if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
								found.push({ k : tmp, layer : l, index : i2});
							}
						}
					}
					if(l.hasSize) found.sort((function(objs2) {
						return function(f1,f2) {
							var o1 = objs2[0][f1.index];
							var o2 = objs2[0][f2.index];
							return Reflect.compare(o2.width * o2.height,o1.width * o1.height);
						};
					})(objs));
					if(found.length > 0) return found.pop();
				} else {
					var max = objs[0].length - 1;
					var _g22 = 0;
					var _g12 = objs[0].length;
					while(_g22 < _g12) {
						var i3 = _g22++;
						var i4 = max - i3;
						var o4 = objs[0][i4];
						var k4;
						var key4 = Reflect.field(o4,idCol);
						var _this4 = l.idToIndex;
						if(__map_reserved[key4] != null) k4 = _this4.getReserved(key4); else k4 = _this4.h[key4];
						if(k4 == null) continue;
						var img = l.images[k4];
						var w4 = img.width / this.tileSize;
						var h4 = img.height / this.tileSize;
						var ox = o4.x - (w4 - 1) * 0.5;
						var oy = o4.y - (h4 - 1);
						if(x >= ox && y >= oy && x < ox + w4 && y < oy + h4 && !this.hasHole(img,(x - ox) * this.tileSize | 0,(y - oy) * this.tileSize | 0)) return { k : k4, layer : l, index : i4};
					}
				}
				break;
			case 2:
				var data4 = _g[3];
				var idx4 = this.curPos.x + this.curPos.y * this.width;
				var k5 = data4[idx4] - 1;
				if(k5 < 0) continue;
				var i5 = l.images[k5];
				if(i5.getPixel(ix,iy) >>> 24 == 0) continue;
				return { k : k5, layer : l, index : idx4};
			case 3:
				var insts = _g[3];
				var objs5 = l.getTileObjects();
				var idx5 = insts.length;
				while(idx5 > 0) {
					var i6 = insts[--idx5];
					var o6 = objs5.h[i6.o];
					if(x >= i6.x && y >= i6.y && x < i6.x + (o6 == null?1:o6.w) && y < i6.y + (o6 == null?1:o6.h)) {
						var im = l.images[i6.o + (x - i6.x | 0) + (y - i6.y | 0) * l.stride];
						if(this.hasHole(im,ix,iy)) continue;
						return { k : i6.o, layer : l, index : idx5};
					}
				}
				break;
			}
		}
		return null;
	}
	,action: function(name,val) {
		var _g = this;
		var l = this.currentLayer;
		switch(name) {
		case "close":
			(js_Boot.__cast(this.model , Main)).closeLevel(this);
			break;
		case "options":
			var opt = this.content.find(".submenu.options");
			var hide = opt["is"](":visible");
			this.content.find(".submenu").hide();
			if(hide) this.content.find(".submenu.layer").show(); else {
				opt.show();
				this.content.find("[name=tileSize]").val("" + this.tileSize);
			}
			break;
		case "layer":
			if(this.newLayer == null) return;
			var opt1 = this.content.find(".submenu.newlayer");
			var hide1 = opt1["is"](":visible");
			this.content.find(".submenu").hide();
			if(hide1) this.content.find(".submenu.layer").show(); else {
				opt1.show();
				this.content.find("[name=newName]").val("");
			}
			break;
		case "file":
			var m = js_Boot.__cast(this.model , Main);
			m.chooseFile(function(path) {
				var _g1 = _g.currentLayer.data;
				switch(_g1[1]) {
				case 2:
					var t = _g1[2];
					if(t.file == null) {
						var size = _g.props.tileSize;
						t.stride = t.size * t.stride / size | 0;
						t.size = size;
					}
					t.file = path;
					_g.currentLayer.dirty = true;
					_g.save();
					_g.reload();
					break;
				case 3:
					var t1 = _g1[2];
					if(t1.file == null) {
						var size1 = _g.props.tileSize;
						t1.stride = t1.size * t1.stride / size1 | 0;
						t1.size = size1;
					}
					t1.file = path;
					_g.currentLayer.dirty = true;
					_g.save();
					_g.reload();
					break;
				default:
				}
			});
			break;
		case "lock":
			l.lock = val;
			l.comp.toggleClass("locked",l.lock);
			l.saveState();
			break;
		case "lockGrid":
			l.floatCoord = l.hasFloatCoord && !val;
			l.saveState();
			break;
		case "visible":
			l.set_visible(val);
			l.saveState();
			this.draw();
			break;
		case "alpha":
			l.props.alpha = val / 100;
			this.model.save(false);
			this.draw();
			break;
		case "size":
			var _g2 = l.data;
			switch(_g2[1]) {
			case 2:
				var t2 = _g2[2];
				var size2 = val;
				t2.stride = t2.size * t2.stride / size2 | 0;
				t2.size = size2;
				l.dirty = true;
				this.save();
				this.reload();
				break;
			case 3:
				var t3 = _g2[2];
				var size3 = val;
				t3.stride = t3.size * t3.stride / size3 | 0;
				t3.size = size3;
				l.dirty = true;
				this.save();
				this.reload();
				break;
			default:
			}
			break;
		case "mode":
			this.setLayerMode(val);
			break;
		}
		$(":focus").blur();
	}
	,addNewLayer: function(name) {
		var _g = this.newLayer.type;
		switch(_g[1]) {
		case 8:
			var tmp;
			var _this = SheetData.model.smap;
			var key = this.sheet.name + "@" + this.newLayer.name;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			var s = tmp.s;
			var o = { name : null, data : null};
			var _g1 = 0;
			var _g2 = s.columns;
			while(_g1 < _g2.length) {
				var c = _g2[_g1];
				++_g1;
				var v = this.model.getDefault(c);
				if(v != null) o[c.name] = v;
			}
			var a = Reflect.field(this.obj,this.newLayer.name);
			o.name = name;
			a.push(o);
			var n = a.length - 2;
			while(n >= 0) {
				var o2 = a[n--];
				if(o2.data != null) {
					var _g11 = [];
					var _g3 = 0;
					var _g21 = this.width * this.height;
					while(_g3 < _g21) {
						var k = _g3++;
						_g11.push(0);
					}
					var a1 = cdb__$Types_TileLayerData_$Impl_$.encode(_g11,this.model.compressionEnabled());
					o.data = { file : o2.data.file, size : o2.data.size, stride : o2.data.stride, data : a1};
					break;
				}
			}
			this.props.layers.push({ l : name, p : { alpha : 1.}});
			this.currentLayer = { name : name};
			this.savePrefs();
			this.save();
			this.reload();
			break;
		default:
		}
	}
	,popupLayer: function(l,mouseX,mouseY) {
		var _g = this;
		this.setLayer(l);
		var n = new js_node_webkit_Menu();
		var nclear = new js_node_webkit_MenuItem({ label : "Clear"});
		var ndel = new js_node_webkit_MenuItem({ label : "Delete"});
		var nshow = new js_node_webkit_MenuItem({ label : "Show Only"});
		var nshowAll = new js_node_webkit_MenuItem({ label : "Show All"});
		var nrename = new js_node_webkit_MenuItem({ label : "Rename"});
		var _g1 = 0;
		var _g11 = [nshow,nshowAll,nrename,nclear,ndel];
		while(_g1 < _g11.length) {
			var m = _g11[_g1];
			++_g1;
			n.append(m);
		}
		nclear.click = function() {
			var _g2 = l.data;
			switch(_g2[1]) {
			case 2:
				var data = _g2[3];
				var _g22 = 0;
				var _g12 = data.length;
				while(_g22 < _g12) {
					var i = _g22++;
					data[i] = 0;
				}
				break;
			case 1:
				var objs = _g2[3];
				while(objs.length > 0) objs.pop();
				break;
			case 0:
				var data2 = _g2[2];
				var _g23 = 0;
				var _g13 = data2.length;
				while(_g23 < _g13) {
					var i3 = _g23++;
					data2[i3] = 0;
				}
				break;
			case 3:
				var insts = _g2[3];
				while(insts.length > 0) insts.pop();
				break;
			}
			l.dirty = true;
			_g.save();
			_g.draw();
		};
		ndel.enabled = l.listColumnn != null;
		ndel.click = function() {
			var layers = Reflect.field(_g.obj,l.listColumnn.name);
			HxOverrides.remove(layers,l.targetObj.o);
			_g.save();
			_g.reload();
		};
		nshow.click = function() {
			var _g14 = 0;
			var _g24 = _g.layers;
			while(_g14 < _g24.length) {
				var l2 = _g24[_g14];
				++_g14;
				l2.set_visible(l == l2);
				l2.saveState();
			}
			_g.draw();
		};
		nshowAll.click = function() {
			var _g15 = 0;
			var _g25 = _g.layers;
			while(_g15 < _g25.length) {
				var l25 = _g25[_g15];
				++_g15;
				l25.set_visible(true);
				l25.saveState();
			}
			_g.draw();
		};
		nrename.click = function() {
			l.comp.find("span").remove();
			l.comp.prepend($("<input type='text'>").val(l.name).focus().blur(function(_) {
				var n5 = StringTools.trim($(this).val());
				var _g16 = 0;
				var _g26 = _g.props.layers;
				while(_g16 < _g26.length) {
					var p = _g26[_g16];
					++_g16;
					if(p.l == n5) {
						_g.reload();
						return;
					}
				}
				var _g17 = 0;
				var _g27 = _g.props.layers;
				while(_g17 < _g27.length) {
					var p7 = _g27[_g17];
					++_g17;
					if(p7.l == l.name) p7.l = n5;
				}
				var layers5 = Reflect.field(_g.obj,_g.newLayer.name);
				var _g18 = 0;
				while(_g18 < layers5.length) {
					var l28 = layers5[_g18];
					++_g18;
					if(l28.name == l.name) l28.name = n5;
				}
				l.name = n5;
				_g.currentLayer = null;
				_g.setLayer(l);
				_g.save();
				_g.reload();
			}).keypress(function(e) {
				if(e.keyCode == 13) $(this).blur();
			}));
		};
		nrename.enabled = ndel.enabled;
		n.popup(mouseX,mouseY);
	}
	,onResize: function() {
		var win = js_node_webkit_Window.get();
		this.content.find(".scroll").css("height",win.height - 240 + "px");
	}
	,setSort: function(j,callb) {
		j.sortable({ vertical : false, onDrop : function(item,container,_super) {
			_super(item,container);
			callb.ref(null);
		}});
	}
	,spectrum: function(j,options,change,show) {
		options.change = function(c) {
			change.ref(Std.parseInt("0x" + c.toHex()));
		};
		if(show != null) options.show = function() {
			show.ref(null);
		};
		j.spectrum(options);
	}
	,setup: function() {
		var _g3 = this;
		var page = $("#content");
		page.html("");
		this.content = $($("#levelContent").html()).appendTo(page);
		var mlayers = this.content.find(".layers");
		var _g14 = 0;
		var _g4 = this.layers.length;
		while(_g14 < _g4) {
			var index = _g14++;
			var l4 = [this.layers[index]];
			var td = $("<li class='item layer'>").appendTo(mlayers);
			l4[0].comp = td;
			td.data("index",index);
			if(!l4[0].visible) td.addClass("hidden");
			if(l4[0].lock) td.addClass("locked");
			td.mousedown((function(l5) {
				return function(e) {
					var _g25 = e.which;
					switch(_g25) {
					case 1:
						_g3.palette.mode = null;
						_g3.setLayer(l5[0]);
						break;
					case 3:
						_g3.popupLayer(l5[0],(function($this) {
							var $r;
							var x = e.pageX;
							$r = x | 0;
							return $r;
						}(this)),(function($this) {
							var $r;
							var x5 = e.pageY;
							$r = x5 | 0;
							return $r;
						}(this)));
						e.preventDefault();
						break;
					}
				};
			})(l4));
			$("<span>").text(l4[0].name).appendTo(td);
			if(l4[0].images != null) {
				td.find("span").css("margin-top","10px");
				continue;
			}
			var id = Level.UID++;
			var t = $("<input type=\"text\" id=\"_" + Level.UID++ + "\">").appendTo(td);
			this.spectrum(t,{ color : this.toColor(l4[0].colors[l4[0].current]), clickoutFiresChange : true, showButtons : false, showPaletteOnly : true, showPalette : true, palette : (function($this) {
				var $r;
				var _g26 = [];
				{
					var _g36 = 0;
					var _g46 = l4[0].colors;
					while(_g36 < _g46.length) {
						var c = _g46[_g36];
						++_g36;
						_g26.push($this.toColor(c));
					}
				}
				$r = _g26;
				return $r;
			}(this))},this.allocRef((function(l6) {
				return function(color) {
					var _g47 = 0;
					var _g37 = l6[0].colors.length;
					while(_g47 < _g37) {
						var i7 = _g47++;
						if(l6[0].colors[i7] == color) {
							l6[0].set_current(i7);
							_g3.setLayer(l6[0]);
							return;
						}
					}
					_g3.setLayer(l6[0]);
				};
			})(l4)),this.allocRef((function(l7) {
				return function(_7) {
					_g3.setLayer(l7[0]);
				};
			})(l4)));
		}
		var callb = this.allocRef(function(_) {
			var indexes = [];
			var _this = mlayers.find("li");
			var _g_i = 0;
			var _g_j = _this;
			while(_g_i < _g_j.length) {
				var i = $(_g_j[_g_i++]);
				indexes.push(i.data("index"));
			}
			_g3.layers = (function($this) {
				var $r;
				var _g = [];
				{
					var _g2 = 0;
					var _g1 = _g3.layers.length;
					while(_g2 < _g1) {
						var i1 = _g2++;
						_g.push(_g3.layers[indexes[i1]]);
					}
				}
				$r = _g;
				return $r;
			}(this));
			var _g21 = 0;
			var _g11 = _g3.layers.length;
			while(_g21 < _g11) {
				var i2 = _g21++;
				_g3.layers[i2].comp.data("index",i2);
			}
			var groups = new haxe_ds_StringMap();
			var _g12 = 0;
			var _g22 = _g3.layers;
			while(_g12 < _g22.length) {
				var l = _g22[_g12];
				++_g12;
				if(l.listColumnn == null) continue;
				var g = (function($this) {
					var $r;
					var key = l.listColumnn.name;
					$r = __map_reserved[key] != null?groups.getReserved(key):groups.h[key];
					return $r;
				}(this));
				if(g == null) {
					g = [];
					var key2 = l.listColumnn.name;
					if(__map_reserved[key2] != null) groups.setReserved(key2,g); else groups.h[key2] = g;
				}
				g.push(l);
			}
			var $it0 = groups.keys();
			while( $it0.hasNext() ) {
				var g2 = $it0.next();
				var layers = __map_reserved[g2] != null?groups.getReserved(g2):groups.h[g2];
				var objs = (function($this) {
					var $r;
					var _g13 = [];
					{
						var _g23 = 0;
						while(_g23 < layers.length) {
							var l3 = layers[_g23];
							++_g23;
							_g13.push(l3.targetObj.o);
						}
					}
					$r = _g13;
					return $r;
				}(this));
				var o = _g3.obj;
				o[g2] = objs;
			}
			_g3.save();
			_g3.draw();
		});
		this.setSort(mlayers,callb);
		this.content.find("[name=newlayer]").css({ display : this.newLayer != null?"block":"none"});
		var scroll = this.content.find(".scroll");
		var scont = this.content.find(".scrollContent");
		this.view = lvl_Image3D.getInstance();
		scont.append(this.view.viewport);
		scroll.scroll(function(_8) {
			_g3.savePrefs();
			_g3.view.setScrollPos(scroll.scrollLeft() - 20,scroll.scrollTop() - 20);
		});
		scroll[0].onmousewheel = function(e8) {
			if(e8.shiftKey) _g3.updateZoom(e8.wheelDelta > 0);
		};
		this.spectrum(this.content.find("[name=color]"),{ clickoutFiresChange : true, showButtons : false},this.allocRef(function(c8) {
			_g3.currentLayer.props.color = c8;
			_g3.save();
			_g3.draw();
		}));
		this.onResize();
		this.cursor = this.content.find("#cursor");
		this.cursorImage = new lvl_Image(0,0);
		this.cursorImage.set_smooth(false);
		this.tmpImage = new lvl_Image(0,0);
		this.cursor[0].appendChild(this.cursorImage.getCanvas());
		this.cursor.hide();
		scont.mouseleave(function(_9) {
			_g3.curPos = null;
			if(_g3.selection == null) _g3.cursor.hide();
			$(".cursorPosition").text("");
		});
		scont.mousemove(function(e9) {
			_g3.mousePos.x = (function($this) {
				var $r;
				var x9 = e9.pageX;
				$r = x9 | 0;
				return $r;
			}(this));
			_g3.mousePos.y = (function($this) {
				var $r;
				var x10 = e9.pageY;
				$r = x10 | 0;
				return $r;
			}(this));
			_g3.updateCursorPos();
		});
		var onMouseUp = function(_3) {
			_g3.mouseDown = null;
			if(_g3.currentLayer != null && _g3.currentLayer.hasSize) _g3.setCursor();
			if(_g3.needSave) _g3.save();
		};
		scroll.mousedown(function(e10) {
			if(_g3.palette.mode != null) {
				_g3.palette.mode = null;
				_g3.setCursor();
				return;
			}
			var _g10 = e10.which;
			switch(_g10) {
			case 1:
				var l10 = _g3.currentLayer;
				if(l10 == null) return;
				var o10 = l10.getSelObjects()[0];
				var w = o10 == null?_g3.currentLayer.currentWidth:o10.w;
				var h = o10 == null?_g3.currentLayer.currentHeight:o10.h;
				if(o10 == null && _g3.palette.randomMode) w = h = 1;
				_g3.mouseDown = { rx : _g3.curPos == null?0:_g3.curPos.x % w, ry : _g3.curPos == null?0:_g3.curPos.y % h, w : w, h : h};
				_g3.set_mouseCapture(scroll);
				if(_g3.curPos != null) {
					_g3.set(_g3.curPos.x,_g3.curPos.y,e10.ctrlKey);
					_g3.startPos = Reflect.copy(_g3.curPos);
				}
				break;
			case 3:
				if(_g3.selection != null) {
					_g3.clearSelection();
					_g3.draw();
					return;
				}
				var p = _g3.pick();
				if(p != null) {
					p.layer.set_current(p.k);
					{
						var _g110 = p.layer.data;
						switch(_g110[1]) {
						case 3:
							var insts = _g110[3];
							var i10 = insts[p.index];
							var obj = (function($this) {
								var $r;
								var this10 = p.layer.getTileObjects();
								var key10 = i10.o;
								$r = this10.get(key10);
								return $r;
							}(this));
							if(obj != null) {
								p.layer.currentWidth = obj.w;
								p.layer.currentHeight = obj.h;
								p.layer.saveState();
							}
							_g3.flipMode = i10.flip;
							_g3.rotation = i10.rot;
							break;
						default:
						}
					}
					_g3.setLayer(p.layer);
				}
				break;
			}
		});
		this.content.mouseup(function(e11) {
			_g3.set_mouseCapture(null);
			onMouseUp(e11);
			if(_g3.curPos == null) {
				_g3.startPos = null;
				return;
			}
			if(e11.which == 1 && _g3.selection == null && _g3.currentLayer.enabled() && _g3.curPos.x >= 0 && _g3.curPos.y >= 0) _g3.setObject();
			_g3.startPos = null;
			if(_g3.selection != null) {
				_g3.moveSelection();
				_g3.save();
				_g3.draw();
			}
		});
	}
	,setObject: function() {
		var _g = this.currentLayer.data;
		switch(_g[1]) {
		case 1:
			var objs = _g[3];
			var idCol = _g[2];
			var l = this.currentLayer;
			var fc = l.floatCoord;
			var px = fc?this.curPos.xf:this.curPos.x;
			var py = fc?this.curPos.yf:this.curPos.y;
			var w = 0.;
			var h = 0.;
			if(l.hasSize) {
				if(this.startPos == null) return;
				var sx = fc?this.startPos.xf:this.startPos.x;
				var sy = fc?this.startPos.yf:this.startPos.y;
				w = px - sx;
				h = py - sy;
				px = sx;
				py = sy;
				if(w < 0) {
					px += w;
					w = -w;
				}
				if(h < 0) {
					py += h;
					h = -h;
				}
				if(!fc) {
					++w;
					++h;
				}
				if(w < 0.5) {
					if(fc) w = 0.5; else w = 1;
				}
				if(h < 0.5) {
					if(fc) h = 0.5; else h = 1;
				}
			}
			var _g2 = 0;
			var _g1 = objs.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var o1 = objs[i];
				if(o1.x == px && o1.y == py && w <= 1 && h <= 1) {
					this.editProps(l,i);
					this.setCursor();
					return;
				}
			}
			var o = { x : px, y : py};
			objs.push(o);
			if(idCol != null) o[idCol] = l.indexToId[this.currentLayer.current];
			var _g11 = 0;
			var _g21 = l.baseSheet.columns;
			while(_g11 < _g21.length) {
				var c = _g21[_g11];
				++_g11;
				if(c.opt || c.name == "x" || c.name == "y" || c.name == idCol) continue;
				var v = this.model.getDefault(c);
				if(v != null) o[c.name] = v;
			}
			if(l.hasSize) {
				o.width = w;
				o.height = h;
				this.setCursor();
			}
			objs.sort(function(o11,o2) {
				var r = Reflect.compare(o11.y,o2.y);
				if(r == 0) return Reflect.compare(o11.x,o2.x); else return r;
			});
			if(this.hasProps(l,true)) this.editProps(l,Lambda.indexOf(objs,o));
			this.save();
			this.draw();
			break;
		default:
		}
	}
	,deleteSelection: function() {
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(!l.enabled()) continue;
			l.dirty = true;
			var sx = this.selection.x;
			var sy = this.selection.y;
			var sw = this.selection.w;
			var sh = this.selection.h;
			var _g2 = l.data;
			switch(_g2[1]) {
			case 0:
				var data = _g2[2];
				var sx1 = this.selection.x | 0;
				var sy1 = this.selection.y | 0;
				var sw1 = Math.ceil(this.selection.x + this.selection.w) - sx1;
				var sh1 = Math.ceil(this.selection.y + this.selection.h) - sy1;
				var _g4 = 0;
				var _g3 = sw1;
				while(_g4 < _g3) {
					var dx = _g4++;
					var _g6 = 0;
					var _g5 = sh1;
					while(_g6 < _g5) {
						var dy = _g6++;
						data[sx1 + dx + (sy1 + dy) * this.width] = 0;
					}
				}
				break;
			case 2:
				var data1 = _g2[3];
				var sx2 = this.selection.x | 0;
				var sy2 = this.selection.y | 0;
				var sw2 = Math.ceil(this.selection.x + this.selection.w) - sx2;
				var sh2 = Math.ceil(this.selection.y + this.selection.h) - sy2;
				var _g42 = 0;
				var _g32 = sw2;
				while(_g42 < _g32) {
					var dx2 = _g42++;
					var _g62 = 0;
					var _g52 = sh2;
					while(_g62 < _g52) {
						var dy2 = _g62++;
						data1[sx2 + dx2 + (sy2 + dy2) * this.width] = 0;
					}
				}
				break;
			case 3:
				var insts = _g2[3];
				var objs = l.getTileObjects();
				var _g33 = 0;
				var _g43 = insts.slice();
				while(_g33 < _g43.length) {
					var i = _g43[_g33];
					++_g33;
					var o = objs.h[i.o];
					var ow = o == null?1:o.w;
					var oh = o == null?1:o.h;
					if(sx + sw <= i.x || sy + sh <= i.y || sx >= i.x + ow || sy >= i.y + oh) continue;
					HxOverrides.remove(insts,i);
				}
				break;
			case 1:
				var objs3 = _g2[3];
				var _g34 = 0;
				var _g44 = objs3.slice();
				while(_g34 < _g44.length) {
					var o4 = _g44[_g34];
					++_g34;
					var ow4 = l.hasSize?o4.width:1;
					var oh4 = l.hasSize?o4.height:1;
					if(sx + sw <= o4.x || sy + sh <= o4.y || sx >= o4.x + ow4 || sy >= o4.y + oh4) continue;
					HxOverrides.remove(objs3,o4);
				}
				break;
			}
		}
	}
	,moveSelection: function() {
		var dx = this.selection.x - this.selection.sx;
		var dy = this.selection.y - this.selection.sy;
		if(dx == 0 && dy == 0) return;
		var ix = dx | 0;
		var iy = dy | 0;
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(!l.enabled()) continue;
			var sx = this.selection.x;
			var sy = this.selection.y;
			var sw = this.selection.w;
			var sh = this.selection.h;
			l.dirty = true;
			var _g2 = l.data;
			switch(_g2[1]) {
			case 2:
				var data = _g2[3];
				var sx1 = this.selection.x | 0;
				var sy1 = this.selection.y | 0;
				var sw1 = Math.ceil(this.selection.x + this.selection.w) - sx1;
				var sh1 = Math.ceil(this.selection.y + this.selection.h) - sy1;
				var ndata = [];
				var _g4 = 0;
				var _g3 = this.height;
				while(_g4 < _g3) {
					var y = _g4++;
					var _g6 = 0;
					var _g5 = this.width;
					while(_g6 < _g5) {
						var x = _g6++;
						var k;
						if(x >= sx1 && x < sx1 + sw1 && y >= sy1 && y < sy1 + sh1) {
							var tx = x - ix;
							var ty = y - iy;
							if(tx >= 0 && tx < this.width && ty >= 0 && ty < this.height) k = data[tx + ty * this.width]; else k = 0;
							if(k == 0 && !(x >= sx1 - ix && x < sx1 + sw1 - ix && y >= sy1 - iy && y < sy1 + sh1 - iy)) k = data[x + y * this.width];
						} else if(x >= sx1 - ix && x < sx1 + sw1 - ix && y >= sy1 - iy && y < sy1 + sh1 - iy) k = 0; else k = data[x + y * this.width];
						ndata.push(k);
					}
				}
				var _g41 = 0;
				var _g31 = data.length;
				while(_g41 < _g31) {
					var i = _g41++;
					data[i] = ndata[i];
				}
				break;
			case 0:
				var data1 = _g2[2];
				var sx2 = this.selection.x | 0;
				var sy2 = this.selection.y | 0;
				var sw2 = Math.ceil(this.selection.x + this.selection.w) - sx2;
				var sh2 = Math.ceil(this.selection.y + this.selection.h) - sy2;
				var ndata2 = [];
				var _g42 = 0;
				var _g32 = this.height;
				while(_g42 < _g32) {
					var y2 = _g42++;
					var _g62 = 0;
					var _g52 = this.width;
					while(_g62 < _g52) {
						var x2 = _g62++;
						var k2;
						if(x2 >= sx2 && x2 < sx2 + sw2 && y2 >= sy2 && y2 < sy2 + sh2) {
							var tx2 = x2 - ix;
							var ty2 = y2 - iy;
							if(tx2 >= 0 && tx2 < this.width && ty2 >= 0 && ty2 < this.height) k2 = data1[tx2 + ty2 * this.width]; else k2 = 0;
							if(k2 == 0 && !(x2 >= sx2 - ix && x2 < sx2 + sw2 - ix && y2 >= sy2 - iy && y2 < sy2 + sh2 - iy)) k2 = data1[x2 + y2 * this.width];
						} else if(x2 >= sx2 - ix && x2 < sx2 + sw2 - ix && y2 >= sy2 - iy && y2 < sy2 + sh2 - iy) k2 = 0; else k2 = data1[x2 + y2 * this.width];
						ndata2.push(k2);
					}
				}
				var _g43 = 0;
				var _g33 = data1.length;
				while(_g43 < _g33) {
					var i3 = _g43++;
					data1[i3] = ndata2[i3];
				}
				break;
			case 3:
				var insts = _g2[3];
				sx -= dx;
				sy -= dy;
				var objs = l.getTileObjects();
				var _g34 = 0;
				var _g44 = insts.slice();
				while(_g34 < _g44.length) {
					var i4 = _g44[_g34];
					++_g34;
					var o = objs.h[i4.o];
					var ow = o == null?1:o.w;
					var oh = o == null?1:o.h;
					if(sx + sw <= i4.x || sy + sh <= i4.y || sx >= i4.x + ow || sy >= i4.y + oh) continue;
					i4.x += l.hasFloatCoord?dx:ix;
					i4.y += l.hasFloatCoord?dy:iy;
					if(i4.x < 0 || i4.y < 0 || i4.x >= this.width || i4.y >= this.height) HxOverrides.remove(insts,i4);
				}
				break;
			case 1:
				var objs4 = _g2[3];
				sx -= dx;
				sy -= dy;
				var _g35 = 0;
				var _g45 = objs4.slice();
				while(_g35 < _g45.length) {
					var o5 = _g45[_g35];
					++_g35;
					var ow5 = l.hasSize?o5.width:1;
					var oh5 = l.hasSize?o5.height:1;
					if(sx + sw <= o5.x || sy + sh <= o5.y || sx >= o5.x + ow5 || sy >= o5.y + oh5) continue;
					o5.x += l.hasFloatCoord?dx:ix;
					o5.y += l.hasFloatCoord?dy:iy;
					if(o5.x < 0 || o5.y < 0 || o5.x >= this.width || o5.y >= this.height) HxOverrides.remove(objs4,o5);
				}
				break;
			}
		}
		this.save();
		this.draw();
	}
	,updateCursorPos: function() {
		if(this.currentLayer == null) return;
		var off = $(this.view.getCanvas()).parent().offset();
		var cxf = ((this.mousePos.x - off.left) / this.zoomView | 0) / this.tileSize;
		var cyf = ((this.mousePos.y - off.top) / this.zoomView | 0) / this.tileSize;
		var cx = cxf | 0;
		var cy = cyf | 0;
		if(cx < this.width && cy < this.height) {
			this.cursor.show();
			var fc = this.currentLayer.floatCoord;
			var border = 0;
			var ccx = fc?cxf:cx;
			var ccy = fc?cyf:cy;
			if(ccx < 0) ccx = 0;
			if(ccy < 0) ccy = 0;
			if(fc) {
				if(ccx > this.width) ccx = this.width;
				if(ccy > this.height) ccy = this.height;
			} else {
				if(ccx >= this.width) ccx = this.width - 1;
				if(ccy >= this.height) ccy = this.height - 1;
			}
			if(this.currentLayer.hasSize && this.mouseDown != null) {
				var px = fc?this.startPos.xf:this.startPos.x;
				var py = fc?this.startPos.yf:this.startPos.y;
				var pw = (fc?cxf:cx) - px;
				var ph = (fc?cyf:cy) - py;
				if(pw < 0) {
					px += pw;
					pw = -pw;
				}
				if(ph < 0) {
					py += ph;
					ph = -ph;
				}
				if(!fc) {
					++pw;
					++ph;
				}
				if(pw < 0.5) {
					if(fc) pw = 0.5; else pw = 1;
				}
				if(ph < 0.5) {
					if(fc) ph = 0.5; else ph = 1;
				}
				ccx = px;
				ccy = py;
				this.cursorImage.setSize(pw * this.tileSize * this.zoomView | 0,ph * this.tileSize * this.zoomView | 0);
			}
			if(this.currentLayer.images == null) border = 1;
			this.cursor.css({ marginLeft : (ccx * this.tileSize * this.zoomView - border | 0) + "px", marginTop : (ccy * this.tileSize * this.zoomView - border | 0) + "px"});
			this.curPos = { x : cx, y : cy, xf : cxf, yf : cyf};
			this.content.find(".cursorPosition").text(cx + "," + cy);
			if(this.mouseDown != null) this.set((cx / this.mouseDown.w | 0) * this.mouseDown.w + this.mouseDown.rx,(cy / this.mouseDown.h | 0) * this.mouseDown.h + this.mouseDown.ry,false);
			if(this.deleteMode != null) this.doDelete();
		} else {
			this.cursor.hide();
			this.curPos = null;
			this.content.find(".cursorPosition").text("");
		}
		if(this.selection != null) {
			var fc1 = this.currentLayer.floatCoord;
			var ccx1 = fc1?cxf:cx;
			var ccy1 = fc1?cyf:cy;
			if(ccx1 < 0) ccx1 = 0;
			if(ccy1 < 0) ccy1 = 0;
			if(fc1) {
				if(ccx1 > this.width) ccx1 = this.width;
				if(ccy1 > this.height) ccy1 = this.height;
			} else {
				if(ccx1 >= this.width) ccx1 = this.width - 1;
				if(ccy1 >= this.height) ccy1 = this.height - 1;
			}
			if(!this.selection.down) {
				if(this.startPos != null) {
					this.selection.x = this.selection.sx + (ccx1 - this.startPos.x);
					this.selection.y = this.selection.sy + (ccy1 - this.startPos.y);
				} else {
					this.selection.sx = this.selection.x;
					this.selection.sy = this.selection.y;
				}
				this.setCursor();
				return;
			}
			var x0 = ccx1 < this.selection.sx?ccx1:this.selection.sx;
			var y0 = ccy1 < this.selection.sy?ccy1:this.selection.sy;
			var x1 = ccx1 < this.selection.sx?this.selection.sx:ccx1;
			var y1 = ccy1 < this.selection.sy?this.selection.sy:ccy1;
			this.selection.x = x0;
			this.selection.y = y0;
			this.selection.w = x1 - x0;
			this.selection.h = y1 - y0;
			if(!fc1) {
				this.selection.w += 1;
				this.selection.h += 1;
			}
			this.setCursor();
		}
	}
	,hasProps: function(l,required) {
		if(required == null) required = false;
		var idCol;
		var _g = l.data;
		switch(_g[1]) {
		case 1:
			var idCol1 = _g[2];
			idCol = idCol1;
			break;
		default:
			idCol = null;
		}
		var _g1 = 0;
		var _g11 = l.baseSheet.columns;
		while(_g1 < _g11.length) {
			var c = _g11[_g1];
			++_g1;
			if(c.name != "x" && c.name != "y" && c.name != idCol && (!required || !c.opt && this.model.getDefault(c) == null)) return true;
		}
		return false;
	}
	,editProps: function(l,index) {
		var _g = this;
		if(!this.hasProps(l)) return;
		var o = Reflect.field(this.obj,l.name)[index];
		var scroll = this.content.find(".scrollContent");
		var popup = $("<div>").addClass("popup").prependTo(scroll);
		$(window).bind("mousedown",function(_) {
			popup.remove();
			$(window).unbind("mousedown");
			if(_g.view != null) _g.draw();
		});
		popup.mousedown(function(e) {
			e.stopPropagation();
		});
		popup.mouseup(function(e1) {
			e1.stopPropagation();
		});
		popup.click(function(e2) {
			e2.stopPropagation();
		});
		var table = $("<table>").appendTo(popup);
		var main;
		var value = this.model;
		if((value instanceof Main)) main = value; else main = null;
		var _g2 = 0;
		var _g1 = l.baseSheet.columns;
		while(_g2 < _g1.length) {
			var c = [_g1[_g2]];
			++_g2;
			var tr = $("<tr>").appendTo(table);
			var th = $("<th>").text(c[0].name).appendTo(tr);
			var td = [$("<td>").html(main.valueHtml(c[0],Reflect.field(o,c[0].name),l.baseSheet,o)).appendTo(tr)];
			td[0].click((function(td2,c2) {
				return function(e3) {
					var psheet = { columns : l.baseSheet.columns, props : l.baseSheet.props, name : l.baseSheet.name, path : SheetData.getPath(l.baseSheet) + ":" + index, parent : { sheet : _g.sheet, column : Lambda.indexOf(_g.sheet.columns,Lambda.find(_g.sheet.columns,(function() {
						return function(c3) {
							return c3.name == l.name;
						};
					})())), line : index}, lines : Reflect.field(_g.obj,l.name), separators : []};
					main.editCell(c2[0],td2[0],psheet,index);
					e3.preventDefault();
					e3.stopPropagation();
				};
			})(td,c));
		}
		var x = (o.x + 1) * this.tileSize * this.zoomView;
		var y = (o.y + 1) * this.tileSize * this.zoomView;
		var cw = this.width * this.tileSize * this.zoomView;
		var ch = this.height * this.tileSize * this.zoomView;
		if(x > cw - popup.width() - 30) x = cw - popup.width() - 30;
		if(y > ch - popup.height() - 30) y = ch - popup.height() - 30;
		var scroll1 = this.content.find(".scroll");
		if(x < scroll1.scrollLeft() + 20) x = scroll1.scrollLeft() + 20;
		if(y < scroll1.scrollTop() + 20) y = scroll1.scrollTop() + 20;
		if(x + popup.width() > scroll1.scrollLeft() + scroll1.width() - 20) x = scroll1.scrollLeft() + scroll1.width() - 20 - popup.width();
		if(y + popup.height() > scroll1.scrollTop() + scroll1.height() - 20) y = scroll1.scrollTop() + scroll1.height() - 20 - popup.height();
		popup.css({ marginLeft : (x | 0) + "px", marginTop : (y | 0) + "px"});
	}
	,updateZoom: function(f) {
		var tx = 0;
		var ty = 0;
		var sc = this.content.find(".scroll");
		if(f != null) {
			$(".popup").remove();
			var width = sc.width();
			var height = sc.height();
			var cx = (sc.scrollLeft() + width * 0.5) / this.zoomView;
			var cy = (sc.scrollTop() + height * 0.5) / this.zoomView;
			if(f) this.zoomView *= 1.2; else this.zoomView /= 1.2;
			tx = Math.round(cx * this.zoomView - width * 0.5);
			ty = Math.round(cy * this.zoomView - height * 0.5);
		}
		this.savePrefs();
		this.view.setSize(this.width * this.tileSize * this.zoomView | 0,this.height * this.tileSize * this.zoomView | 0);
		this.view.set_zoom(this.zoomView);
		this.draw();
		this.updateCursorPos();
		this.setCursor();
		if(f != null) {
			sc.scrollLeft(tx);
			sc.scrollTop(ty);
		}
	}
	,paint: function(x,y) {
		var l = this.currentLayer;
		if(!l.enabled()) return;
		var _g = l.data;
		switch(_g[1]) {
		case 0:
			var data = _g[2];
			var k = data[x + y * this.width];
			if(k == l.current || l.blanks[l.current]) return;
			var todo = [x,y];
			while(todo.length > 0) {
				var y1 = todo.pop();
				var x1 = todo.pop();
				if(data[x1 + y1 * this.width] != k) continue;
				data[x1 + y1 * this.width] = l.current;
				l.dirty = true;
				if(x1 > 0) {
					todo.push(x1 - 1);
					todo.push(y1);
				}
				if(y1 > 0) {
					todo.push(x1);
					todo.push(y1 - 1);
				}
				if(x1 < this.width - 1) {
					todo.push(x1 + 1);
					todo.push(y1);
				}
				if(y1 < this.height - 1) {
					todo.push(x1);
					todo.push(y1 + 1);
				}
			}
			this.save();
			this.draw();
			break;
		case 2:
			var data1 = _g[3];
			var k1 = data1[x + y * this.width];
			if(k1 == l.current + 1 || l.blanks[l.current]) return;
			var px = x;
			var py = y;
			var zero = [];
			var todo1 = [x,y];
			while(todo1.length > 0) {
				var y2 = todo1.pop();
				var x2 = todo1.pop();
				if(data1[x2 + y2 * this.width] != k1) continue;
				var dx = (x2 - px) % l.currentWidth;
				if(dx < 0) dx += l.currentWidth;
				var dy = (y2 - py) % l.currentHeight;
				if(dy < 0) dy += l.currentHeight;
				var t = l.current + (this.palette.randomMode?Std.random(l.currentWidth) + Std.random(l.currentHeight) * l.stride:dx + dy * l.stride);
				if(l.blanks[t]) zero.push(x2 + y2 * this.width);
				data1[x2 + y2 * this.width] = t + 1;
				l.dirty = true;
				if(x2 > 0) {
					todo1.push(x2 - 1);
					todo1.push(y2);
				}
				if(y2 > 0) {
					todo1.push(x2);
					todo1.push(y2 - 1);
				}
				if(x2 < this.width - 1) {
					todo1.push(x2 + 1);
					todo1.push(y2);
				}
				if(y2 < this.height - 1) {
					todo1.push(x2);
					todo1.push(y2 + 1);
				}
			}
			var _g1 = 0;
			while(_g1 < zero.length) {
				var z = zero[_g1];
				++_g1;
				data1[z] = 0;
			}
			this.save();
			this.draw();
			break;
		default:
		}
	}
	,onKey: function(e) {
		var _g1 = this;
		var l = this.currentLayer;
		if(e.ctrlKey) {
			var _g = e.keyCode;
			switch(_g) {
			case 115:
				this.action("close");
				break;
			case 46:
				var p = this.pick();
				if(p != null) this.deleteAll(p.layer,p.k,p.index);
				break;
			}
			return;
		}
		if($("input[type=text]:focus").length > 0 || this.currentLayer == null) return;
		$(".popup").remove();
		var l1 = this.currentLayer;
		var _g2 = e.keyCode;
		switch(_g2) {
		case 107:
			this.updateZoom(true);
			break;
		case 109:
			this.updateZoom(false);
			break;
		case 111:
			this.zoomView = 1;
			this.updateZoom();
			break;
		case 27:
			this.clearSelection();
			this.draw();
			break;
		case 9:
			var i = (HxOverrides.indexOf(this.layers,l1,0) + (e.shiftKey?this.layers.length - 1:1)) % this.layers.length;
			this.setLayer(this.layers[i]);
			e.preventDefault();
			e.stopPropagation();
			break;
		case 32:
			e.preventDefault();
			if(this.spaceDown) return;
			this.spaceDown = true;
			var canvas = $(this.view.getCanvas());
			canvas.css({ cursor : "move"});
			this.cursor.hide();
			var s = canvas.closest(".scroll");
			var curX = null;
			var curY = null;
			canvas.on("mousemove",null,function(e2) {
				var tx = e2.pageX;
				var ty = e2.pageY;
				if(curX == null) {
					curX = tx;
					curY = ty;
				}
				var dx = tx - curX;
				var dy = ty - curY;
				s.scrollLeft(s.scrollLeft() - dx);
				s.scrollTop(s.scrollTop() - dy);
				curX += dx;
				curY += dy;
				_g1.mousePos.x = e2.pageX;
				_g1.mousePos.y = e2.pageY;
				e2.stopPropagation();
			});
			break;
		case 86:
			this.action("visible",!l1.visible);
			this.content.find("[name=visible]").prop("checked",l1.visible);
			break;
		case 76:
			this.action("lock",!l1.lock);
			this.content.find("[name=lock]").prop("checked",l1.lock);
			break;
		case 71:
			if(l1.hasFloatCoord) {
				this.action("lockGrid",l1.floatCoord);
				this.content.find("[name=lockGrid]").prop("checked",!l1.floatCoord);
			}
			break;
		case 70:
			if(this.currentLayer.hasRotFlip) {
				this.flipMode = !this.flipMode;
				this.savePrefs();
			}
			this.setCursor();
			break;
		case 73:
			this.paletteOption("small");
			break;
		case 68:
			if(this.currentLayer.hasRotFlip) {
				this.rotation++;
				this.rotation %= 4;
				this.savePrefs();
			}
			this.setCursor();
			break;
		case 79:
			if(this.palette != null && l1.tileProps != null) {
				var mode = "object";
				var found = false;
				var _g12 = 0;
				var _g22 = l1.tileProps.sets;
				while(_g12 < _g22.length) {
					var t = _g22[_g12];
					++_g12;
					if(t.x + t.y * l1.stride == l1.current && t.t == mode) {
						found = true;
						HxOverrides.remove(l1.tileProps.sets,t);
						break;
					}
				}
				if(!found) {
					l1.tileProps.sets.push({ x : l1.current % l1.stride, y : l1.current / l1.stride | 0, w : l1.currentWidth, h : l1.currentHeight, t : mode, opts : { }});
					var _g13 = 0;
					var _g23 = this.layers;
					while(_g13 < _g23.length) {
						var l2 = _g23[_g13];
						++_g13;
						if(l2.tileProps == l1.tileProps) {
							var _g3 = l2.data;
							switch(_g3[1]) {
							case 3:
								var insts = _g3[3];
								var found3 = [];
								var _g4 = 0;
								while(_g4 < insts.length) {
									var i3 = insts[_g4];
									++_g4;
									if(i3.o == l1.current) found3.push({ x : i3.x, y : i3.y, i : []}); else {
										var d = i3.o - l1.current;
										var dx3 = d % l1.stride;
										var dy3 = d / l1.stride | 0;
										var _g5 = 0;
										while(_g5 < found3.length) {
											var f = found3[_g5];
											++_g5;
											if(f.x == i3.x - dx3 && f.y == i3.y - dy3) f.i.push(i3);
										}
									}
								}
								var count = l1.currentWidth * l1.currentHeight - 1;
								var _g43 = 0;
								while(_g43 < found3.length) {
									var f3 = found3[_g43];
									++_g43;
									if(f3.i.length == count) {
										var _g53 = 0;
										var _g6 = f3.i;
										while(_g53 < _g6.length) {
											var i4 = _g6[_g53];
											++_g53;
											l2.dirty = true;
											HxOverrides.remove(insts,i4);
										}
									}
								}
								break;
							default:
							}
						}
					}
				}
				this.setCursor();
				this.save();
				this.draw();
			}
			break;
		case 82:
			this.paletteOption("random");
			break;
		case 37:
			e.preventDefault();
			var w = l1.currentWidth;
			var h = l1.currentHeight;
			if(l1.current % l1.stride > w - 1) {
				var _g14 = l1;
				_g14.set_current(_g14.current - w);
				if(w != 1 || h != 1) {
					l1.currentWidth = w;
					l1.currentHeight = h;
					l1.saveState();
				}
				this.setCursor();
			}
			break;
		case 39:
			e.preventDefault();
			var w4 = l1.currentWidth;
			var h4 = l1.currentHeight;
			if(l1.current % l1.stride < l1.stride - w4 && l1.images != null && l1.current + w4 < l1.images.length) {
				var _g15 = l1;
				_g15.set_current(_g15.current + w4);
				if(w4 != 1 || h4 != 1) {
					l1.currentWidth = w4;
					l1.currentHeight = h4;
					l1.saveState();
				}
				this.setCursor();
			}
			break;
		case 40:
			e.preventDefault();
			var w5 = l1.currentWidth;
			var h5 = l1.currentHeight;
			if(l1.images != null && l1.current + l1.stride * h5 < l1.images.length) {
				var _g16 = l1;
				_g16.set_current(_g16.current + l1.stride * h5);
				if(w5 != 1 || h5 != 1) {
					l1.currentWidth = w5;
					l1.currentHeight = h5;
					l1.saveState();
				}
				this.setCursor();
			}
			break;
		case 38:
			e.preventDefault();
			var w6 = l1.currentWidth;
			var h6 = l1.currentHeight;
			if(l1.current >= l1.stride * h6) {
				var _g17 = l1;
				_g17.set_current(_g17.current - l1.stride * h6);
				if(w6 != 1 || h6 != 1) {
					l1.currentWidth = w6;
					l1.currentHeight = h6;
					l1.saveState();
				}
				this.setCursor();
			}
			break;
		case 46:
			if(this.selection != null) {
				this.deleteSelection();
				this.clearSelection();
				this.save();
				this.draw();
				return;
			}
			break;
		default:
		}
		if(this.curPos == null) return;
		var _g7 = e.keyCode;
		switch(_g7) {
		case 80:
			this.paint(this.curPos.x,this.curPos.y);
			break;
		case 46:
			if(this.deleteMode != null) return;
			this.deleteMode = { l : null};
			this.doDelete();
			break;
		case 69:
			var p8 = this.pick(function(l7) {
				var tmp;
				var _g18 = l7.data;
				switch(_g18[1]) {
				case 1:
					tmp = true;
					break;
				default:
					tmp = false;
				}
				if(tmp) return _g1.hasProps(l7); else return false;
			});
			if(p8 == null) return;
			var _g19 = p8.layer.data;
			switch(_g19[1]) {
			case 1:
				var objs = _g19[3];
				$(".popup").remove();
				this.editProps(p8.layer,p8.index);
				break;
			default:
			}
			break;
		case 83:
			if(this.selection != null) {
				if(this.selection.down) return;
				this.clearSelection();
			}
			var x = l1.floatCoord?this.curPos.xf:this.curPos.x;
			var y = l1.floatCoord?this.curPos.yf:this.curPos.y;
			this.selection = { sx : x, sy : y, x : x, y : y, w : 1, h : 1, down : true};
			this.cursor.addClass("select");
			this.setCursor();
			break;
		default:
		}
	}
	,clearSelection: function() {
		this.selection = null;
		this.cursor.removeClass("select");
		this.cursor.css({ width : "auto", height : "auto"});
		this.setCursor();
	}
	,deleteAll: function(l,k,index) {
		var _g = l.data;
		switch(_g[1]) {
		case 0:
			var data = _g[2];
			var _g2 = 0;
			var _g1 = this.width * this.height;
			while(_g2 < _g1) {
				var i = _g2++;
				if(data[i] == k + 1) data[i] = 0;
			}
			break;
		case 2:
			var data1 = _g[3];
			var _g21 = 0;
			var _g11 = this.width * this.height;
			while(_g21 < _g11) {
				var i1 = _g21++;
				if(data1[i1] == k + 1) data1[i1] = 0;
			}
			break;
		case 1:
			var objs = _g[3];
			return;
		case 3:
			var insts = _g[3];
			var _g12 = 0;
			var _g22 = insts.slice();
			while(_g12 < _g22.length) {
				var i2 = _g22[_g12];
				++_g12;
				if(i2.o == k) HxOverrides.remove(insts,i2);
			}
			break;
		}
		l.dirty = true;
		this.save();
		this.draw();
	}
	,doDelete: function() {
		var _g = this;
		var p = this.pick(this.deleteMode.l == null?null:function(l2) {
			return l2 == _g.deleteMode.l;
		});
		if(p == null) return;
		this.deleteMode.l = p.layer;
		var _g1 = p.layer.data;
		switch(_g1[1]) {
		case 0:
			var data = _g1[2];
			if(data[p.index] == 0) return;
			data[p.index] = 0;
			p.layer.dirty = true;
			this.cursor.css({ opacity : 0}).fadeTo(100,1);
			this.save();
			this.draw();
			break;
		case 1:
			var objs = _g1[3];
			if(HxOverrides.remove(objs,objs[p.index])) {
				this.save();
				this.draw();
			}
			break;
		case 2:
			var data1 = _g1[3];
			var changed = false;
			var w = this.currentLayer.currentWidth;
			var h = this.currentLayer.currentHeight;
			if(this.palette.randomMode) {
				h = 1;
				w = h;
			}
			var _g2 = 0;
			var _g11 = h;
			while(_g2 < _g11) {
				var dy = _g2++;
				var _g4 = 0;
				var _g3 = w;
				while(_g4 < _g3) {
					var dx = _g4++;
					var i = p.index + dx + dy * this.width;
					if(data1[i] == 0) continue;
					data1[i] = 0;
					changed = true;
				}
			}
			if(changed) {
				p.layer.dirty = true;
				this.cursor.css({ opacity : 0}).fadeTo(100,1);
				this.save();
				this.draw();
			}
			break;
		case 3:
			var insts = _g1[3];
			if(HxOverrides.remove(insts,insts[p.index])) {
				p.layer.dirty = true;
				this.save();
				this.draw();
				return;
			}
			break;
		}
	}
	,onKeyUp: function(e) {
		var _g = e.keyCode;
		switch(_g) {
		case 46:
			this.deleteMode = null;
			if(this.needSave) this.save();
			break;
		case 32:
			this.spaceDown = false;
			var canvas = $(this.view.getCanvas());
			canvas.unbind("mousemove");
			canvas.css({ cursor : ""});
			this.updateCursorPos();
			break;
		case 83:
			if(this.selection != null) {
				this.selection.down = false;
				this.selection.sx = this.selection.x;
				this.selection.sy = this.selection.y;
				this.setCursor();
			}
			break;
		default:
		}
	}
	,set: function(x,y,replace) {
		var _g1 = this;
		if(this.selection != null) return;
		if(this.palette.paintMode) {
			this.paint(x,y);
			return;
		}
		var l = this.currentLayer;
		if(!l.enabled()) return;
		var _g = l.data;
		switch(_g[1]) {
		case 0:
			var data = _g[2];
			if(data[x + y * this.width] == l.current || l.blanks[l.current]) return;
			data[x + y * this.width] = l.current;
			l.dirty = true;
			this.save();
			this.draw();
			break;
		case 2:
			var data1 = _g[3];
			var changed = false;
			if(this.palette.randomMode) {
				var putObjs = l.getSelObjects();
				var putObj = putObjs[Std.random(putObjs.length)];
				if(putObj != null) {
					var id = putObj.x + putObj.y * l.stride + 1;
					var _g2 = 0;
					var _g11 = putObj.w;
					while(_g2 < _g11) {
						var dx = _g2++;
						var _g4 = 0;
						var _g3 = putObj.h;
						while(_g4 < _g3) {
							var dy = _g4++;
							var k = id + dx + dy * l.stride;
							var p = x + dx + (y + dy) * this.width;
							var old = data1[p];
							if(old == k || l.blanks[k - 1]) continue;
							if(replace && old > 0) {
								var _g6 = 0;
								var _g5 = this.width * this.height;
								while(_g6 < _g5) {
									var i = _g6++;
									if(data1[i] == old) data1[i] = k;
								}
							} else data1[p] = k;
							changed = true;
						}
					}
					changed = true;
				} else {
					var p1 = x + y * this.width;
					var old1 = data1[p1];
					if(replace && old1 > 0) {
						var _g21 = 0;
						var _g12 = this.width * this.height;
						while(_g21 < _g12) {
							var i2 = _g21++;
							if(data1[i2] == old1) {
								var id2 = l.current + Std.random(l.currentWidth) + Std.random(l.currentHeight) * l.stride + 1;
								if(old1 == id2 || l.blanks[id2 - 1]) continue;
								data1[i2] = id2;
							}
						}
					} else {
						var id3 = l.current + Std.random(l.currentWidth) + Std.random(l.currentHeight) * l.stride + 1;
						if(old1 == id3 || l.blanks[id3 - 1]) return;
						data1[p1] = id3;
					}
					changed = true;
				}
			} else {
				var _g23 = 0;
				var _g13 = l.currentHeight;
				while(_g23 < _g13) {
					var dy3 = _g23++;
					var _g43 = 0;
					var _g33 = l.currentWidth;
					while(_g43 < _g33) {
						var dx3 = _g43++;
						var p3 = x + dx3 + (y + dy3) * this.width;
						var id4 = l.current + dx3 + dy3 * l.stride + 1;
						var old4 = data1[p3];
						if(old4 == id4 || l.blanks[id4 - 1]) continue;
						if(replace && old4 > 0) {
							var _g64 = 0;
							var _g54 = this.width * this.height;
							while(_g64 < _g54) {
								var i4 = _g64++;
								if(data1[i4] == old4) data1[i4] = id4;
							}
						} else data1[p3] = id4;
						changed = true;
					}
				}
			}
			if(!changed) return;
			l.dirty = true;
			this.save();
			this.draw();
			break;
		case 3:
			var insts = _g[3];
			var objs = l.getTileObjects();
			var putObjs4 = l.getSelObjects();
			var putObj4 = putObjs4[Std.random(putObjs4.length)];
			var dx4 = putObj4 == null?0.5:putObj4.w * 0.5;
			var dy4 = putObj4 == null?0.5:putObj4.h - 0.5;
			var x4 = l.floatCoord?this.curPos.xf:this.curPos.x;
			var y4 = l.floatCoord?this.curPos.yf:this.curPos.y;
			if(putObj4 != null) {
				x4 += (putObjs4[0].w - putObj4.w) * 0.5;
				y4 += putObjs4[0].h - putObj4.h;
			}
			var _g14 = 0;
			while(_g14 < insts.length) {
				var i5 = insts[_g14];
				++_g14;
				var o = objs.h[i5.o];
				var ox = i5.x + (o == null?0.5:o.w * 0.5);
				var oy = i5.y + (o == null?0.5:o.h - 0.5);
				if(x4 + dx4 >= ox - 0.5 && y4 + dy4 >= oy - 0.5 && x4 + dx4 < ox + 0.5 && y4 + dy4 < oy + 0.5) {
					if(i5.o == l.current && i5.x == x4 && i5.y == y4 && i5.flip == this.flipMode && i5.rot == this.rotation) return;
					HxOverrides.remove(insts,i5);
				}
			}
			if(putObj4 != null) insts.push({ x : x4, y : y4, o : putObj4.x + putObj4.y * l.stride, rot : this.rotation, flip : this.flipMode}); else {
				var _g25 = 0;
				var _g15 = l.currentHeight;
				while(_g25 < _g15) {
					var dy5 = _g25++;
					var _g45 = 0;
					var _g35 = l.currentWidth;
					while(_g45 < _g35) {
						var dx5 = _g45++;
						insts.push({ x : x4 + dx5, y : y4 + dy5, o : l.current + dx5 + dy5 * l.stride, rot : this.rotation, flip : this.flipMode});
					}
				}
			}
			insts.sort(function(i1,i25) {
				var o5 = objs.h[i1.o];
				var tmp = (i1.y + (o5 == null?1:o5.h)) * _g1.tileSize | 0;
				var o6 = objs.h[i25.o];
				var dy6 = tmp - ((i25.y + (o6 == null?1:o6.h)) * _g1.tileSize | 0);
				if(dy6 == 0) {
					var o7 = objs.h[i1.o];
					var tmp7 = (i1.x + (o7 == null?0.5:o7.w * 0.5)) * _g1.tileSize | 0;
					var o8 = objs.h[i25.o];
					return tmp7 - ((i25.x + (o8 == null?0.5:o8.w * 0.5)) * _g1.tileSize | 0);
				} else return dy6;
			});
			l.dirty = true;
			this.save();
			this.draw();
			break;
		case 1:
			break;
		}
	}
	,draw: function() {
		this.view.fill(-7303024);
		var _g1 = 0;
		var _g = this.layers.length;
		while(_g1 < _g) {
			var index = _g1++;
			var l = this.layers[index];
			if(!l.visible) continue;
			l.draw(this.view);
		}
		this.view.flush();
	}
	,save: function() {
		if(this.mouseDown != null || this.deleteMode != null) {
			this.needSave = true;
			return;
		}
		this.needSave = false;
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.save();
		}
		this.model.save();
	}
	,savePrefs: function() {
		var sc = this.content.find(".scroll");
		var state = { zoomView : this.zoomView, curLayer : this.currentLayer == null?null:this.currentLayer.name, scrollX : sc.scrollLeft(), scrollY : sc.scrollTop(), paintMode : this.palette.paintMode, randomMode : this.palette.randomMode, paletteMode : this.palette.mode, paletteModeCursor : this.palette.modeCursor, smallPalette : this.palette.small, rotation : this.rotation, flipMode : this.flipMode};
		js_Browser.getLocalStorage().setItem(this.sheetPath + "#" + this.index,haxe_Serializer.run(state));
	}
	,scale: function(s) {
		if(s == null || isNaN(s)) return;
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(!l.visible) continue;
			l.dirty = true;
			l.scale(s);
		}
		this.save();
		this.draw();
	}
	,scroll: function(dx,dy) {
		if(dx == null || isNaN(dx)) dx = 0;
		if(dy == null || isNaN(dy)) dy = 0;
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(!l.visible) continue;
			l.dirty = true;
			l.scroll(dx,dy);
		}
		this.save();
		this.draw();
	}
	,setTileSize: function(value) {
		this.props.tileSize = this.tileSize = value;
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(!l.hasFloatCoord) continue;
			var _g2 = l.data;
			switch(_g2[1]) {
			case 1:
				var objs = _g2[3];
				var _g3 = 0;
				while(_g3 < objs.length) {
					var o = objs[_g3];
					++_g3;
					o.x = (o.x * this.tileSize | 0) / this.tileSize;
					o.y = (o.y * this.tileSize | 0) / this.tileSize;
					if(l.hasSize) {
						o.width = (o.width * this.tileSize | 0) / this.tileSize;
						o.height = (o.height * this.tileSize | 0) / this.tileSize;
					}
				}
				break;
			default:
			}
		}
		this.setCursor();
		this.save();
		this.draw();
	}
	,setLayerMode: function(mode) {
		if(this.currentLayer.tileProps == null) {
			js_Browser.alert("Choose file first");
			return;
		}
		this.currentLayer.setMode(mode);
		this.save();
		this.reload();
	}
	,paletteOption: function(name,val) {
		if(this.palette.option(name,val)) {
			this.save();
			this.draw();
		}
	}
	,setLayer: function(l) {
		var old = this.currentLayer;
		if(l == old) {
			this.setCursor();
			return;
		}
		this.currentLayer = l;
		if(!l.hasRotFlip) {
			this.flipMode = false;
			this.rotation = 0;
		}
		this.savePrefs();
		this.content.find("[name=alpha]").val(Std.string((function($this) {
			var $r;
			var x = l.props.alpha * 100;
			$r = x | 0;
			return $r;
		}(this))));
		this.content.find("[name=visible]").prop("checked",l.visible);
		this.content.find("[name=lock]").prop("checked",l.lock);
		this.content.find("[name=lockGrid]").prop("checked",!l.floatCoord).closest(".item").css({ display : l.hasFloatCoord?"":"none"});
		this.content.find("[name=mode]").val("" + (l.props.mode != null?l.props.mode:"tiles"));
		this.content.find("[name=color]").spectrum("set",this.toColor(l.props.color)).closest(".item").css({ display : l.idToIndex == null && !(function($this) {
			var $r;
			var _g = l.data;
			$r = (function($this) {
				var $r;
				switch(_g[1]) {
				case 2:case 3:
					$r = true;
					break;
				default:
					$r = false;
				}
				return $r;
			}($this));
			return $r;
		}(this))?"":"none"});
		{
			var _g1 = l.data;
			switch(_g1[1]) {
			case 2:
				var t = _g1[2];
				this.content.find("[name=size]").val("" + t.size).closest(".item").show();
				this.content.find("[name=file]").closest(".item").show();
				break;
			case 3:
				var t1 = _g1[2];
				this.content.find("[name=size]").val("" + t1.size).closest(".item").show();
				this.content.find("[name=file]").closest(".item").show();
				break;
			default:
				this.content.find("[name=size]").closest(".item").hide();
				this.content.find("[name=file]").closest(".item").hide();
			}
		}
		if((function($this) {
			var $r;
			var _g2 = l.data;
			$r = (function($this) {
				var $r;
				switch(_g2[1]) {
				case 3:
					$r = true;
					break;
				default:
					$r = false;
				}
				return $r;
			}($this));
			return $r;
		}(this))) {
			this.palette.randomMode = false;
			this.palette.paintMode = false;
			this.savePrefs();
		}
		this.palette.reset();
		if(l.images == null) {
			this.setCursor();
			return;
		}
		this.palette.layerChanged(l);
		this.setCursor();
	}
	,setCursor: function() {
		var l = this.currentLayer;
		if(l == null) {
			this.cursor.hide();
			return;
		}
		this.content.find(".menu .item.selected").removeClass("selected");
		l.comp.addClass("selected");
		this.palette.updateSelect();
		var size = this.zoomView < 1?this.tileSize * this.zoomView | 0:Math.ceil(this.tileSize * this.zoomView);
		if(this.selection != null) {
			this.cursorImage.setSize(0,0);
			this.cursor.show();
			this.cursor.css({ border : "", marginLeft : (this.selection.x * this.tileSize * this.zoomView - 1 | 0) + "px", marginTop : (this.selection.y * this.tileSize * this.zoomView | 0) + "px", width : (this.selection.w * this.tileSize * this.zoomView | 0) + "px", height : (this.selection.h * this.tileSize * this.zoomView | 0) + "px"});
			return;
		}
		var cur = l.current;
		var w = this.palette.randomMode?1:l.currentWidth;
		var h = this.palette.randomMode?1:l.currentHeight;
		var tmp;
		var _g = l.data;
		switch(_g[1]) {
		case 3:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			var o = l.getSelObjects();
			if(o.length > 0) {
				cur = o[0].x + o[0].y * l.stride;
				w = o[0].w;
				h = o[0].h;
			}
		}
		this.cursorImage.setSize(size * w,size * h);
		var px = 0;
		var py = 0;
		if(l.images != null) {
			var _g1 = l.data;
			switch(_g1[1]) {
			case 1:
				var i = l.images[cur];
				var w1 = Math.ceil(i.width * this.zoomView);
				var h1 = Math.ceil(i.height * this.zoomView);
				this.cursorImage.setSize(w1,h1);
				this.cursorImage.clear();
				this.cursorImage.drawScaled(i,0,0,w1,h1);
				px = w1 - size >> 1;
				py = h1 - size;
				break;
			default:
				this.cursorImage.clear();
				var _g2 = 0;
				var _g11 = h;
				while(_g2 < _g11) {
					var y = _g2++;
					var _g4 = 0;
					var _g3 = w;
					while(_g4 < _g3) {
						var x = _g4++;
						var i1 = l.images[cur + x + y * l.stride];
						this.cursorImage.drawSub(i1,0,0,i1.width,i1.height,x * size,y * size,size,size);
					}
				}
				this.cursor.css({ border : "none"});
				if(this.flipMode || this.rotation != 0) {
					var tw = size * w;
					var th = size * h;
					this.tmpImage.setSize(tw,th);
					var m = { a : 0., b : 0., c : 0., d : 0., x : 0., y : 0.};
					var rot = this.rotation;
					var flip = this.flipMode;
					m.a = 1;
					m.b = 0;
					m.c = 0;
					m.d = 1;
					m.x = -tw * 0.5;
					m.y = -th * 0.5;
					if(rot != 0) {
						var a = Math.PI * rot / 2;
						var c = Math.cos(a);
						var s = Math.sin(a);
						var x1 = m.x;
						var y1 = m.y;
						m.a = c;
						m.b = s;
						m.c = -s;
						m.d = c;
						m.x = x1 * c - y1 * s;
						m.y = x1 * s + y1 * c;
					}
					if(flip) {
						m.a = -m.a;
						m.c = -m.c;
						m.x = -m.x;
					}
					m.x += Math.abs(m.a * tw * 0.5 + m.c * th * 0.5);
					m.y += Math.abs(m.b * tw * 0.5 + m.d * th * 0.5);
					this.tmpImage.clear();
					this.tmpImage.draw(this.cursorImage,0,0);
					var cw = tw * m.a + th * m.c | 0;
					var ch = tw * m.b + th * m.d | 0;
					this.cursorImage.setSize(cw < 0?-cw:cw,ch < 0?-ch:ch);
					this.cursorImage.clear();
					this.cursorImage.drawMat(this.tmpImage,m);
				}
			}
			this.cursorImage.fill(1616617979);
		} else {
			var c1 = l.colors[cur];
			var lum = ((c1 & 255) + (c1 >> 8 & 255) + (c1 >> 16 & 255)) / 765;
			this.cursorImage.fill(c1 | -16777216);
			this.cursor.css({ border : "1px solid " + (lum < 0.25?"white":"black")});
		}
		var canvas = this.cursorImage.getCanvas();
		canvas.style.marginLeft = -px + "px";
		canvas.style.marginTop = -py + "px";
	}
	,__class__: Level
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) this.h = x; else this.q.next = x;
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) this.h = l.next; else prev.next = l.next;
				if(this.q == l) this.q = prev;
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var K = function() { };
$hxClasses["K"] = K;
K.__name__ = ["K"];
var Model = function() {
	this.openedList = new haxe_ds_StringMap();
	this.r_ident = new EReg("^[A-Za-z_][A-Za-z0-9_]*$","");
	this.prefs = { windowPos : { x : 50, y : 50, w : 800, h : 600, max : false}, curFile : null, curSheet : 0, recent : []};
	this.existsCache = new haxe_ds_StringMap();
	this.loadPrefs();
	SheetData.model = this;
};
$hxClasses["Model"] = Model;
Model.__name__ = ["Model"];
Model.prototype = {
	quickExists: function(path) {
		var tmp;
		var _this = this.existsCache;
		if(__map_reserved[path] != null) tmp = _this.getReserved(path); else tmp = _this.h[path];
		var c = tmp;
		if(c == null) {
			c = { t : -1e9, r : false};
			var _this1 = this.existsCache;
			if(__map_reserved[path] != null) _this1.setReserved(path,c); else _this1.h[path] = c;
		}
		var t = haxe_Timer.stamp();
		if(c.t < t - 10) {
			c.r = sys_FileSystem.exists(path);
			c.t = t;
		}
		return c.r;
	}
	,getImageData: function(key) {
		return Reflect.field(this.imageBank,key);
	}
	,getAbsPath: function(file) {
		if(file.charAt(0) == "/" || file.charAt(1) == ":") return file; else return new haxe_io_Path(this.prefs.curFile).dir.split("\\").join("/") + "/" + file;
	}
	,getSheet: function(name) {
		var tmp;
		var _this = this.smap;
		if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
		return tmp.s;
	}
	,getDefault: function(c,ignoreOpt) {
		if(ignoreOpt == null) ignoreOpt = false;
		if(c.opt && !ignoreOpt) return null;
		var _g = c.type;
		switch(_g[1]) {
		case 3:case 4:case 5:case 10:case 11:
			return 0;
		case 1:case 0:case 7:case 12:case 13:
			return "";
		case 6:
			var s = _g[2];
			var tmp;
			var _this = this.smap;
			if(__map_reserved[s] != null) tmp = _this.getReserved(s); else tmp = _this.h[s];
			var s1 = tmp.s;
			var l = s1.lines[0];
			var id = "";
			if(l != null) {
				var _g1 = 0;
				var _g2 = s1.columns;
				while(_g1 < _g2.length) {
					var c1 = _g2[_g1];
					++_g1;
					if(c1.type == cdb_ColumnType.TId) {
						id = Reflect.field(l,c1.name);
						break;
					}
				}
			}
			return id;
		case 2:
			return false;
		case 8:
			return [];
		case 17:
			return { };
		case 9:case 14:case 15:case 16:
			return null;
		}
	}
	,parseDynamic: function(s) {
		s = new EReg("([{,]) *([a-zA-Z_][a-zA-Z0-9_]*) *:","g").replace(s,"$1\"$2\":");
		return JSON.parse(s);
	}
	,save: function(history) {
		if(history == null) history = true;
		var _g = this;
		var _g1 = 0;
		var _g11 = this.data.sheets;
		while(_g1 < _g11.length) {
			var s = _g11[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = Reflect.fields(s.props);
			while(_g2 < _g3.length) {
				var p = _g3[_g2];
				++_g2;
				var v = Reflect.field(s.props,p);
				if(v == null || v == false) Reflect.deleteField(s.props,p);
			}
			if(s.props.hasIndex) {
				var lines = SheetData.getLines(s);
				var _g31 = 0;
				var _g21 = lines.length;
				while(_g31 < _g21) {
					var i = _g31++;
					lines[i].index = i;
				}
			}
			if(s.props.hasGroup) {
				var lines1 = SheetData.getLines(s);
				var gid = 0;
				var sindex = 0;
				var titles = s.props.separatorTitles;
				if(titles != null) {
					if(s.separators[sindex] == 0 && titles[sindex] != null) ++sindex;
					var _g32 = 0;
					var _g22 = lines1.length;
					while(_g32 < _g22) {
						var i2 = _g32++;
						if(s.separators[sindex] == i2) {
							if(titles[sindex] != null) ++gid;
							++sindex;
						}
						lines1[i2].group = gid;
					}
				}
			}
		}
		var sdata = this.quickSave();
		if(history && (this.curSavedData == null || sdata.d != this.curSavedData.d || sdata.o != this.curSavedData.o)) {
			this.history.push(this.curSavedData);
			this.redo = [];
			if(this.history.length > 100 || sdata.d.length * (this.history.length + this.redo.length) * 2 > 314572800) this.history.shift();
			this.curSavedData = sdata;
		}
		if(this.prefs.curFile == null) return;
		try {
			js_node_Fs.writeFileSync(this.prefs.curFile,sdata.d);
		} catch( e ) {
			haxe_Timer.delay(function() {
				js_node_Fs.writeFileSync(_g.prefs.curFile,sdata.d);
			},500);
		}
	}
	,saveImages: function() {
		if(this.prefs.curFile == null) return;
		var img = this.prefs.curFile.split(".");
		img.pop();
		var path = img.join(".") + ".img";
		if(this.imageBank == null) js_node_Fs.unlinkSync(path); else {
			var content = JSON.stringify(this.imageBank,null,"\t");
			js_node_Fs.writeFileSync(path,content);
		}
	}
	,quickSave: function() {
		return { d : cdb_Parser.save(this.data), o : haxe_Serializer.run(this.openedList)};
	}
	,quickLoad: function(sdata) {
		this.data = cdb_Parser.parse(sdata.d);
		this.openedList = haxe_Unserializer.run(sdata.o);
	}
	,deleteSheet: function(sheet) {
		HxOverrides.remove(this.data.sheets,sheet);
		this.smap.remove(sheet.name);
		var _g = 0;
		var _g1 = sheet.columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var _g2 = c.type;
			switch(_g2[1]) {
			case 8:case 17:
				var tmp;
				var _this = SheetData.model.smap;
				var key = sheet.name + "@" + c.name;
				if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
				this.deleteSheet(tmp.s);
				break;
			default:
			}
		}
		this.mapType(function(t) {
			switch(t[1]) {
			case 6:
				var r = t[2];
				if(r == sheet.name) return cdb_ColumnType.TString; else return t;
				break;
			case 12:
				var r1 = t[2];
				if(r1 == sheet.name) return cdb_ColumnType.TString; else return t;
				break;
			default:
				return t;
			}
		});
	}
	,getConvFunction: function(old,t) {
		var conv = null;
		if(Type.enumEq(old,t)) return { f : null};
		switch(old[1]) {
		case 3:
			switch(t[1]) {
			case 4:
				break;
			case 1:
				conv = Std.string;
				break;
			case 2:
				conv = function(v) {
					return v != 0;
				};
				break;
			case 5:
				var values = t[2];
				conv = function(i) {
					if(i < 0 || i >= values.length) return null; else return i;
				};
				break;
			case 11:
				conv = function(i1) {
					return i1;
				};
				break;
			default:
				return null;
			}
			break;
		case 0:case 6:case 12:
			switch(t[1]) {
			case 1:
				break;
			default:
				return null;
			}
			break;
		case 1:
			switch(t[1]) {
			case 0:case 6:case 12:
				var r_invalid = new EReg("[^A-Za-z0-9_]","g");
				conv = function(r) {
					return r_invalid.replace(r,"_");
				};
				break;
			case 3:
				conv = Std.parseInt;
				break;
			case 4:
				conv = function(str) {
					var f = parseFloat(str);
					if(isNaN(f)) return null; else return f;
				};
				break;
			case 2:
				conv = function(s) {
					return s != "";
				};
				break;
			case 5:
				var values1 = t[2];
				var map = new haxe_ds_StringMap();
				var _g1 = 0;
				var _g = values1.length;
				while(_g1 < _g) {
					var i2 = _g1++;
					var key = values1[i2].toLowerCase();
					if(__map_reserved[key] != null) map.setReserved(key,i2); else map.h[key] = i2;
				}
				conv = function(s2) {
					var key2 = s2.toLowerCase();
					return __map_reserved[key2] != null?map.getReserved(key2):map.h[key2];
				};
				break;
			default:
				return null;
			}
			break;
		case 2:
			switch(t[1]) {
			case 3:case 4:
				conv = function(b) {
					if(b) return 1; else return 0;
				};
				break;
			case 1:
				conv = Std.string;
				break;
			default:
				return null;
			}
			break;
		case 4:
			switch(t[1]) {
			case 3:
				conv = Std["int"];
				break;
			case 1:
				conv = Std.string;
				break;
			case 2:
				conv = function(v) {
					return v != 0;
				};
				break;
			default:
				return null;
			}
			break;
		case 5:
			switch(t[1]) {
			case 5:
				var values12 = old[2];
				var values2 = t[2];
				var map2 = [];
				var _g2 = 0;
				var _g3 = [];
				var _g23 = 0;
				var _g14 = values12.length;
				while(_g23 < _g14) {
					var i4 = _g23++;
					_g3.push({ name : values12[i4], i : i4});
				}
				var tmp = _g3;
				var _g13 = [];
				var _g34 = 0;
				var _g24 = values2.length;
				while(_g34 < _g24) {
					var i5 = _g34++;
					_g13.push({ name : values2[i5], i : i5});
				}
				var _g33 = this.makePairs(tmp,_g13);
				while(_g2 < _g33.length) {
					var p = _g33[_g2];
					++_g2;
					if(p.b == null) continue;
					map2[p.a.i] = p.b.i;
				}
				conv = function(i6) {
					return map2[i6];
				};
				break;
			case 3:
				var values6 = old[2];
				break;
			case 10:
				var val1 = old[2];
				var val2 = t[2];
				if(Std.string(val1) == Std.string(val2)) conv = function(i7) {
					return 1 << i7;
				}; else return null;
				break;
			default:
				return null;
			}
			break;
		case 10:
			switch(t[1]) {
			case 10:
				var values17 = old[2];
				var values27 = t[2];
				var map7 = [];
				var _g27 = 0;
				var _g7 = [];
				var _g28 = 0;
				var _g18 = values17.length;
				while(_g28 < _g18) {
					var i8 = _g28++;
					_g7.push({ name : values17[i8], i : i8});
				}
				var tmp7 = _g7;
				var _g17 = [];
				var _g38 = 0;
				var _g29 = values27.length;
				while(_g38 < _g29) {
					var i9 = _g38++;
					_g17.push({ name : values27[i9], i : i9});
				}
				var _g37 = this.makePairs(tmp7,_g17);
				while(_g27 < _g37.length) {
					var p9 = _g37[_g27];
					++_g27;
					if(p9.b == null) continue;
					map7[p9.a.i] = p9.b.i;
				}
				conv = function(i10) {
					var out = 0;
					var k = 0;
					while(i10 >= 1 << k) {
						if(map7[k] != null && (i10 & 1 << k) != 0) out |= 1 << map7[k];
						++k;
					}
					return out;
				};
				break;
			case 3:
				var values10 = old[2];
				break;
			default:
				return null;
			}
			break;
		case 11:
			switch(t[1]) {
			case 3:
				conv = function(i1) {
					return i1;
				};
				break;
			default:
				return null;
			}
			break;
		case 8:
			switch(t[1]) {
			case 17:
				conv = function(l) {
					return l[0];
				};
				break;
			default:
				return null;
			}
			break;
		case 17:
			switch(t[1]) {
			case 8:
				conv = function(p10) {
					if(Reflect.fields(p10).length == 0) return []; else return [p10];
				};
				break;
			default:
				return null;
			}
			break;
		default:
			return null;
		}
		return { f : conv};
	}
	,updateColumn: function(sheet,old,c) {
		var _g = this;
		if(old.name != c.name) {
			var _g1 = 0;
			var _g11 = sheet.columns;
			while(_g1 < _g11.length) {
				var c2 = _g11[_g1];
				++_g1;
				if(c2.name == c.name) return "Column name already used";
			}
			if(c.name == "index" && sheet.props.hasIndex) return "Sheet already has an index";
			if(c.name == "group" && sheet.props.hasGroup) return "Sheet already has a group";
			var _g2 = 0;
			var _g12 = SheetData.getLines(sheet);
			while(_g2 < _g12.length) {
				var o = _g12[_g2];
				++_g2;
				var v = Reflect.field(o,old.name);
				Reflect.deleteField(o,old.name);
				if(v != null) o[c.name] = v;
			}
			var renameRec = null;
			renameRec = function(sheet2,col) {
				var tmp;
				var _this = SheetData.model.smap;
				var key = sheet2.name + "@" + col.name;
				if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
				var s = tmp.s;
				s.name = sheet2.name + "@" + c.name;
				var _g3 = 0;
				var _g13 = s.columns;
				while(_g3 < _g13.length) {
					var c3 = _g13[_g3];
					++_g3;
					if(c3.type == cdb_ColumnType.TList || c3.type == cdb_ColumnType.TProperties) renameRec(s,c3);
				}
				_g.makeSheet(s);
			};
			var renameRec1 = renameRec;
			if(old.type == cdb_ColumnType.TList || old.type == cdb_ColumnType.TProperties) renameRec1(sheet,old);
			old.name = c.name;
		}
		if(!Type.enumEq(old.type,c.type)) {
			var conv = this.getConvFunction(old.type,c.type);
			if(conv == null) return "Cannot convert " + this.typeStr(old.type) + " to " + this.typeStr(c.type);
			var conv3 = conv.f;
			if(conv3 != null) {
				var _g4 = 0;
				var _g14 = SheetData.getLines(sheet);
				while(_g4 < _g14.length) {
					var o4 = _g14[_g4];
					++_g4;
					var v4 = Reflect.field(o4,c.name);
					if(v4 != null) {
						v4 = conv3(v4);
						if(v4 != null) o4[c.name] = v4; else Reflect.deleteField(o4,c.name);
					}
				}
			}
			old.type = c.type;
			old.typeStr = null;
		}
		if(old.opt != c.opt) {
			if(old.opt) {
				var _g5 = 0;
				var _g15 = SheetData.getLines(sheet);
				while(_g5 < _g15.length) {
					var o5 = _g15[_g5];
					++_g5;
					var v5 = Reflect.field(o5,c.name);
					if(v5 == null) {
						v5 = this.getDefault(c);
						if(v5 != null) o5[c.name] = v5;
					}
				}
			} else {
				var _g6 = old.type;
				switch(_g6[1]) {
				case 5:
					break;
				default:
					var def = this.getDefault(old);
					var _g16 = 0;
					var _g26 = SheetData.getLines(sheet);
					while(_g16 < _g26.length) {
						var o6 = _g26[_g16];
						++_g16;
						var v6 = Reflect.field(o6,c.name);
						var _g36 = c.type;
						switch(_g36[1]) {
						case 8:
							var v7 = v6;
							if(v7.length == 0) Reflect.deleteField(o6,c.name);
							break;
						case 17:
							if(Reflect.fields(v6).length == 0) Reflect.deleteField(o6,c.name);
							break;
						default:
							if(v6 == def) Reflect.deleteField(o6,c.name);
						}
					}
				}
			}
			old.opt = c.opt;
		}
		if(c.display == null) Reflect.deleteField(old,"display"); else old.display = c.display;
		if(c.kind == null) Reflect.deleteField(old,"kind"); else old.kind = c.kind;
		this.makeSheet(sheet);
		return null;
	}
	,setCompressionMode: function(c) {
		this.data.compress = c;
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = s.columns;
			while(_g2 < _g3.length) {
				var c1 = _g3[_g2];
				++_g2;
				var _g4 = c1.type;
				switch(_g4[1]) {
				case 12:
					var _g5 = 0;
					var _g6 = SheetData.getLines(s);
					while(_g5 < _g6.length) {
						var obj = _g6[_g5];
						++_g5;
						var ldat = Reflect.field(obj,c1.name);
						if(ldat == null || ldat == "") continue;
						var _g7 = [];
						var _g8 = 0;
						while(_g8 < 256) {
							var i = _g8++;
							_g7.push(i);
						}
						var d = cdb__$Types_Layer_$Impl_$.decode(ldat,_g7);
						ldat = cdb__$Types_Layer_$Impl_$.encode(d,this.data.compress);
						obj[c1.name] = ldat;
					}
					break;
				case 15:
					var _g51 = 0;
					var _g61 = SheetData.getLines(s);
					while(_g51 < _g61.length) {
						var obj1 = _g61[_g51];
						++_g51;
						var ldat1 = Reflect.field(obj1,c1.name);
						if(ldat1 == null || ldat1 == "") continue;
						var d1 = cdb__$Types_TileLayerData_$Impl_$.decode(ldat1.data);
						ldat1.data = cdb__$Types_TileLayerData_$Impl_$.encode(d1,this.data.compress);
					}
					break;
				default:
				}
			}
		}
	}
	,compressionEnabled: function() {
		return this.data.compress;
	}
	,error: function(msg) {
		js_Browser.alert(msg);
	}
	,load: function(noError) {
		if(noError == null) noError = false;
		this.history = [];
		this.redo = [];
		try {
			this.data = cdb_Parser.parse(js_node_Fs.readFileSync(this.prefs.curFile,{ encoding : "utf8"}));
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if(!noError) this.error(Std.string(e));
			this.prefs.curFile = null;
			this.prefs.curSheet = 0;
			this.data = { sheets : [], customTypes : [], compress : false};
		}
		try {
			var img = this.prefs.curFile.split(".");
			img.pop();
			this.imageBank = JSON.parse(js_node_Fs.readFileSync(img.join(".") + ".img",{ encoding : "utf8"}));
		} catch( e1 ) {
			this.imageBank = null;
		}
		this.curSavedData = this.quickSave();
		this.initContent();
	}
	,initContent: function() {
		this.smap = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			this.makeSheet(s);
		}
		this.tmap = new haxe_ds_StringMap();
		var _g2 = 0;
		var _g12 = this.data.customTypes;
		while(_g2 < _g12.length) {
			var t = _g12[_g2];
			++_g2;
			var _this = this.tmap;
			var key = t.name;
			if(__map_reserved[key] != null) _this.setReserved(key,t); else _this.h[key] = t;
		}
	}
	,sortById: function(a,b) {
		if(a.disp > b.disp) return 1; else return -1;
	}
	,makeSheet: function(s) {
		var sdat = { s : s, index : new haxe_ds_StringMap(), all : []};
		var cid = null;
		var lines = SheetData.getLines(s);
		var _g = 0;
		var _g1 = s.columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.type == cdb_ColumnType.TId) {
				var _g2 = 0;
				while(_g2 < lines.length) {
					var l = lines[_g2];
					++_g2;
					var v = Reflect.field(l,c.name);
					if(v != null && v != "") {
						var disp = v;
						var ico = null;
						if(s.props.displayColumn != null) {
							disp = Reflect.field(l,s.props.displayColumn);
							if(disp == null || disp == "") disp = "#" + v;
						}
						if(s.props.displayIcon != null) ico = Reflect.field(l,s.props.displayIcon);
						var o = { id : v, disp : disp, ico : ico, obj : l};
						var tmp;
						var _this = sdat.index;
						if(__map_reserved[v] != null) tmp = _this.getReserved(v); else tmp = _this.h[v];
						if(tmp == null) {
							var _this1 = sdat.index;
							if(__map_reserved[v] != null) _this1.setReserved(v,o); else _this1.h[v] = o;
						}
						sdat.all.push(o);
					}
				}
				sdat.all.sort($bind(this,this.sortById));
				break;
			}
		}
		var _this2 = this.smap;
		var key = s.name;
		if(__map_reserved[key] != null) _this2.setReserved(key,sdat); else _this2.h[key] = sdat;
	}
	,cleanImages: function() {
		if(this.imageBank == null) return;
		var used = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = s.columns;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				var _g4 = c.type;
				switch(_g4[1]) {
				case 7:
					var _g5 = 0;
					var _g6 = SheetData.getLines(s);
					while(_g5 < _g6.length) {
						var obj = _g6[_g5];
						++_g5;
						var v = Reflect.field(obj,c.name);
						if(v != null) {
							if(__map_reserved[v] != null) used.setReserved(v,true); else used.h[v] = true;
						}
					}
					break;
				default:
				}
			}
		}
		var _g7 = 0;
		var _g17 = Reflect.fields(this.imageBank);
		while(_g7 < _g17.length) {
			var f = _g17[_g7];
			++_g7;
			if(!(__map_reserved[f] != null?used.getReserved(f):used.h[f])) Reflect.deleteField(this.imageBank,f);
		}
	}
	,loadPrefs: function() {
		try {
			this.prefs = haxe_Unserializer.run(js_Browser.getLocalStorage().getItem("prefs"));
			if(this.prefs.recent == null) this.prefs.recent = [];
		} catch( e ) {
		}
	}
	,savePrefs: function() {
		js_Browser.getLocalStorage().setItem("prefs",haxe_Serializer.run(this.prefs));
	}
	,valToString: function(t,val,esc) {
		if(esc == null) esc = false;
		if(val == null) return "null";
		switch(t[1]) {
		case 3:case 4:case 2:case 7:
			return Std.string(val);
		case 0:case 6:case 12:case 13:
			if(esc) return "\"" + Std.string(val) + "\""; else return val;
			break;
		case 1:
			var val1 = val;
			if(new EReg("^[A-Za-z0-9_]+$","g").match(val1) && !esc) return val1; else return "\"" + val1.split("\\").join("\\\\").split("\"").join("\\\"") + "\"";
			break;
		case 5:
			var values = t[2];
			return this.valToString(cdb_ColumnType.TString,values[val],esc);
		case 9:
			var t1 = t[2];
			var tmp;
			var _this = this.tmap;
			if(__map_reserved[t1] != null) tmp = _this.getReserved(t1); else tmp = _this.h[t1];
			return this.typeValToString(tmp,val,esc);
		case 10:
			var values1 = t[2];
			var v = val;
			var flags = [];
			var _g1 = 0;
			var _g = values1.length;
			while(_g1 < _g) {
				var i = _g1++;
				if((v & 1 << i) != 0) flags.push(this.valToString(cdb_ColumnType.TString,values1[i],esc));
			}
			return Std.string(flags);
		case 11:
			var s = "#" + StringTools.hex(val,6);
			if(esc) return "\"" + s + "\""; else return s;
			break;
		case 15:case 16:case 14:
			if(esc) return JSON.stringify(val); else return Std.string(val);
			break;
		case 17:case 8:
			return "???";
		}
	}
	,typeValToString: function(t,val,esc) {
		if(esc == null) esc = false;
		var c = t.cases[val[0]];
		var str = c.name;
		if(c.args.length > 0) {
			str += "(";
			var out = [];
			var _g1 = 1;
			var _g = val.length;
			while(_g1 < _g) {
				var i = _g1++;
				out.push(this.valToString(c.args[i - 1].type,val[i],esc));
			}
			str += out.join(",");
			str += ")";
		}
		return str;
	}
	,typeStr: function(t) {
		switch(t[1]) {
		case 6:
			var n = t[2];
			return n;
		case 9:
			var n1 = t[2];
			return n1;
		default:
			return HxOverrides.substr(Std.string(t),1,null);
		}
	}
	,parseVal: function(t,val) {
		switch(t[1]) {
		case 3:
			if(new EReg("^-?[0-9]+$","").match(val)) return Std.parseInt(val);
			break;
		case 1:
			if(HxOverrides.cca(val,0) == 34) {
				var esc = false;
				var p = 1;
				var out_b = "";
				try {
					while(true) {
						if(p == val.length) throw new js__$Boot_HaxeError("Unclosed \"");
						var c = HxOverrides.cca(val,p++);
						if(esc) {
							out_b += String.fromCharCode(c);
							esc = false;
						} else if(c != null) switch(c) {
						case 34:
							if(p < val.length) throw new js__$Boot_HaxeError("Invalid content after string '" + val);
							throw "__break__";
							break;
						case 92:
							esc = true;
							break;
						default:
							out_b += String.fromCharCode(c);
						} else out_b += String.fromCharCode(c);
					}
				} catch( e ) { if( e != "__break__" ) throw e; }
				return out_b;
			} else if(new EReg("^[A-Za-z0-9_]+$","").match(val)) return val;
			throw new js__$Boot_HaxeError("String requires quotes '" + val + "'");
			break;
		case 2:
			if(val == "true") return true;
			if(val == "false") return false;
			break;
		case 4:
			var f = parseFloat(val);
			if(!isNaN(f)) return f;
			break;
		case 9:
			var t1 = t[2];
			var tmp;
			var _this = this.tmap;
			if(__map_reserved[t1] != null) tmp = _this.getReserved(t1); else tmp = _this.h[t1];
			return this.parseTypeVal(tmp,val);
		case 6:
			var t2 = t[2];
			var tmp2;
			var _this2 = this.smap;
			if(__map_reserved[t2] != null) tmp2 = _this2.getReserved(t2); else tmp2 = _this2.h[t2];
			var r = tmp2.index.get(val);
			if(r == null) throw new js__$Boot_HaxeError(val + " is not a known " + t2 + " id");
			return r.id;
		case 11:
			if(val.charAt(0) == "#") val = "0x" + HxOverrides.substr(val,1,null);
			if(new EReg("^-?[0-9]+$","").match(val) || new EReg("^0x[0-9A-Fa-f]+$","").match(val)) return Std.parseInt(val);
			break;
		default:
		}
		throw new js__$Boot_HaxeError("'" + val + "' should be " + this.typeStr(t));
	}
	,parseTypeVal: function(t,val) {
		if(t == null || val == null) throw new js__$Boot_HaxeError("Missing val/type");
		val = StringTools.trim(val);
		var missingCloseParent = false;
		var pos = val.indexOf("(");
		var id;
		var args = null;
		if(pos < 0) {
			id = val;
			args = [];
		} else {
			id = HxOverrides.substr(val,0,pos);
			val = HxOverrides.substr(val,pos + 1,null);
			if(StringTools.endsWith(val,")")) val = HxOverrides.substr(val,0,val.length - 1); else missingCloseParent = true;
			args = [];
			var p = 0;
			var start = 0;
			var pc = 0;
			while(p < val.length) {
				var _g = HxOverrides.cca(val,p++);
				if(_g != null) switch(_g) {
				case 40:
					++pc;
					break;
				case 41:
					if(pc == 0) throw new js__$Boot_HaxeError("Extra )");
					--pc;
					break;
				case 34:
					var esc = false;
					try {
						while(true) {
							if(p == val.length) throw new js__$Boot_HaxeError("Unclosed \"");
							var c = HxOverrides.cca(val,p++);
							if(esc) esc = false; else if(c != null) switch(c) {
							case 34:
								throw "__break__";
								break;
							case 92:
								esc = true;
								break;
							}
						}
					} catch( e ) { if( e != "__break__" ) throw e; }
					break;
				case 44:
					if(pc == 0) {
						args.push(HxOverrides.substr(val,start,p - start - 1));
						start = p;
					}
					break;
				default:
				}
			}
			if(pc > 0) missingCloseParent = true;
			if(p > start || start > 0 && p == start) args.push(HxOverrides.substr(val,start,p - start));
		}
		var _g1 = 0;
		var _g2 = t.cases.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var c2 = t.cases[i];
			if(c2.name == id) {
				var vals = [i];
				var _g22 = 0;
				var _g3 = c2.args;
				while(_g22 < _g3.length) {
					var a = _g3[_g22];
					++_g22;
					var v = args.shift();
					if(v == null) {
						if(a.opt) vals.push(null); else throw new js__$Boot_HaxeError("Missing argument " + a.name + " : " + this.typeStr(a.type));
					} else {
						v = StringTools.trim(v);
						if(a.opt && v == "null") {
							vals.push(null);
							continue;
						}
						var val2;
						try {
							val2 = this.parseVal(a.type,v);
						} catch( e ) {
							if (e instanceof js__$Boot_HaxeError) e = e.val;
							if( js_Boot.__instanceof(e,String) ) {
								throw new js__$Boot_HaxeError(e + " for " + a.name);
							} else throw(e);
						}
						vals.push(val2);
					}
				}
				if(args.length > 0) throw new js__$Boot_HaxeError("Extra argument '" + args.shift() + "'");
				if(missingCloseParent) throw new js__$Boot_HaxeError("Missing )");
				while(vals[vals.length - 1] == null) vals.pop();
				return vals;
			}
		}
		throw new js__$Boot_HaxeError("Unkown value '" + id + "'");
	}
	,parseType: function(tstr) {
		switch(tstr) {
		case "Int":
			return cdb_ColumnType.TInt;
		case "Float":
			return cdb_ColumnType.TFloat;
		case "Bool":
			return cdb_ColumnType.TBool;
		case "String":
			return cdb_ColumnType.TString;
		default:
			var tmp;
			var _this = this.tmap;
			if(__map_reserved[tstr] != null) tmp = _this.existsReserved(tstr); else tmp = _this.h.hasOwnProperty(tstr);
			if(tmp) return cdb_ColumnType.TCustom(tstr); else {
				var tmp1;
				var _this1 = this.smap;
				if(__map_reserved[tstr] != null) tmp1 = _this1.existsReserved(tstr); else tmp1 = _this1.h.hasOwnProperty(tstr);
				if(tmp1) return cdb_ColumnType.TRef(tstr); else {
					if(StringTools.endsWith(tstr,">")) {
						var tname = tstr.split("<").shift();
						var tparam = HxOverrides.substr(HxOverrides.substr(tstr,tname.length + 1,null),0,-1);
					}
					throw new js__$Boot_HaxeError("Unknown type " + tstr);
				}
			}
		}
	}
	,typeCasesToString: function(t,prefix) {
		if(prefix == null) prefix = "";
		var arr = [];
		var _g = 0;
		var _g1 = t.cases;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var str = c.name;
			if(c.args.length > 0) {
				str += "( ";
				var out = [];
				var _g2 = 0;
				var _g3 = c.args;
				while(_g2 < _g3.length) {
					var a = _g3[_g2];
					++_g2;
					var k = "";
					if(a.opt) k += "?";
					k += a.name + " : " + this.typeStr(a.type);
					out.push(k);
				}
				str += out.join(", ");
				str += " )";
			}
			str += ";";
			arr.push(prefix + str);
		}
		return arr.join("\n");
	}
	,parseTypeCases: function(def) {
		var cases = [];
		var cmap = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = new EReg("[\n;]","g").split(def);
		while(_g < _g1.length) {
			var line = _g1[_g];
			++_g;
			var line1 = StringTools.trim(line);
			if(line1 == "") continue;
			if(HxOverrides.cca(line1,line1.length - 1) == 59) line1 = HxOverrides.substr(line1,1,null);
			var pos = line1.indexOf("(");
			var name = null;
			var args = [];
			if(pos < 0) name = line1; else {
				name = HxOverrides.substr(line1,0,pos);
				line1 = HxOverrides.substr(line1,pos + 1,null);
				if(HxOverrides.cca(line1,line1.length - 1) != 41) throw new js__$Boot_HaxeError("Missing closing parent in " + line1);
				line1 = HxOverrides.substr(line1,0,line1.length - 1);
				var _g2 = 0;
				var _g3 = line1.split(",");
				while(_g2 < _g3.length) {
					var arg = _g3[_g2];
					++_g2;
					var tname = arg.split(":");
					if(tname.length != 2) throw new js__$Boot_HaxeError("Required name:type in '" + arg + "'");
					var opt = false;
					var id = StringTools.trim(tname[0]);
					if(id.charAt(0) == "?") {
						opt = true;
						id = StringTools.trim(HxOverrides.substr(id,1,null));
					}
					var t = StringTools.trim(tname[1]);
					if(!this.r_ident.match(id)) throw new js__$Boot_HaxeError("Invalid identifier " + id);
					var c = { name : id, type : this.parseType(t), typeStr : null};
					if(opt) c.opt = true;
					args.push(c);
				}
			}
			if(!this.r_ident.match(name)) throw new js__$Boot_HaxeError("Invalid identifier " + line1);
			if(__map_reserved[name] != null?cmap.existsReserved(name):cmap.h.hasOwnProperty(name)) throw new js__$Boot_HaxeError("Duplicate identifier " + name);
			if(__map_reserved[name] != null) cmap.setReserved(name,true); else cmap.h[name] = true;
			cases.push({ name : name, args : args});
		}
		return cases;
	}
	,makePairs: function(oldA,newA) {
		var pairs = [];
		var oldL = Lambda.list(oldA);
		var newL = Lambda.list(newA);
		var _g = 0;
		while(_g < oldA.length) {
			var a = oldA[_g];
			++_g;
			var _g1_head = newL.h;
			while(_g1_head != null) {
				var val = _g1_head.item;
				_g1_head = _g1_head.next;
				var b = val;
				if(a.name == b.name) {
					pairs.push({ a : a, b : b});
					oldL.remove(a);
					newL.remove(b);
					break;
				}
			}
		}
		var _g_head = oldL.h;
		while(_g_head != null) {
			var val1 = _g_head.item;
			_g_head = _g_head.next;
			var a1 = val1;
			var _g_head1 = newL.h;
			while(_g_head1 != null) {
				var val2 = _g_head1.item;
				_g_head1 = _g_head1.next;
				var b2 = val2;
				if(Lambda.indexOf(oldA,a1) == Lambda.indexOf(newA,b2)) {
					pairs.push({ a : a1, b : b2});
					oldL.remove(a1);
					newL.remove(b2);
					break;
				}
			}
		}
		var _g_head2 = oldL.h;
		while(_g_head2 != null) {
			var val3 = _g_head2.item;
			_g_head2 = _g_head2.next;
			var a3 = val3;
			pairs.push({ a : a3, b : null});
		}
		return pairs;
	}
	,mapType: function(callb) {
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = s.columns;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				var t = callb(c.type);
				if(t != c.type) {
					c.type = t;
					c.typeStr = null;
				}
			}
		}
		var _g4 = 0;
		var _g14 = this.data.customTypes;
		while(_g4 < _g14.length) {
			var t4 = _g14[_g4];
			++_g4;
			var _g24 = 0;
			var _g34 = t4.cases;
			while(_g24 < _g34.length) {
				var c4 = _g34[_g24];
				++_g24;
				var _g44 = 0;
				var _g5 = c4.args;
				while(_g44 < _g5.length) {
					var a = _g5[_g44];
					++_g44;
					var t5 = callb(a.type);
					if(t5 != a.type) {
						a.type = t5;
						a.typeStr = null;
					}
				}
			}
		}
	}
	,updateRefs: function(sheet,refMap) {
		var _g3 = this;
		var convertTypeRec = null;
		convertTypeRec = function(t,o) {
			var c = t.cases[o[0]];
			var _g1 = 0;
			var _g = o.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				var v = o[i + 1];
				if(v == null) continue;
				var _g2 = c.args[i].type;
				switch(_g2[1]) {
				case 6:
					var n = _g2[2];
					if(n == sheet.name) {
						var tmp;
						var key = v;
						if(__map_reserved[key] != null) tmp = refMap.getReserved(key); else tmp = refMap.h[key];
						var v1 = tmp;
						if(v1 == null) continue;
						o[i + 1] = v1;
					}
					break;
				case 9:
					var name = _g2[2];
					var tmp1;
					var _this = _g3.tmap;
					if(__map_reserved[name] != null) tmp1 = _this.getReserved(name); else tmp1 = _this.h[name];
					convertTypeRec(tmp1,v);
					break;
				default:
				}
			}
		};
		var convertTypeRec1 = convertTypeRec;
		var _g4 = 0;
		var _g14 = this.data.sheets;
		while(_g4 < _g14.length) {
			var s = _g14[_g4];
			++_g4;
			var _g24 = 0;
			var _g34 = s.columns;
			while(_g24 < _g34.length) {
				var c4 = _g34[_g24];
				++_g24;
				var _g44 = c4.type;
				switch(_g44[1]) {
				case 6:
					var n4 = _g44[2];
					if(n4 == sheet.name) {
						var _g5 = 0;
						var _g6 = SheetData.getLines(s);
						while(_g5 < _g6.length) {
							var obj = _g6[_g5];
							++_g5;
							var id = Reflect.field(obj,c4.name);
							if(id == null) continue;
							id = __map_reserved[id] != null?refMap.getReserved(id):refMap.h[id];
							if(id == null) continue;
							obj[c4.name] = id;
						}
					}
					break;
				case 9:
					var t4 = _g44[2];
					var _g54 = 0;
					var _g64 = SheetData.getLines(s);
					while(_g54 < _g64.length) {
						var obj4 = _g64[_g54];
						++_g54;
						var o4 = Reflect.field(obj4,c4.name);
						if(o4 == null) continue;
						var tmp4;
						var _this4 = this.tmap;
						if(__map_reserved[t4] != null) tmp4 = _this4.getReserved(t4); else tmp4 = _this4.h[t4];
						convertTypeRec1(tmp4,o4);
					}
					break;
				default:
				}
			}
		}
	}
	,updateType: function(old,t) {
		var _g2 = this;
		var casesPairs = this.makePairs(old.cases,t.cases);
		var convMap = [];
		var _g = 0;
		while(_g < casesPairs.length) {
			var p = casesPairs[_g];
			++_g;
			if(p.b == null) continue;
			var id = Lambda.indexOf(t.cases,p.b);
			var conv = { def : [id], args : []};
			var args = this.makePairs(p.a.args,p.b.args);
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				if(a.b == null) {
					conv.args[Lambda.indexOf(p.a.args,a.a)] = (function() {
						return function(_) {
							return null;
						};
					})();
					continue;
				}
				var b = [a.b];
				var a1 = a.a;
				var c = this.getConvFunction(a1.type,b[0].type);
				if(c == null) throw new js__$Boot_HaxeError("Cannot convert " + p.a.name + "." + a1.name + ":" + this.typeStr(a1.type) + " to " + p.b.name + "." + b[0].name + ":" + this.typeStr(b[0].type));
				var f = [c.f];
				if(f[0] == null) f[0] = (function() {
					return function(x) {
						return x;
					};
				})();
				if(a1.opt != b[0].opt) {
					var oldf = [f[0]];
					if(a1.opt) f[0] = (function(oldf1,b1) {
						return function(v) {
							v = oldf1[0](v);
							if(v == null) return _g2.getDefault(b1[0]); else return v;
						};
					})(oldf,b); else {
						var def = [this.getDefault(a1)];
						f[0] = (function(def1,oldf2) {
							return function(v2) {
								if(v2 == def1[0]) return null; else return oldf2[0](v2);
							};
						})(def,oldf);
					}
				}
				var index = [Lambda.indexOf(p.b.args,b[0])];
				conv.args[Lambda.indexOf(p.a.args,a1)] = (function(index2,f2,b2) {
					return function(v3) {
						v3 = f2[0](v3);
						if(v3 == null && b2[0].opt) return null; else return { index : index2[0], v : v3};
					};
				})(index,f,b);
			}
			var _g13 = 0;
			var _g23 = p.b.args;
			while(_g13 < _g23.length) {
				var b3 = _g23[_g13];
				++_g13;
				conv.def.push(this.getDefault(b3));
			}
			while(conv.def[conv.def.length - 1] == null) conv.def.pop();
			convMap[Lambda.indexOf(old.cases,p.a)] = conv;
		}
		var convertTypeRec = null;
		convertTypeRec = function(t3,v4) {
			if(t3 == null) return null;
			if(t3 == old) {
				var conv4 = convMap[v4[0]];
				if(conv4 == null) return null;
				var out = conv4.def.slice();
				var _g14 = 0;
				var _g4 = conv4.args.length;
				while(_g14 < _g4) {
					var i = _g14++;
					var v5 = conv4.args[i](v4[i + 1]);
					if(v5 == null) continue;
					out[v5.index + 1] = v5.v;
				}
				return out;
			}
			var c4 = t3.cases[v4[0]];
			var _g15 = 0;
			var _g5 = c4.args.length;
			while(_g15 < _g5) {
				var i5 = _g15++;
				var _g25 = c4.args[i5].type;
				switch(_g25[1]) {
				case 9:
					var tname = _g25[2];
					var av = v4[i5 + 1];
					if(av != null) {
						var tmp = i5 + 1;
						var tmp5;
						var _this = _g2.tmap;
						if(__map_reserved[tname] != null) tmp5 = _this.getReserved(tname); else tmp5 = _this.h[tname];
						v4[tmp] = convertTypeRec(tmp5,av);
					}
					break;
				default:
				}
			}
			return v4;
		};
		var convertTypeRec1 = convertTypeRec;
		var _g6 = 0;
		var _g16 = this.data.sheets;
		while(_g6 < _g16.length) {
			var s = _g16[_g6];
			++_g6;
			var _g26 = 0;
			var _g3 = s.columns;
			while(_g26 < _g3.length) {
				var c6 = _g3[_g26];
				++_g26;
				var _g46 = c6.type;
				switch(_g46[1]) {
				case 9:
					var tname6 = _g46[2];
					var tmp6;
					var _this6 = this.tmap;
					if(__map_reserved[tname6] != null) tmp6 = _this6.getReserved(tname6); else tmp6 = _this6.h[tname6];
					var t2 = tmp6;
					var _g56 = 0;
					var _g66 = SheetData.getLines(s);
					while(_g56 < _g66.length) {
						var obj = _g66[_g56];
						++_g56;
						var v6 = Reflect.field(obj,c6.name);
						if(v6 != null) {
							v6 = convertTypeRec1(t2,v6);
							if(v6 == null) Reflect.deleteField(obj,c6.name); else obj[c6.name] = v6;
						}
					}
					if(tname6 == old.name && t.name != old.name) {
						c6.type = cdb_ColumnType.TCustom(t.name);
						c6.typeStr = null;
					}
					break;
				default:
				}
			}
		}
		if(t.name != old.name) {
			var _g7 = 0;
			var _g17 = this.data.customTypes;
			while(_g7 < _g17.length) {
				var t27 = _g17[_g7];
				++_g7;
				var _g27 = 0;
				var _g37 = t27.cases;
				while(_g27 < _g37.length) {
					var c7 = _g37[_g27];
					++_g27;
					var _g47 = 0;
					var _g57 = c7.args;
					while(_g47 < _g57.length) {
						var a7 = _g57[_g47];
						++_g47;
						var _g67 = a7.type;
						switch(_g67[1]) {
						case 9:
							var n = _g67[2];
							if(n == old.name) {
								a7.type = cdb_ColumnType.TCustom(t.name);
								a7.typeStr = null;
							}
							break;
						default:
						}
					}
				}
			}
			this.tmap.remove(old.name);
			old.name = t.name;
			var _this7 = this.tmap;
			var key = old.name;
			if(__map_reserved[key] != null) _this7.setReserved(key,old); else _this7.h[key] = old;
		}
		old.cases = t.cases;
	}
	,__class__: Model
};
var Main = function() {
	var _g = this;
	Model.call(this);
	this.window = js_node_webkit_Window.get();
	this.window.on("resize",$bind(this,this.onResize));
	this.window.on("focus",function(_) {
		js_node_webkit_App.clearCache();
	});
	this.initMenu();
	this.levels = [];
	this.mousePos = { x : 0, y : 0};
	this.sheetCursors = new haxe_ds_StringMap();
	this.window.window.addEventListener("keydown",$bind(this,this.onKey));
	this.window.window.addEventListener("keypress",$bind(this,this.onKeyPress));
	this.window.window.addEventListener("keyup",$bind(this,this.onKeyUp));
	this.window.window.addEventListener("mousemove",$bind(this,this.onMouseMove));
	$(".modal").keypress(function(e) {
		e.stopPropagation();
	}).keydown(function(e1) {
		e1.stopPropagation();
	});
	$("#search input").keydown(function(e2) {
		if(e2.keyCode == 27) {
			$("#search i").click();
			return;
		}
	}).keyup(function(_2) {
		_g.searchFilter($(this).val());
	});
	$("#search i").click(function(_3) {
		_g.searchFilter(null);
		$("#search").toggle();
	});
	this.cursor = { s : null, x : 0, y : 0};
	this.pages = new JqPages(this);
	this.load(true);
	var t = new haxe_Timer(1000);
	t.run = $bind(this,this.checkTime);
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	if(js_node_Fs.accessSync == null) js_node_Fs.accessSync = function(path) {
		if(!js_node_Fs.existsSync(path)) throw new js__$Boot_HaxeError(path + " does not exists");
	};
	Main.inst = new Main();
	var o = window;
	o._ = Main.inst;
};
Main.__super__ = Model;
Main.prototype = $extend(Model.prototype,{
	searchFilter: function(filter) {
		if(filter == "") filter = null;
		if(filter != null) filter = filter.toLowerCase();
		var lines = $("table.sheet tr").not(".head");
		lines.removeClass("filtered");
		if(filter != null) {
			var _g_i = 0;
			var _g_j = lines;
			while(_g_i < _g_j.length) {
				var t = _g_j[_g_i++];
				if(t.textContent.toLowerCase().indexOf(filter) < 0) t.classList.add("filtered");
			}
			while(lines.length > 0) {
				lines = lines.filter(".list").not(".filtered").prev();
				lines.removeClass("filtered");
			}
		}
	}
	,onResize: function(_) {
		if(this.level != null) this.level.onResize();
		this.pages.onResize();
	}
	,onMouseMove: function(e) {
		this.mousePos.x = e.clientX;
		this.mousePos.y = e.clientY;
	}
	,setClipBoard: function(schema,data) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < data.length) {
			var o = data[_g1];
			++_g1;
			_g.push(SheetData.objToString(this.cursor.s,o,true));
		}
		this.clipboard = { text : Std.string(_g), data : data, schema : schema};
		js_node_webkit_Clipboard.get().set(this.clipboard.text,"text");
	}
	,moveCursor: function(dx,dy,shift,ctrl) {
		if(this.cursor.s == null) return;
		if(this.cursor.x == -1 && ctrl) {
			if(dy != 0) this.moveLine(this.cursor.s,this.cursor.y,dy);
			this.updateCursor();
			return;
		}
		if(dx < 0 && this.cursor.x >= 0) this.cursor.x--;
		if(dy < 0 && this.cursor.y > 0) this.cursor.y--;
		if(dx > 0 && this.cursor.x < this.cursor.s.columns.length - 1) this.cursor.x++;
		if(dy > 0 && this.cursor.y < this.cursor.s.lines.length - 1) this.cursor.y++;
		this.cursor.select = null;
		this.updateCursor();
	}
	,isInput: function() {
		if(window.document.activeElement != null) return window.document.activeElement.nodeName == "INPUT"; else return false;
	}
	,onKeyPress: function(e) {
		if(!e.ctrlKey && !this.isInput()) $(".cursor").not(".edit").dblclick();
	}
	,getSelection: function() {
		if(this.cursor.s == null) return null;
		var x1 = this.cursor.x < 0?0:this.cursor.x;
		var x2 = this.cursor.x < 0?this.cursor.s.columns.length - 1:this.cursor.select != null?this.cursor.select.x:x1;
		var y1 = this.cursor.y;
		var y2 = this.cursor.select != null?this.cursor.select.y:y1;
		if(x2 < x1) {
			var tmp = x2;
			x2 = x1;
			x1 = tmp;
		}
		if(y2 < y1) {
			var tmp1 = y2;
			y2 = y1;
			y1 = tmp1;
		}
		return { x1 : x1, x2 : x2, y1 : y1, y2 : y2};
	}
	,onKey: function(e) {
		if(this.isInput()) return;
		var inCDB = this.level == null && this.pages.curPage < 0;
		var _g = e.keyCode;
		switch(_g) {
		case 45:
			if(inCDB) {
				if(this.cursor.s != null) {
					this.newLine(this.cursor.s,this.cursor.y);
					this.moveCursor(0,1,false,false);
				}
			}
			break;
		case 46:
			if(inCDB) {
				$(".selected.deletable").change();
				if(this.cursor.s != null) {
					if(this.cursor.s.props.isProps) {
						var l = this.getLine(this.cursor.s,this.cursor.y);
						if(l != null) Reflect.deleteField(this.cursor.s.lines[0],l.attr("colName"));
					} else if(this.cursor.x < 0) {
						var s = this.getSelection();
						var y = s.y2;
						while(y >= s.y1) {
							SheetData.deleteLine(this.cursor.s,y);
							--y;
						}
						this.cursor.y = s.y1;
						this.cursor.select = null;
					} else {
						var s1 = this.getSelection();
						var _g2 = s1.y1;
						var _g1 = s1.y2 + 1;
						while(_g2 < _g1) {
							var y1 = _g2++;
							var obj = this.cursor.s.lines[y1];
							var _g4 = s1.x1;
							var _g3 = s1.x2 + 1;
							while(_g4 < _g3) {
								var x = _g4++;
								var c = this.cursor.s.columns[x];
								var def = this.getDefault(c);
								if(def == null) Reflect.deleteField(obj,c.name); else obj[c.name] = def;
							}
						}
					}
				}
				this.refresh();
				this.save();
			}
			break;
		case 38:
			this.moveCursor(0,-1,e.shiftKey,e.ctrlKey);
			e.preventDefault();
			break;
		case 40:
			this.moveCursor(0,1,e.shiftKey,e.ctrlKey);
			e.preventDefault();
			break;
		case 37:
			this.moveCursor(-1,0,e.shiftKey,e.ctrlKey);
			break;
		case 39:
			this.moveCursor(1,0,e.shiftKey,e.ctrlKey);
			break;
		case 13:
			if(inCDB) {
				if(this.cursor.s != null && $(".cursor.t_list,.cursor.t_properties").click().length > 0) e.preventDefault();
			}
			break;
		case 32:
			e.preventDefault();
			break;
		case 90:
			if(e.ctrlKey && this.pages.curPage < 0) {
				if(this.history.length > 0) {
					this.redo.push(this.curSavedData);
					this.curSavedData = this.history.pop();
					this.quickLoad(this.curSavedData);
					this.initContent();
					this.save(false);
				}
			}
			break;
		case 89:
			if(e.ctrlKey && this.pages.curPage < 0) {
				if(this.redo.length > 0) {
					this.history.push(this.curSavedData);
					this.curSavedData = this.redo.pop();
					this.quickLoad(this.curSavedData);
					this.initContent();
					this.save(false);
				}
			}
			break;
		case 67:
			if(e.ctrlKey) {
				if(this.cursor.s != null) {
					var s2 = this.getSelection();
					var data = [];
					var _g22 = s2.y1;
					var _g13 = s2.y2 + 1;
					while(_g22 < _g13) {
						var y3 = _g22++;
						var obj3 = this.cursor.s.lines[y3];
						var out = { };
						var _g43 = s2.x1;
						var _g33 = s2.x2 + 1;
						while(_g43 < _g33) {
							var x3 = _g43++;
							var c3 = this.cursor.s.columns[x3];
							var v = Reflect.field(obj3,c3.name);
							if(v != null) out[c3.name] = v;
						}
						data.push(out);
					}
					var _g12 = [];
					var _g34 = s2.x1;
					var _g24 = s2.x2 + 1;
					while(_g34 < _g24) {
						var x4 = _g34++;
						_g12.push(this.cursor.s.columns[x4]);
					}
					this.setClipBoard(_g12,data);
				}
			}
			break;
		case 88:
			if(e.ctrlKey) {
				this.onKey({ keyCode : 67, ctrlKey : true});
				this.onKey({ keyCode : 46});
			}
			break;
		case 86:
			if(e.ctrlKey) {
				if(this.cursor.s == null || this.clipboard == null || js_node_webkit_Clipboard.get().get("text") != this.clipboard.text) return;
				var sheet = this.cursor.s;
				var posX = this.cursor.x < 0?0:this.cursor.x;
				var posY = this.cursor.y < 0?0:this.cursor.y;
				var _g14 = 0;
				var _g25 = this.clipboard.data;
				while(_g14 < _g25.length) {
					var obj1 = _g25[_g14];
					++_g14;
					if(posY == sheet.lines.length) SheetData.newLine(sheet);
					var obj2 = sheet.lines[posY];
					var _g45 = 0;
					var _g35 = this.clipboard.schema.length;
					while(_g45 < _g35) {
						var cid = _g45++;
						var c1 = this.clipboard.schema[cid];
						var c2 = sheet.columns[cid + posX];
						if(c2 == null) continue;
						var f = this.getConvFunction(c1.type,c2.type);
						var v5 = Reflect.field(obj1,c1.name);
						if(f == null) v5 = this.getDefault(c2); else {
							if(v5 != null) v5 = JSON.parse(JSON.stringify(v5));
							if(f.f != null) v5 = f.f(v5);
						}
						if(v5 == null && !c2.opt) v5 = this.getDefault(c2);
						if(v5 == null) Reflect.deleteField(obj2,c2.name); else obj2[c2.name] = v5;
					}
					++posY;
				}
				this.makeSheet(sheet);
				this.refresh();
				this.save();
			}
			break;
		case 9:
			if(e.ctrlKey) {
				var sheets = this.data.sheets.filter(function(s5) {
					return !s5.props.hide;
				});
				var pos = (this.level == null?Lambda.indexOf(sheets,this.viewSheet):sheets.length + Lambda.indexOf(this.levels,this.level)) + 1;
				var s6 = sheets[pos % (sheets.length + this.levels.length)];
				if(s6 != null) this.selectSheet(s6); else {
					var level = this.levels[pos - sheets.length];
					if(level != null) this.selectLevel(level);
				}
			} else this.moveCursor(e.shiftKey?-1:1,0,false,false);
			break;
		case 27:
			if(this.cursor.s != null && this.cursor.s.parent != null) {
				var p = this.cursor.s.parent;
				this.setCursor(p.sheet,p.column,p.line);
				$(".cursor").click();
			} else if(this.cursor.select != null) {
				this.cursor.select = null;
				this.updateCursor();
			}
			break;
		case 113:
			if(inCDB) $(".cursor").not(".edit").dblclick();
			break;
		case 114:
			if(this.cursor.s != null) this.showReferences(this.cursor.s,this.cursor.y);
			break;
		case 115:
			if(this.cursor.s != null && this.cursor.x >= 0) {
				var c6 = this.cursor.s.columns[this.cursor.x];
				var id = Reflect.field(this.cursor.s.lines[this.cursor.y],c6.name);
				var _g16 = c6.type;
				switch(_g16[1]) {
				case 6:
					var s7 = _g16[2];
					var tmp;
					var _this = this.smap;
					if(__map_reserved[s7] != null) tmp = _this.getReserved(s7); else tmp = _this.h[s7];
					var sd = tmp;
					if(sd != null) {
						var tmp7;
						var _this7 = sd.index;
						if(__map_reserved[id] != null) tmp7 = _this7.getReserved(id); else tmp7 = _this7.h[id];
						var k = tmp7;
						if(k != null) {
							var index = Lambda.indexOf(sd.s.lines,k.obj);
							if(index >= 0) {
								var _this8 = this.sheetCursors;
								var value = { s : sd.s, x : 0, y : index};
								if(__map_reserved[s7] != null) _this8.setReserved(s7,value); else _this8.h[s7] = value;
								this.selectSheet(sd.s);
							}
						}
					}
					break;
				default:
				}
			}
			break;
		case 70:
			if(e.ctrlKey && inCDB) {
				var s8 = $("#search");
				s8.show();
				s8.find("input").focus().select();
			}
			break;
		default:
		}
		if(this.level != null) this.level.onKey(e);
		if(this.pages.curPage >= 0) this.pages.onKey(e);
	}
	,onKeyUp: function(e) {
		if(this.level != null && !this.isInput()) this.level.onKeyUp(e);
	}
	,getLine: function(sheet,index) {
		return $("table[sheet='" + SheetData.getPath(sheet) + "'] > tbody > tr").not(".head,.separator,.list").eq(index);
	}
	,showReferences: function(sheet,index) {
		var _g3 = this;
		var results = SheetData.getReferences(sheet,index);
		if(results == null) return;
		if(results.length == 0) {
			this.setErrorMessage("Not found");
			var f = $bind(this,this.setErrorMessage);
			haxe_Timer.delay(function() {
				f();
			},500);
			return;
		}
		var line = this.getLine(sheet,index);
		line.next("tr.list").change();
		var res = $("<tr>").addClass("list");
		$("<td>").appendTo(res);
		var cell = $("<td>").attr("colspan","" + (sheet.columns.length + (sheet.props.level != null?1:0))).appendTo(res);
		var div = $("<div>").appendTo(cell);
		div.hide();
		var content = $("<table>").appendTo(div);
		var cols = $("<tr>").addClass("head");
		$("<td>").addClass("start").appendTo(cols).click(function(_) {
			res.change();
		});
		var _g = 0;
		var _g1 = ["path","id"];
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			$("<td>").text(name).appendTo(cols);
		}
		content.append(cols);
		var index1 = 0;
		var _g2 = 0;
		while(_g2 < results.length) {
			var rs = [results[_g2]];
			++_g2;
			var l = $("<tr>").appendTo(content).addClass("clickable");
			$("<td>").text("" + index1++).appendTo(l);
			var slast = [rs[0].s[rs[0].s.length - 1]];
			$("<td>").text(slast[0].s.name.split("@").join(".") + "." + slast[0].c).appendTo(l);
			var path = [];
			var _g22 = 0;
			var _g12 = rs[0].s.length;
			while(_g22 < _g12) {
				var i = _g22++;
				var s = rs[0].s[i];
				var oid = Reflect.field(rs[0].o.path[i],s.id);
				if(oid == null || oid == "") path.push(s.s.name.split("@").pop() + "[" + rs[0].o.indexes[i] + "]"); else path.push(oid);
			}
			$("<td>").text(path.join(".")).appendTo(l);
			l.click((function(slast2,rs2) {
				return function(e) {
					var key = null;
					var _g23 = 0;
					var _g13 = rs2[0].s.length - 1;
					while(_g23 < _g13) {
						var i3 = _g23++;
						var p = rs2[0].s[i3];
						key = SheetData.getPath(p.s) + "@" + p.c + ":" + rs2[0].o.indexes[i3];
						var _this = _g3.openedList;
						if(__map_reserved[key] != null) _this.setReserved(key,true); else _this.h[key] = true;
					}
					var starget = rs2[0].s[0].s;
					var value = { s : { name : slast2[0].s.name, path : key, separators : [], lines : [], columns : [], props : { }}, x : -1, y : rs2[0].o.indexes[rs2[0].o.indexes.length - 1]};
					var _this3 = _g3.sheetCursors;
					var key3 = starget.name;
					if(__map_reserved[key3] != null) _this3.setReserved(key3,value); else _this3.h[key3] = value;
					_g3.selectSheet(starget);
					e.stopPropagation();
				};
			})(slast,rs));
		}
		res.change(function(e3) {
			div.slideUp(100,function() {
				res.remove();
			});
			e3.stopPropagation();
		});
		res.insertAfter(line);
		div.slideDown(100);
	}
	,moveLine: function(sheet,index,delta) {
		this.getLine(sheet,index).next("tr.list").change();
		var index1 = SheetData.moveLine(sheet,index,delta);
		if(index1 != null) {
			this.setCursor(sheet,-1,index1,null,false);
			this.refresh();
			this.save();
		}
	}
	,changed: function(sheet,c,index,old) {
		var _g = c.type;
		switch(_g[1]) {
		case 7:
			this.saveImages();
			break;
		case 14:
			var obj = sheet.lines[index];
			var oldV = old;
			var newV = Reflect.field(obj,c.name);
			if(newV != null && oldV != null && oldV.file != newV.file && !sys_FileSystem.exists(this.getAbsPath(oldV.file)) && sys_FileSystem.exists(this.getAbsPath(newV.file))) {
				var change = false;
				var _g2 = 0;
				var _g1 = sheet.lines.length;
				while(_g2 < _g1) {
					var i = _g2++;
					var t = Reflect.field(sheet.lines[i],c.name);
					if(t != null && t.file == oldV.file) {
						t.file = newV.file;
						change = true;
					}
				}
				if(change) this.refresh();
			}
			SheetData.updateValue(sheet,c,index,old);
			break;
		default:
			SheetData.updateValue(sheet,c,index,old);
		}
		this.save();
	}
	,setErrorMessage: function(msg) {
		if(msg == null) $(".errorMsg").hide(); else $(".errorMsg").text(msg).show();
	}
	,tileHtml: function(v,isInline) {
		var path = this.getAbsPath(v.file);
		if(!this.quickExists(path)) {
			if(isInline) return "";
			return "<span class=\"error\">" + v.file + "</span>";
		}
		var id = Main.UID++;
		var width = v.size * (v.width == null?1:v.width);
		var height = v.size * (v.height == null?1:v.height);
		var max = width > height?width:height;
		var zoom = max < 64?2:128 / max;
		var html = "<div id=\"_c" + id + "\" style=\"width : " + (width * zoom | 0) + "px; height : " + (height * zoom | 0) + "px; background : url('" + path + "') -" + (v.size * v.x * zoom | 0) + "px -" + (v.size * v.y * zoom | 0) + "px; " + (isInline?"display:inline-block;":"border : 1px solid #888;") + "\"></div>";
		html += "<img src=\"" + path + "\" style=\"display:none\" onload=\"$('#_c" + id + "').css({backgroundSize : ((this.width*" + zoom + ")|0)+'px ' + ((this.height*" + zoom + ")|0)+'px' " + (zoom > 1?", imageRendering : 'pixelated'":"") + "}); if( this.parentNode != null ) this.parentNode.removeChild(this)\"/>";
		return html;
	}
	,valueHtml: function(c,v,sheet,obj) {
		if(v == null) {
			if(c.opt) return "&nbsp;";
			return "<span class=\"error\">#NULL</span>";
		}
		var _g = c.type;
		switch(_g[1]) {
		case 3:case 4:
			var _g1 = c.display;
			if(_g1 != null) switch(_g1) {
			case 1:
				return Math.round(v * 10000) / 100 + "%";
			default:
				return Std.string(v) + "";
			} else return Std.string(v) + "";
			break;
		case 0:
			if(v == "") return "<span class=\"error\">#MISSING</span>"; else {
				var tmp;
				var _this = this.smap;
				var key = sheet.name;
				if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
				if(tmp.index.get(v).obj == obj) return v; else return "<span class=\"error\">#DUP(" + Std.string(v) + ")</span>";
			}
			break;
		case 1:case 12:
			if(v == "") return "&nbsp;"; else return StringTools.htmlEscape(v);
			break;
		case 6:
			var sname = _g[2];
			if(v == "") return "<span class=\"error\">#MISSING</span>"; else {
				var tmp1;
				var _this1 = this.smap;
				if(__map_reserved[sname] != null) tmp1 = _this1.getReserved(sname); else tmp1 = _this1.h[sname];
				var s = tmp1;
				var tmp2;
				var _this2 = s.index;
				var key2 = v;
				if(__map_reserved[key2] != null) tmp2 = _this2.getReserved(key2); else tmp2 = _this2.h[key2];
				var i = tmp2;
				if(i == null) return "<span class=\"error\">#REF(" + Std.string(v) + ")</span>"; else return (i.ico == null?"":this.tileHtml(i.ico,true) + " ") + StringTools.htmlEscape(i.disp);
			}
			break;
		case 2:
			if(v) return "Y"; else return "N";
			break;
		case 5:
			var values = _g[2];
			return values[v];
		case 7:
			if(v == "") return "<span class=\"error\">#MISSING</span>"; else {
				var data = Reflect.field(this.imageBank,v);
				if(data == null) return "<span class=\"error\">#NOTFOUND(" + Std.string(v) + ")</span>"; else return "<img src=\"" + data + "\"/>";
			}
			break;
		case 8:
			var a = v;
			var tmp3;
			var _this3 = SheetData.model.smap;
			var key3 = sheet.name + "@" + c.name;
			if(__map_reserved[key3] != null) tmp3 = _this3.getReserved(key3); else tmp3 = _this3.h[key3];
			var ps = tmp3.s;
			var out = [];
			var size = 0;
			var _g13 = 0;
			while(_g13 < a.length) {
				var v3 = a[_g13];
				++_g13;
				var vals = [];
				var _g2 = 0;
				var _g3 = ps.columns;
				while(_g2 < _g3.length) {
					var c4 = _g3[_g2];
					++_g2;
					var _g4 = c4.type;
					switch(_g4[1]) {
					case 8:case 17:
						continue;
						break;
					default:
						vals.push(this.valueHtml(c4,Reflect.field(v3,c4.name),ps,v3));
					}
				}
				var v4 = vals.length == 1?vals[0]:"" + Std.string(vals);
				if(size > 100) {
					out.push("...");
					break;
				}
				var vstr = v4;
				if(v4.indexOf("<") >= 0) {
					vstr = new EReg("<img src=\"[^\"]+\" style=\"display:none\"[^>]+>","g").replace(vstr,"");
					vstr = new EReg("<img src=\"[^\"]+\"/>","g").replace(vstr,"[I]");
					vstr = new EReg("<div id=\"[^>]+></div>","g").replace(vstr,"[D]");
				}
				size += vstr.length;
				out.push(v4);
			}
			if(out.length == 0) return "[]";
			return out.join(", ");
		case 17:
			var tmp4;
			var _this4 = SheetData.model.smap;
			var key4 = sheet.name + "@" + c.name;
			if(__map_reserved[key4] != null) tmp4 = _this4.getReserved(key4); else tmp4 = _this4.h[key4];
			var ps4 = tmp4.s;
			var out4 = [];
			var _g14 = 0;
			var _g24 = ps4.columns;
			while(_g14 < _g24.length) {
				var c5 = _g24[_g14];
				++_g14;
				var pval = Reflect.field(v,c5.name);
				if(pval == null && c5.opt) continue;
				out4.push(c5.name + " : " + this.valueHtml(c5,pval,ps4,v));
			}
			return out4.join("<br/>");
		case 9:
			var name = _g[2];
			var tmp5;
			var _this5 = this.tmap;
			if(__map_reserved[name] != null) tmp5 = _this5.getReserved(name); else tmp5 = _this5.h[name];
			var t = tmp5;
			var a5 = v;
			var cas = t.cases[a5[0]];
			var str = cas.name;
			if(cas.args.length > 0) {
				str += "(";
				var out5 = [];
				var pos = 1;
				var _g25 = 1;
				var _g15 = a5.length;
				while(_g25 < _g15) {
					var i5 = _g25++;
					out5.push(this.valueHtml(cas.args[i5 - 1],a5[i5],sheet,this));
				}
				str += out5.join(",");
				str += ")";
			}
			return str;
		case 10:
			var values5 = _g[2];
			var v5 = v;
			var flags = [];
			var _g26 = 0;
			var _g16 = values5.length;
			while(_g26 < _g16) {
				var i6 = _g26++;
				if((v5 & 1 << i6) != 0) flags.push(StringTools.htmlEscape(values5[i6]));
			}
			if(flags.length == 0) return String.fromCharCode(8709); else return flags.join("|<wbr>");
			break;
		case 11:
			var id = Main.UID++;
			return "<div class=\"color\" style=\"background-color:#" + StringTools.hex(v,6) + "\"></div>";
		case 13:
			var path = this.getAbsPath(v);
			var ext = v.split(".").pop().toLowerCase();
			var html = v == ""?"<span class=\"error\">#MISSING</span>":StringTools.htmlEscape(v);
			if(v != "" && !this.quickExists(path)) html = "<span class=\"error\">" + html + "</span>"; else if(ext == "png" || ext == "jpg" || ext == "jpeg" || ext == "gif") html = "<span class=\"preview\">" + html + "<div class=\"previewContent\"><div class=\"label\"></div><img src=\"" + path + "\" onload=\"$(this).parent().find('.label').text(this.width+'x'+this.height)\"/></div></span>";
			if(v != "") html += " <input type=\"submit\" value=\"open\" onclick=\"_.openFile('" + path + "')\"/>";
			return html;
		case 14:
			return this.tileHtml(v);
		case 15:
			var v6 = v;
			var path6 = this.getAbsPath(v6.file);
			if(!this.quickExists(path6)) return "<span class=\"error\">" + v6.file + "</span>"; else return "#DATA";
			break;
		case 16:
			var str6 = Std.string(v).split("\n").join(" ").split("\t").join("");
			if(str6.length > 50) str6 = HxOverrides.substr(str6,0,47) + "...";
			return str6;
		}
	}
	,popupLine: function(sheet,index) {
		var _g = this;
		var n = new js_node_webkit_Menu();
		var nup = new js_node_webkit_MenuItem({ label : "Move Up"});
		var ndown = new js_node_webkit_MenuItem({ label : "Move Down"});
		var nins = new js_node_webkit_MenuItem({ label : "Insert"});
		var ndel = new js_node_webkit_MenuItem({ label : "Delete"});
		var nsep = new js_node_webkit_MenuItem({ label : "Separator", type : "checkbox"});
		var nref = new js_node_webkit_MenuItem({ label : "Show References"});
		var _g1 = 0;
		var _g11 = [nup,ndown,nins,ndel,nsep,nref];
		while(_g1 < _g11.length) {
			var m = _g11[_g1];
			++_g1;
			n.append(m);
		}
		var sepIndex = Lambda.indexOf(sheet.separators,index);
		nsep.checked = sepIndex >= 0;
		nins.click = function() {
			_g.newLine(sheet,index);
		};
		nup.click = function() {
			_g.moveLine(sheet,index,-1);
		};
		ndown.click = function() {
			_g.moveLine(sheet,index,1);
		};
		ndel.click = function() {
			SheetData.deleteLine(sheet,index);
			_g.refresh();
			_g.save();
		};
		nsep.click = function() {
			if(sepIndex >= 0) {
				sheet.separators.splice(sepIndex,1);
				if(sheet.props.separatorTitles != null) sheet.props.separatorTitles.splice(sepIndex,1);
			} else {
				sepIndex = sheet.separators.length;
				var _g12 = 0;
				var _g2 = sheet.separators.length;
				while(_g12 < _g2) {
					var i = _g12++;
					if(sheet.separators[i] > index) {
						sepIndex = i;
						break;
					}
				}
				sheet.separators.splice(sepIndex,0,index);
				if(sheet.props.separatorTitles != null && sheet.props.separatorTitles.length > sepIndex) sheet.props.separatorTitles.splice(sepIndex,0,null);
			}
			_g.refresh();
			_g.save();
		};
		nref.click = function() {
			_g.showReferences(sheet,index);
		};
		if(sheet.props.hide) nsep.enabled = false;
		n.popup(this.mousePos.x,this.mousePos.y);
	}
	,popupColumn: function(sheet,c) {
		var _g4 = this;
		var n = new js_node_webkit_Menu();
		var nedit = new js_node_webkit_MenuItem({ label : "Edit"});
		var nins = new js_node_webkit_MenuItem({ label : "Add Column"});
		var nleft = new js_node_webkit_MenuItem({ label : "Move Left"});
		var nright = new js_node_webkit_MenuItem({ label : "Move Right"});
		var ndel = new js_node_webkit_MenuItem({ label : "Delete"});
		var ndisp = new js_node_webkit_MenuItem({ label : "Display Column", type : "checkbox"});
		var nicon = new js_node_webkit_MenuItem({ label : "Display Icon", type : "checkbox"});
		var _g = 0;
		var _g1 = [nedit,nins,nleft,nright,ndel,ndisp,nicon];
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			n.append(m);
		}
		var _g2 = c.type;
		switch(_g2[1]) {
		case 0:case 1:case 5:case 10:
			var conv = new js_node_webkit_MenuItem({ label : "Convert"});
			var cm = new js_node_webkit_Menu();
			var _g12 = 0;
			var _g24 = [{ n : "lowercase", f : function(s) {
				return s.toLowerCase();
			}},{ n : "UPPERCASE", f : function(s2) {
				return s2.toUpperCase();
			}},{ n : "UpperIdent", f : function(s3) {
				return HxOverrides.substr(s3,0,1).toUpperCase() + HxOverrides.substr(s3,1,null);
			}},{ n : "lowerIdent", f : function(s4) {
				return HxOverrides.substr(s4,0,1).toLowerCase() + HxOverrides.substr(s4,1,null);
			}}];
			while(_g12 < _g24.length) {
				var k = [_g24[_g12]];
				++_g12;
				var m4 = new js_node_webkit_MenuItem({ label : k[0].n});
				m4.click = (function(k4) {
					return function() {
						var _g3 = c.type;
						switch(_g3[1]) {
						case 5:
							var values = _g3[2];
							var _g5 = 0;
							var _g44 = values.length;
							while(_g5 < _g44) {
								var i = _g5++;
								values[i] = k4[0].f(values[i]);
							}
							break;
						case 10:
							var values4 = _g3[2];
							var _g54 = 0;
							var _g45 = values4.length;
							while(_g54 < _g45) {
								var i5 = _g54++;
								values4[i5] = k4[0].f(values4[i5]);
							}
							break;
						default:
							var refMap = new haxe_ds_StringMap();
							var _g46 = 0;
							var _g56 = SheetData.getLines(sheet);
							while(_g46 < _g56.length) {
								var obj = _g56[_g46];
								++_g46;
								var t = Reflect.field(obj,c.name);
								if(t != null && t != "") {
									var t2 = k4[0].f(t);
									if(t2 == null && !c.opt) t2 = "";
									if(t2 == null) Reflect.deleteField(obj,c.name); else {
										obj[c.name] = t2;
										if(t2 != "") {
											if(__map_reserved[t] != null) refMap.setReserved(t,t2); else refMap.h[t] = t2;
										}
									}
								}
							}
							if(c.type == cdb_ColumnType.TId) _g4.updateRefs(sheet,refMap);
							_g4.makeSheet(sheet);
						}
						_g4.refresh();
						_g4.save();
					};
				})(k);
				cm.append(m4);
			}
			conv.submenu = cm;
			n.append(conv);
			break;
		case 3:case 4:
			var conv6 = new js_node_webkit_MenuItem({ label : "Convert"});
			var cm6 = new js_node_webkit_Menu();
			var _g16 = 0;
			var _g29 = [{ n : "* 10", f : function(s6) {
				return s6 * 10;
			}},{ n : "/ 10", f : function(s7) {
				return s7 / 10;
			}},{ n : "+ 1", f : function(s8) {
				return s8 + 1;
			}},{ n : "- 1", f : function(s9) {
				return s9 - 1;
			}}];
			while(_g16 < _g29.length) {
				var k9 = [_g29[_g16]];
				++_g16;
				var m9 = new js_node_webkit_MenuItem({ label : k9[0].n});
				m9.click = (function(k10) {
					return function() {
						var _g310 = 0;
						var _g410 = SheetData.getLines(sheet);
						while(_g310 < _g410.length) {
							var obj10 = _g410[_g310];
							++_g310;
							var t10 = Reflect.field(obj10,c.name);
							if(t10 != null) {
								var t210 = k10[0].f(t10);
								if(c.type == cdb_ColumnType.TInt) t210 = t210 | 0;
								obj10[c.name] = t210;
							}
						}
						_g4.refresh();
						_g4.save();
					};
				})(k9);
				cm6.append(m9);
			}
			conv6.submenu = cm6;
			n.append(conv6);
			break;
		default:
		}
		ndisp.checked = sheet.props.displayColumn == c.name;
		nicon.checked = sheet.props.displayIcon == c.name;
		ndisp.enabled = false;
		nicon.enabled = false;
		var _g10 = c.type;
		switch(_g10[1]) {
		case 1:case 6:
			ndisp.enabled = true;
			break;
		case 14:
			nicon.enabled = true;
			break;
		default:
		}
		nedit.click = function() {
			_g4.newColumn(sheet.name,c);
		};
		nleft.click = function() {
			var index = Lambda.indexOf(sheet.columns,c);
			if(index > 0) {
				HxOverrides.remove(sheet.columns,c);
				sheet.columns.splice(index - 1,0,c);
				_g4.refresh();
				_g4.save();
			}
		};
		nright.click = function() {
			var index10 = Lambda.indexOf(sheet.columns,c);
			if(index10 < sheet.columns.length - 1) {
				HxOverrides.remove(sheet.columns,c);
				sheet.columns.splice(index10 + 1,0,c);
				_g4.refresh();
				_g4.save();
			}
		};
		ndel.click = function() {
			_g4.deleteColumn(sheet,c.name);
		};
		ndisp.click = function() {
			if(sheet.props.displayColumn == c.name) sheet.props.displayColumn = null; else sheet.props.displayColumn = c.name;
			_g4.makeSheet(sheet);
			_g4.refresh();
			_g4.save();
		};
		nicon.click = function() {
			if(sheet.props.displayIcon == c.name) sheet.props.displayIcon = null; else sheet.props.displayIcon = c.name;
			_g4.makeSheet(sheet);
			_g4.refresh();
			_g4.save();
		};
		nins.click = function() {
			_g4.newColumn(sheet.name,null,Lambda.indexOf(sheet.columns,c) + 1);
		};
		n.popup(this.mousePos.x,this.mousePos.y);
	}
	,popupSheet: function(s,li) {
		var _g = this;
		var n = new js_node_webkit_Menu();
		var nins = new js_node_webkit_MenuItem({ label : "Add Sheet"});
		var nleft = new js_node_webkit_MenuItem({ label : "Move Left"});
		var nright = new js_node_webkit_MenuItem({ label : "Move Right"});
		var nren = new js_node_webkit_MenuItem({ label : "Rename"});
		var ndel = new js_node_webkit_MenuItem({ label : "Delete"});
		var nindex = new js_node_webkit_MenuItem({ label : "Add Index", type : "checkbox"});
		var ngroup = new js_node_webkit_MenuItem({ label : "Add Group", type : "checkbox"});
		var _g1 = 0;
		var _g11 = [nins,nleft,nright,nren,ndel,nindex,ngroup];
		while(_g1 < _g11.length) {
			var m = _g11[_g1];
			++_g1;
			n.append(m);
		}
		nleft.click = function() {
			var prev = -1;
			var _g2 = 0;
			var _g12 = _g.data.sheets.length;
			while(_g2 < _g12) {
				var i = _g2++;
				var s2 = _g.data.sheets[i];
				if(s == s2) break;
				if(!s2.props.hide) prev = i;
			}
			if(prev < 0) return;
			HxOverrides.remove(_g.data.sheets,s);
			_g.data.sheets.splice(prev,0,s);
			_g.prefs.curSheet = prev;
			_g.initContent();
			_g.save();
		};
		nright.click = function() {
			var found = null;
			var _g22 = 0;
			var _g13 = _g.data.sheets.length;
			while(_g22 < _g13) {
				var i3 = _g22++;
				var s23 = _g.data.sheets[i3];
				if(s == s23) found = -1; else if(!s23.props.hide && found != null) {
					found = i3;
					break;
				}
			}
			if(found == null || found < 0) return;
			HxOverrides.remove(_g.data.sheets,s);
			_g.data.sheets.splice(found,0,s);
			_g.prefs.curSheet = found;
			_g.initContent();
			_g.save();
		};
		ndel.click = function() {
			_g.deleteSheet(s);
			_g.initContent();
			_g.save();
		};
		nins.click = function() {
			_g.newSheet();
		};
		nindex.checked = s.props.hasIndex;
		nindex.click = function() {
			if(s.props.hasIndex) {
				var _g3 = 0;
				var _g14 = SheetData.getLines(s);
				while(_g3 < _g14.length) {
					var o = _g14[_g3];
					++_g3;
					Reflect.deleteField(o,"index");
				}
				s.props.hasIndex = false;
			} else {
				var _g4 = 0;
				var _g15 = s.columns;
				while(_g4 < _g15.length) {
					var c = _g15[_g4];
					++_g4;
					if(c.name == "index") {
						_g.error("Column 'index' already exists");
						return;
					}
				}
				s.props.hasIndex = true;
			}
			_g.save();
		};
		ngroup.checked = s.props.hasGroup;
		ngroup.click = function() {
			if(s.props.hasGroup) {
				var _g5 = 0;
				var _g16 = SheetData.getLines(s);
				while(_g5 < _g16.length) {
					var o6 = _g16[_g5];
					++_g5;
					Reflect.deleteField(o6,"group");
				}
				s.props.hasGroup = false;
			} else {
				var _g6 = 0;
				var _g17 = s.columns;
				while(_g6 < _g17.length) {
					var c7 = _g17[_g6];
					++_g6;
					if(c7.name == "group") {
						_g.error("Column 'group' already exists");
						return;
					}
				}
				s.props.hasGroup = true;
			}
			_g.save();
		};
		nren.click = function() {
			li.dblclick();
		};
		if(s.props.level != null || SheetData.hasColumn(s,"width",[cdb_ColumnType.TInt]) && SheetData.hasColumn(s,"height",[cdb_ColumnType.TInt]) && SheetData.hasColumn(s,"props",[cdb_ColumnType.TDynamic])) {
			var nlevel = new js_node_webkit_MenuItem({ label : "Level", type : "checkbox"});
			nlevel.checked = s.props.level != null;
			n.append(nlevel);
			nlevel.click = function() {
				if(s.props.level != null) Reflect.deleteField(s.props,"level"); else s.props.level = { tileSets : { }};
				_g.save();
				_g.refresh();
			};
		}
		n.popup(this.mousePos.x,this.mousePos.y);
	}
	,editCell: function(c,v,sheet,index) {
		var _g = this;
		var obj = sheet.lines[index];
		var val = Reflect.field(obj,c.name);
		var old = val;
		var html = _g.valueHtml(c,val,sheet,obj);
		if(v.hasClass("edit")) return;
		var editDone = function() {
			v.html(html);
			v.removeClass("edit");
			_g.setErrorMessage();
		};
		{
			var _g1 = c.type;
			switch(_g1[1]) {
			case 3:case 4:case 1:case 0:case 9:case 16:
				v.empty();
				var i = $("<input>");
				v.addClass("edit");
				i.appendTo(v);
				if(val != null) {
					var _g11 = c.type;
					switch(_g11[1]) {
					case 9:
						var t = _g11[2];
						i.val(this.typeValToString((function($this) {
							var $r;
							var _this = $this.tmap;
							$r = __map_reserved[t] != null?_this.getReserved(t):_this.h[t];
							return $r;
						}(this)),val));
						break;
					case 16:
						i.val(JSON.stringify(val));
						break;
					default:
						i.val("" + Std.string(val));
					}
				}
				i.change(function(e) {
					e.stopPropagation();
				});
				i.keydown(function(e1) {
					var _g12 = e1.keyCode;
					switch(_g12) {
					case 27:
						editDone();
						break;
					case 13:
						i.blur();
						e1.preventDefault();
						break;
					case 38:case 40:
						i.blur();
						return;
					case 9:
						i.blur();
						_g.moveCursor(e1.shiftKey?-1:1,0,false,false);
						haxe_Timer.delay(function() {
							$(".cursor").dblclick();
						},1);
						e1.preventDefault();
						break;
					default:
					}
					e1.stopPropagation();
				});
				i.blur(function(_) {
					var nv = i.val();
					var old2 = val;
					var prevObj = c.type == cdb_ColumnType.TId && old2 != null?(function($this) {
						var $r;
						var this2 = ((function($this) {
							var $r;
							var _this2 = _g.smap;
							var key = sheet.name;
							$r = __map_reserved[key] != null?_this2.getReserved(key):_this2.h[key];
							return $r;
						}($this))).index;
						$r = this2.get(val);
						return $r;
					}(this)):null;
					var prevTarget = null;
					if(nv == "" && c.opt) {
						if(val != null) {
							val = html = null;
							Reflect.deleteField(obj,c.name);
							_g.changed(sheet,c,index,old);
						}
					} else {
						var val2 = (function($this) {
							var $r;
							var _g13 = c.type;
							$r = (function($this) {
								var $r;
								switch(_g13[1]) {
								case 3:
									$r = Std.parseInt(nv);
									break;
								case 4:
									$r = (function($this) {
										var $r;
										var f = parseFloat(nv);
										$r = isNaN(f)?null:f;
										return $r;
									}($this));
									break;
								case 0:
									$r = _g.r_ident.match(nv)?nv:null;
									break;
								case 9:
									$r = (function($this) {
										var $r;
										var t3 = _g13[2];
										$r = (function($this) {
											var $r;
											try {
												$r = _g.parseTypeVal((function($this) {
													var $r;
													var _this3 = _g.tmap;
													$r = __map_reserved[t3] != null?_this3.getReserved(t3):_this3.h[t3];
													return $r;
												}($this)),nv);
											} catch( e3 ) {
												$r = null;
											}
											return $r;
										}($this));
										return $r;
									}($this));
									break;
								case 16:
									$r = (function($this) {
										var $r;
										try {
											$r = _g.parseDynamic(nv);
										} catch( e4 ) {
											$r = null;
										}
										return $r;
									}($this));
									break;
								default:
									$r = nv;
								}
								return $r;
							}($this));
							return $r;
						}(this));
						if(val2 != val && val2 != null) {
							prevTarget = (function($this) {
								var $r;
								var this4 = ((function($this) {
									var $r;
									var _this4 = _g.smap;
									var key4 = sheet.name;
									$r = __map_reserved[key4] != null?_this4.getReserved(key4):_this4.h[key4];
									return $r;
								}($this))).index;
								$r = this4.get(val2);
								return $r;
							}(this));
							if(c.type == cdb_ColumnType.TId && val != null && (prevObj == null || prevObj.obj == obj)) {
								var m = new haxe_ds_StringMap();
								var key5 = val;
								var value = val2;
								if(__map_reserved[key5] != null) m.setReserved(key5,value); else m.h[key5] = value;
								_g.updateRefs(sheet,m);
							}
							val = val2;
							obj[c.name] = val;
							_g.changed(sheet,c,index,old);
							html = _g.valueHtml(c,val,sheet,obj);
						}
					}
					editDone();
					if(c.type == cdb_ColumnType.TId && prevObj != null && old2 != val && (prevObj.obj == obj && (function($this) {
						var $r;
						var this6 = ((function($this) {
							var $r;
							var _this5 = _g.smap;
							var key6 = sheet.name;
							$r = __map_reserved[key6] != null?_this5.getReserved(key6):_this5.h[key6];
							return $r;
						}($this))).index;
						$r = this6.get(old2);
						return $r;
					}(this)) != null || prevTarget != null && ((function($this) {
						var $r;
						var this7 = ((function($this) {
							var $r;
							var _this6 = _g.smap;
							var key7 = sheet.name;
							$r = __map_reserved[key7] != null?_this6.getReserved(key7):_this6.h[key7];
							return $r;
						}($this))).index;
						$r = this7.get(val);
						return $r;
					}(this))).obj != prevTarget.obj)) {
						_g.refresh();
						return;
					}
				});
				{
					var _g17 = c.type;
					switch(_g17[1]) {
					case 9:
						var t7 = _g17[2];
						var t8 = (function($this) {
							var $r;
							var _this7 = $this.tmap;
							$r = __map_reserved[t7] != null?_this7.getReserved(t7):_this7.h[t7];
							return $r;
						}(this));
						i.keyup(function(_8) {
							var str = i.val();
							try {
								if(str != "") _g.parseTypeVal(t8,str);
								_g.setErrorMessage();
								i.removeClass("error");
							} catch( msg ) {
								if (msg instanceof js__$Boot_HaxeError) msg = msg.val;
								if( js_Boot.__instanceof(msg,String) ) {
									_g.setErrorMessage(msg);
									i.addClass("error");
								} else throw(msg);
							}
						});
						break;
					default:
					}
				}
				i.focus();
				i.select();
				break;
			case 5:
				var values = _g1[2];
				v.empty();
				var s = $("<select>");
				v.addClass("edit");
				var _g2 = 0;
				var _g18 = values.length;
				while(_g2 < _g18) {
					var i8 = _g2++;
					$("<option>").attr("value","" + i8).attr(val == i8?"selected":"_sel","selected").text(values[i8]).appendTo(s);
				}
				if(c.opt) $("<option>").attr("value","-1").text("--- None ---").prependTo(s);
				v.append(s);
				s.change(function(e8) {
					val = Std.parseInt(s.val());
					if(val < 0) {
						val = null;
						Reflect.deleteField(obj,c.name);
					} else obj[c.name] = val;
					html = _g.valueHtml(c,val,sheet,obj);
					_g.changed(sheet,c,index,old);
					editDone();
					e8.stopPropagation();
				});
				s.keydown(function(e9) {
					var _g19 = e9.keyCode;
					switch(_g19) {
					case 37:case 39:
						s.blur();
						return;
					case 9:
						s.blur();
						_g.moveCursor(e9.shiftKey?-1:1,0,false,false);
						haxe_Timer.delay(function() {
							$(".cursor").dblclick();
						},1);
						e9.preventDefault();
						break;
					default:
					}
					e9.stopPropagation();
				});
				s.blur(function(_9) {
					editDone();
				});
				s.focus();
				var event = window.document.createEvent("MouseEvents");
				event.initMouseEvent("mousedown",true,true,window);
				s[0].dispatchEvent(event);
				break;
			case 6:
				var sname = _g1[2];
				var sdat = (function($this) {
					var $r;
					var _this9 = $this.smap;
					$r = __map_reserved[sname] != null?_this9.getReserved(sname):_this9.h[sname];
					return $r;
				}(this));
				if(sdat == null) return;
				v.empty();
				v.addClass("edit");
				var s9 = $("<select>");
				var elts = (function($this) {
					var $r;
					var _g110 = [];
					{
						var _g210 = 0;
						var _g3 = sdat.all;
						while(_g210 < _g3.length) {
							var d = _g3[_g210];
							++_g210;
							_g110.push({ id : d.id, ico : d.ico, text : d.disp});
						}
					}
					$r = _g110;
					return $r;
				}(this));
				if(c.opt || val == null || val == "") elts.unshift({ id : "~", ico : null, text : "--- None ---"});
				v.append(s9);
				s9.change(function(e10) {
					e10.stopPropagation();
				});
				var props = { data : elts};
				if(sdat.s.props.displayIcon != null) {
					var buildElement = function(i10) {
						var text = StringTools.htmlEscape(i10.text);
						return $("<div>" + (i10.ico == null?"<div style='display:inline-block;width:16px'/>":_g.tileHtml(i10.ico,true)) + " " + text + "</div>");
					};
					props.templateResult = props.templateSelection = buildElement;
				}
				s9.select2(props);
				s9.select2("val",val == null?"":val);
				s9.select2("open");
				s9.change(function(e11) {
					val = s9.val();
					if(val == "~") {
						val = null;
						Reflect.deleteField(obj,c.name);
					} else obj[c.name] = val;
					html = _g.valueHtml(c,val,sheet,obj);
					_g.changed(sheet,c,index,old);
					editDone();
				});
				s9.on("select2:close",null,function(_11) {
					editDone();
				});
				break;
			case 2:
				if(c.opt && val == false) {
					val = null;
					Reflect.deleteField(obj,c.name);
				} else {
					val = !val;
					obj[c.name] = val;
				}
				v.html(_g.valueHtml(c,val,sheet,obj));
				_g.changed(sheet,c,index,old);
				break;
			case 7:
				var i12 = $("<input>").attr("type","file").css("display","none").change(function(e12) {
					var j = $(this);
					var file = j.val();
					var ext = file.split(".").pop().toLowerCase();
					if(ext == "jpeg") ext = "jpg";
					if(ext != "png" && ext != "gif" && ext != "jpg") {
						_g.error("Unsupported image extension " + ext);
						return;
					}
					var bytes = (function($this) {
						var $r;
						var _this12 = js_node_Fs.readFileSync(file);
						$r = haxe_io_Bytes.ofData(_this12.buffer);
						return $r;
					}(this));
					var md5 = haxe_crypto_Md5.make(bytes).toHex();
					if(_g.imageBank == null) _g.imageBank = { };
					if(!(function($this) {
						var $r;
						var o = _g.imageBank;
						$r = Object.prototype.hasOwnProperty.call(o,md5);
						return $r;
					}(this))) {
						var data = "data:image/" + ext + ";base64," + new haxe_crypto_BaseCode(haxe_io_Bytes.ofString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")).encodeBytes(bytes).toString();
						var o12 = _g.imageBank;
						o12[md5] = data;
					}
					val = md5;
					obj[c.name] = val;
					v.html(_g.valueHtml(c,val,sheet,obj));
					_g.changed(sheet,c,index,old);
					j.remove();
				});
				i12.appendTo($("body"));
				i12.click();
				break;
			case 10:
				var values12 = _g1[2];
				var div = $("<div>").addClass("flagValues");
				div.click(function(e13) {
					e13.stopPropagation();
				}).dblclick(function(e14) {
					e14.stopPropagation();
				});
				var _g214 = 0;
				var _g114 = values12.length;
				while(_g214 < _g114) {
					var i14 = [_g214++];
					var f15 = $("<input>").attr("type","checkbox").prop("checked",(val & 1 << i14[0]) != 0).change((function(i15) {
						return function(e15) {
							val &= ~(1 << i15[0]);
							if($(this).prop("checked")) val |= 1 << i15[0];
							e15.stopPropagation();
						};
					})(i14));
					$("<label>").text(values12[i14[0]]).appendTo(div).append(f15);
				}
				v.empty();
				v.append(div);
				this.cursor.onchange = function() {
					if(c.opt && val == 0) {
						val = null;
						Reflect.deleteField(obj,c.name);
					} else obj[c.name] = val;
					html = _g.valueHtml(c,val,sheet,obj);
					editDone();
					_g.save();
				};
				break;
			case 15:
				break;
			case 11:
				var id = Std.random(1);
				v.html("<div class=\"modal\" onclick=\"$('#_c" + id + "').spectrum('toggle')\"></div><input type=\"text\" id=\"_c" + id + "\"/>");
				var spect = $("#_c" + id);
				spect.spectrum({ color : "#" + StringTools.hex(val,6), showInput : true, showButtons : false, change : function() {
					spect.spectrum("hide");
				}, hide : function(vcol) {
					var color = Std.parseInt("0x" + Std.string(vcol.toHex()));
					val = color;
					obj[c.name] = color;
					v.html(_g.valueHtml(c,val,sheet,obj));
					_g.save();
				}}).spectrum("show");
				break;
			case 8:case 12:case 13:case 14:case 17:
				throw new js__$Boot_HaxeError("assert2");
				break;
			}
		}
	}
	,updateCursor: function() {
		$(".selected").removeClass("selected");
		$(".cursor").removeClass("cursor");
		if(this.cursor.s == null) return;
		if(this.cursor.y < 0) {
			this.cursor.y = 0;
			this.cursor.select = null;
		}
		if(this.cursor.y >= this.cursor.s.lines.length) {
			this.cursor.y = this.cursor.s.lines.length - 1;
			this.cursor.select = null;
		}
		var max = this.cursor.s.props.isProps?1:this.cursor.s.columns.length;
		if(this.cursor.x >= max) {
			this.cursor.x = max - 1;
			this.cursor.select = null;
		}
		var l = this.getLine(this.cursor.s,this.cursor.y);
		if(this.cursor.x < 0) {
			l.addClass("selected");
			if(this.cursor.select != null) {
				var y = this.cursor.y;
				while(this.cursor.select.y != y) {
					if(this.cursor.select.y > y) y++; else y--;
					this.getLine(this.cursor.s,y).addClass("selected");
				}
			}
		} else {
			l.find("td.c").eq(this.cursor.x).addClass("cursor");
			if(this.cursor.select != null) {
				var s = this.getSelection();
				var _g1 = s.y1;
				var _g = s.y2 + 1;
				while(_g1 < _g) {
					var y1 = _g1++;
					this.getLine(this.cursor.s,y1).find("td.c").slice(s.x1,s.x2 + 1).addClass("selected");
				}
			}
		}
		var e = l[0];
		if(e != null) e.scrollIntoViewIfNeeded();
	}
	,refresh: function() {
		var t = $("<table>");
		this.checkCursor = true;
		this.fillTable(t,this.viewSheet);
		if(this.cursor.s != this.viewSheet && this.checkCursor) this.setCursor(this.viewSheet,null,null,null,false);
		var content = $("#content");
		content.empty();
		t.appendTo(content);
		$("<div>").appendTo(content).addClass("tableBottom");
		this.updateCursor();
	}
	,chooseFile: function(callb,cancel) {
		var _g = this;
		if(this.prefs.curFile == null) {
			this.error("Please save CDB file first");
			if(cancel != null) cancel();
			return;
		}
		var fs = $("#fileSelect");
		if(fs.attr("nwworkingdir") == null) fs.attr("nwworkingdir",new haxe_io_Path(this.prefs.curFile).dir);
		fs.change(function(_) {
			fs.unbind("change");
			var path = fs.val().split("\\").join("/");
			fs.val("");
			if(path == "") {
				if(cancel != null) cancel();
				return;
			}
			fs.attr("nwworkingdir","");
			var parts = path.split("/");
			var base = _g.prefs.curFile.split("\\").join("/").split("/");
			base.pop();
			while(parts.length > 1 && base.length > 0 && parts[0] == base[0]) {
				parts.shift();
				base.shift();
			}
			if(parts.length == 0 || parts[0] != "" && parts[0].charAt(1) != ":") while(base.length > 0) {
				parts.unshift("..");
				base.pop();
			}
			var relPath = parts.join("/");
			callb(relPath);
		}).click();
	}
	,fillProps: function(content,sheet,props) {
		var _g3 = this;
		content.addClass("sheet");
		content.attr("sheet",SheetData.getPath(sheet));
		var _g = [];
		var _g1 = 0;
		var _g2 = Reflect.fields(props);
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(null);
		}
		sheet.lines = _g;
		sheet.lines[0] = props;
		var available = [];
		var index = 0;
		var _g11 = 0;
		var _g21 = sheet.columns;
		while(_g11 < _g21.length) {
			var c = [_g21[_g11]];
			++_g11;
			if(c[0].opt && !Object.prototype.hasOwnProperty.call(props,c[0].name)) {
				available.push(c[0]);
				continue;
			}
			var v = Reflect.field(props,c[0].name);
			var l = [$("<tr>").attr("colName",c[0].name).appendTo(content)];
			var th = $("<th>").text(c[0].name).appendTo(l[0]);
			var td = [$("<td>").addClass("c").addClass("t_" + HxOverrides.substr(c[0].type[0],1,null).toLowerCase()).html(this.valueHtml(c[0],v,sheet,props)).appendTo(l[0])];
			var index1 = [index++];
			l[0].click((function(index2) {
				return function(e) {
					_g3.setCursor(sheet,0,index2[0]);
					e.stopPropagation();
				};
			})(index1));
			th.mousedown((function(l2,c2) {
				return function(e2) {
					if(e2.which == 3) {
						var f2 = $bind(_g3,_g3.popupColumn);
						var a1 = sheet;
						var c3 = c2[0];
						haxe_Timer.delay((function() {
							return function() {
								f2(a1,c3);
							};
						})(),1);
						e2.preventDefault();
						l2[0].click();
						return;
					}
				};
			})(l,c));
			td[0].dblclick((function(td3,c4) {
				return function(e4) {
					_g3.editCell(c4[0],td3[0],sheet,0);
					e4.preventDefault();
					e4.stopPropagation();
				};
			})(td,c));
		}
		var end = $("<tr>").appendTo(content);
		end = $("<td>").attr("colspan","2").appendTo(end);
		var sel = $("<select>").appendTo(end);
		$("<option>").attr("value","").text("--- Choose ---").appendTo(sel);
		var _g14 = 0;
		while(_g14 < available.length) {
			var c5 = available[_g14];
			++_g14;
			$("<option>").attr("value",c5.name).text(c5.name).appendTo(sel);
		}
		$("<option>").attr("value","new").text("New property...").appendTo(sel);
		sel.change(function(e5) {
			e5.stopPropagation();
			var v5 = sel.val();
			if(v5 == "") return;
			sel.val("");
			if(v5 == "new") {
				_g3.newColumn(sheet.name);
				return;
			}
			var _g15 = 0;
			while(_g15 < available.length) {
				var c6 = available[_g15];
				++_g15;
				if(c6.name == v5) {
					props[c6.name] = _g3.getDefault(c6,true);
					_g3.save();
					_g3.refresh();
					return;
				}
			}
		});
	}
	,fillTable: function(content,sheet) {
		var _g4 = this;
		if(sheet.columns.length == 0) {
			content.html("<a href=\"javascript:_.newColumn('" + sheet.name + "')\">Add a column</a>");
			return;
		}
		var todo = [];
		var inTodo = false;
		var cols = $("<tr>").addClass("head");
		var _g = [];
		var _g11 = 0;
		var _g2 = cdb_ColumnType.__constructs__.slice();
		while(_g11 < _g2.length) {
			var t = _g2[_g11];
			++_g11;
			_g.push(HxOverrides.substr(t,1,null).toLowerCase());
		}
		var types = _g;
		$("<td>").addClass("start").appendTo(cols).click(function(_) {
			if(sheet.props.hide) content.change(); else $("tr.list table").change();
		});
		content.addClass("sheet");
		content.attr("sheet",SheetData.getPath(sheet));
		content.click(function(e) {
			e.stopPropagation();
		});
		var _g1 = [];
		var _g3 = 0;
		var _g21 = sheet.lines.length;
		while(_g3 < _g21) {
			var i = [_g3++];
			var l = $("<tr>");
			l.data("index",i[0]);
			var head = [$("<td>").addClass("start").text("" + i[0])];
			l.mousedown((function(head1,i1) {
				return function(e1) {
					if(e1.which == 3) {
						head1[0].click();
						var f = $bind(_g4,_g4.popupLine);
						var a1 = sheet;
						var a2 = i1[0];
						haxe_Timer.delay((function() {
							return function() {
								f(a1,a2);
							};
						})(),1);
						e1.preventDefault();
						return;
					}
				};
			})(head,i)).click((function(i2) {
				return function(e2) {
					if(e2.shiftKey && _g4.cursor.s == sheet && _g4.cursor.x < 0) {
						_g4.cursor.select = { x : -1, y : i2[0]};
						_g4.updateCursor();
					} else _g4.setCursor(sheet,-1,i2[0]);
				};
			})(i));
			head[0].appendTo(l);
			_g1.push(l);
		}
		var lines = _g1;
		var colCount = sheet.columns.length;
		if(sheet.props.level != null) ++colCount;
		var _g32 = 0;
		var _g22 = sheet.columns.length;
		while(_g32 < _g22) {
			var cindex = [_g32++];
			var c = [sheet.columns[cindex[0]]];
			var col = $("<td>");
			col.text(c[0].name);
			col.css("width",(100 / colCount | 0) + "%");
			if(sheet.props.displayColumn == c[0].name) col.addClass("display");
			col.mousedown((function(c2) {
				return function(e3) {
					if(e3.which == 3) {
						var f3 = $bind(_g4,_g4.popupColumn);
						var a13 = sheet;
						var c3 = c2[0];
						haxe_Timer.delay((function() {
							return function() {
								f3(a13,c3);
							};
						})(),1);
						e3.preventDefault();
						return;
					}
				};
			})(c));
			col.dblclick((function(c4) {
				return function(_4) {
					_g4.newColumn(sheet.name,c4[0]);
				};
			})(c));
			cols.append(col);
			var ctype = "t_" + types[c[0].type[1]];
			var _g5 = 0;
			var _g44 = sheet.lines.length;
			while(_g5 < _g44) {
				var index = [_g5++];
				var obj = [sheet.lines[index[0]]];
				var val = [Reflect.field(obj[0],c[0].name)];
				var v = [$("<td>").addClass(ctype).addClass("c")];
				var l4 = [lines[index[0]]];
				v[0].appendTo(l4[0]);
				var html = [this.valueHtml(c[0],val[0],sheet,obj[0])];
				if(html[0] == "&nbsp;") v[0].text(" "); else if(html[0].indexOf("<") < 0 && html[0].indexOf("&") < 0) v[0].text(html[0]); else v[0].html(html[0]);
				v[0].data("index",cindex[0]);
				v[0].click((function(index5,cindex5) {
					return function(e5) {
						if(!inTodo) {
							if(e5.shiftKey && _g4.cursor.s == sheet) {
								_g4.cursor.select = { x : cindex5[0], y : index5[0]};
								_g4.updateCursor();
								e5.stopImmediatePropagation();
							} else _g4.setCursor(sheet,cindex5[0],index5[0]);
						}
						e5.stopPropagation();
					};
				})(index,cindex));
				var set = [(function(html4,v4,val4,obj4,index4,c5) {
					return function(val2) {
						var old = val4[0];
						val4[0] = val2;
						if(val4[0] == null) Reflect.deleteField(obj4[0],c5[0].name); else obj4[0][c5[0].name] = val4[0];
						html4[0] = _g4.valueHtml(c5[0],val4[0],sheet,obj4[0]);
						v4[0].html(html4[0]);
						_g4.changed(sheet,c5[0],index4[0],old);
					};
				})(html,v,val,obj,index,c)];
				var _g6 = c[0].type;
				switch(_g6[1]) {
				case 7:
					v[0].find("img").addClass("deletable").change((function(obj5,c6) {
						return function(e6) {
							if(Reflect.field(obj5[0],c6[0].name) != null) {
								Reflect.deleteField(obj5[0],c6[0].name);
								_g4.refresh();
								_g4.save();
							}
						};
					})(obj,c)).click((function() {
						return function(e7) {
							$(this).addClass("selected");
							e7.stopPropagation();
						};
					})());
					v[0].dblclick((function(v7,index7,c7) {
						return function(_7) {
							_g4.editCell(c7[0],v7[0],sheet,index7[0]);
						};
					})(v,index,c));
					break;
				case 8:
					var key = [SheetData.getPath(sheet) + "@" + c[0].name + ":" + index[0]];
					v[0].click((function(key7,html7,l7,v8,val8,obj8,index8,c8,cindex8) {
						return function(e8) {
							var next = l7[0].next("tr.list");
							if(next.length > 0) {
								if(next.data("name") == c8[0].name) {
									next.change();
									return;
								}
								next.change();
							}
							next = $("<tr>").addClass("list").data("name",c8[0].name);
							$("<td>").appendTo(next);
							var cell = $("<td>").attr("colspan","" + colCount).appendTo(next);
							var div = $("<div>").appendTo(cell);
							if(!inTodo) div.hide();
							var content8 = $("<table>").appendTo(div);
							var tmp8;
							var _this8 = SheetData.model.smap;
							var key8 = sheet.name + "@" + c8[0].name;
							if(__map_reserved[key8] != null) tmp8 = _this8.getReserved(key8); else tmp8 = _this8.h[key8];
							var psheet = tmp8.s;
							if(val8[0] == null) {
								val8[0] = [];
								obj8[0][c8[0].name] = val8[0];
							}
							psheet = { columns : psheet.columns, props : psheet.props, name : psheet.name, path : key7[0], parent : { sheet : sheet, column : cindex8[0], line : index8[0]}, lines : val8[0], separators : []};
							_g4.fillTable(content8,psheet);
							next.insertAfter(l7[0]);
							v8[0].text("...");
							var _this9 = _g4.openedList;
							if(__map_reserved[key7[0]] != null) _this9.setReserved(key7[0],true); else _this9.h[key7[0]] = true;
							next.change((function(key9,html9,v9,val9,obj9,c9) {
								return function(e9) {
									if(c9[0].opt && val9[0].length == 0) {
										val9[0] = null;
										Reflect.deleteField(obj9[0],c9[0].name);
									}
									html9[0] = _g4.valueHtml(c9[0],val9[0],sheet,obj9[0]);
									v9[0].html(html9[0]);
									div.slideUp(100,(function() {
										return function() {
											next.remove();
										};
									})());
									_g4.openedList.remove(key9[0]);
									e9.stopPropagation();
								};
							})(key7,html7,v8,val8,obj8,c8));
							if(inTodo) {
								if(_g4.cursor.s != null && SheetData.getPath(_g4.cursor.s) == SheetData.getPath(psheet)) {
									_g4.cursor.s = psheet;
									_g4.checkCursor = false;
								}
							} else {
								div.slideDown(100);
								_g4.setCursor(psheet);
							}
							e8.stopPropagation();
						};
					})(key,html,l4,v,val,obj,index,c,cindex));
					var tmp;
					var _this = this.openedList;
					if(__map_reserved[key[0]] != null) tmp = _this.getReserved(key[0]); else tmp = _this.h[key[0]];
					if(tmp) todo.push((function(v10) {
						return function() {
							v10[0].click();
						};
					})(v));
					break;
				case 17:
					var key10 = [SheetData.getPath(sheet) + "@" + c[0].name + ":" + index[0]];
					v[0].click((function(key11,html11,l11,v11,val11,obj11,index11,c11,cindex11) {
						return function(e11) {
							var next11 = l11[0].next("tr.list");
							if(next11.length > 0) {
								if(next11.data("name") == c11[0].name) {
									next11.change();
									return;
								}
								next11.change();
							}
							next11 = $("<tr>").addClass("list").data("name",c11[0].name);
							$("<td>").appendTo(next11);
							var cell11 = $("<td>").attr("colspan","" + colCount).appendTo(next11);
							var div11 = $("<div>").appendTo(cell11);
							if(!inTodo) div11.hide();
							var content11 = $("<table>").addClass("props").appendTo(div11);
							var tmp11;
							var _this11 = SheetData.model.smap;
							var key12 = sheet.name + "@" + c11[0].name;
							if(__map_reserved[key12] != null) tmp11 = _this11.getReserved(key12); else tmp11 = _this11.h[key12];
							var psheet12 = tmp11.s;
							if(val11[0] == null) {
								val11[0] = { };
								obj11[0][c11[0].name] = val11[0];
							}
							psheet12 = { columns : psheet12.columns, props : psheet12.props, name : psheet12.name, path : key11[0], parent : { sheet : sheet, column : cindex11[0], line : index11[0]}, lines : [val11[0]], separators : []};
							_g4.fillProps(content11,psheet12,val11[0]);
							next11.insertAfter(l11[0]);
							v11[0].text("...");
							var _this12 = _g4.openedList;
							if(__map_reserved[key11[0]] != null) _this12.setReserved(key11[0],true); else _this12.h[key11[0]] = true;
							next11.change((function(key13,html13,v13,val13,obj13,c13) {
								return function(e13) {
									if(c13[0].opt && Reflect.fields(val13[0]).length == 0) {
										val13[0] = null;
										Reflect.deleteField(obj13[0],c13[0].name);
									}
									html13[0] = _g4.valueHtml(c13[0],val13[0],sheet,obj13[0]);
									v13[0].html(html13[0]);
									div11.slideUp(100,(function() {
										return function() {
											next11.remove();
										};
									})());
									_g4.openedList.remove(key13[0]);
									e13.stopPropagation();
								};
							})(key11,html11,v11,val11,obj11,c11));
							if(inTodo) {
								if(_g4.cursor.s != null && SheetData.getPath(_g4.cursor.s) == SheetData.getPath(psheet12)) {
									_g4.cursor.s = psheet12;
									_g4.checkCursor = false;
								}
							} else {
								div11.slideDown(100);
								_g4.setCursor(psheet12);
							}
							e11.stopPropagation();
						};
					})(key10,html,l4,v,val,obj,index,c,cindex));
					var tmp10;
					var _this10 = this.openedList;
					if(__map_reserved[key10[0]] != null) tmp10 = _this10.getReserved(key10[0]); else tmp10 = _this10.h[key10[0]];
					if(tmp10) todo.push((function(v14) {
						return function() {
							v14[0].click();
						};
					})(v));
					break;
				case 12:
					break;
				case 13:
					v[0].find("input").addClass("deletable").change((function(obj14,c14) {
						return function(e14) {
							if(Reflect.field(obj14[0],c14[0].name) != null) {
								Reflect.deleteField(obj14[0],c14[0].name);
								_g4.refresh();
								_g4.save();
							}
						};
					})(obj,c));
					v[0].dblclick((function(set14) {
						return function(_14) {
							_g4.chooseFile((function(set15) {
								return function(path) {
									set15[0](path);
									_g4.save();
								};
							})(set14));
						};
					})(set));
					break;
				case 14:
					v[0].find("div").addClass("deletable").change((function(obj15,c15) {
						return function(e15) {
							if(Reflect.field(obj15[0],c15[0].name) != null) {
								Reflect.deleteField(obj15[0],c15[0].name);
								_g4.refresh();
								_g4.save();
							}
						};
					})(obj,c));
					v[0].dblclick((function(set16,v16,val16,index16,c16) {
						return function(_16) {
							var rv = val16[0];
							var file = rv == null?null:rv.file;
							var size = rv == null?16:rv.size;
							var posX = rv == null?0:rv.x;
							var posY = rv == null?0:rv.y;
							var width = rv == null?null:rv.width;
							var height = rv == null?null:rv.height;
							if(width == null) width = 1;
							if(height == null) height = 1;
							if(file == null) {
								var i18 = index16[0] - 1;
								while(i18 >= 0) {
									var o = sheet.lines[i18--];
									var v2 = Reflect.field(o,c16[0].name);
									if(v2 != null) {
										file = v2.file;
										size = v2.size;
										break;
									}
								}
							}
							var setVal = (function(set17) {
								return function() {
									var v17 = { file : file, size : size, x : posX, y : posY};
									if(width != 1) v17.width = width;
									if(height != 1) v17.height = height;
									set17[0](v17);
								};
							})(set16);
							if(file == null) {
								_g4.chooseFile((function(v18) {
									return function(path18) {
										file = path18;
										setVal();
										v18[0].dblclick();
									};
								})(v16));
								return;
							}
							var dialog = $($(".tileSelect").parent().html()).prependTo($("body"));
							var maxWidth = 1000000;
							var maxHeight = 1000000;
							dialog.find(".tileView").css({ backgroundImage : "url(\"" + _g4.getAbsPath(file) + "\")"}).mousemove((function() {
								return function(e18) {
									var off = $(this).offset();
									posX = (e18.pageX - off.left) / size | 0;
									posY = (e18.pageY - off.top) / size | 0;
									if((posX + width) * size > maxWidth) posX = (maxWidth / size | 0) - width;
									if((posY + height) * size > maxHeight) posY = (maxHeight / size | 0) - height;
									if(posX < 0) posX = 0;
									if(posY < 0) posY = 0;
									$(".tileCursor").not(".current").css({ marginLeft : size * posX - 1 + "px", marginTop : size * posY - 1 + "px"});
								};
							})()).click((function() {
								return function(_18) {
									setVal();
									dialog.remove();
									_g4.save();
								};
							})());
							dialog.find("[name=size]").val("" + size).change((function() {
								return function(_19) {
									size = Std.parseInt($(this).val());
									$(".tileCursor").css({ width : size * width + "px", height : size * height + "px"});
									$(".tileCursor.current").css({ marginLeft : size * posX - 2 + "px", marginTop : size * posY - 2 + "px"});
								};
							})()).change();
							dialog.find("[name=width]").val("" + width).change((function() {
								return function(_20) {
									width = Std.parseInt($(this).val());
									$(".tileCursor").css({ width : size * width + "px", height : size * height + "px"});
								};
							})()).change();
							dialog.find("[name=height]").val("" + height).change((function() {
								return function(_21) {
									height = Std.parseInt($(this).val());
									$(".tileCursor").css({ width : size * width + "px", height : size * height + "px"});
								};
							})()).change();
							dialog.find("[name=cancel]").click((function() {
								return function(_22) {
									dialog.remove();
								};
							})());
							dialog.find("[name=file]").click((function(v22) {
								return function(_23) {
									_g4.chooseFile((function(v23) {
										return function(f23) {
											file = f23;
											dialog.remove();
											setVal();
											_g4.save();
											v23[0].dblclick();
										};
									})(v22));
								};
							})(v16));
							dialog.keydown((function() {
								return function(e23) {
									e23.stopPropagation();
								};
							})()).keypress((function() {
								return function(e24) {
									e24.stopPropagation();
								};
							})());
							dialog.show();
							var i17 = window.document.createElement("img");
							i17.onload = (function() {
								return function(_24) {
									maxWidth = i17.width;
									maxHeight = i17.height;
									dialog.find(".tileView").height(i17.height).width(i17.width);
									dialog.find(".tilePath").text(file + " (" + i17.width + "x" + i17.height + ")");
								};
							})();
							i17.src = _g4.getAbsPath(file);
						};
					})(set,v,val,index,c));
					break;
				default:
					v[0].dblclick((function(v24,index24,c24) {
						return function(e25) {
							_g4.editCell(c24[0],v24[0],sheet,index24[0]);
						};
					})(v,index,c));
				}
			}
		}
		if(sheet.lines.length == 0) {
			var l25 = $("<tr><td colspan=\"" + (sheet.columns.length + 1) + "\"><a href=\"javascript:_.insertLine()\">Insert Line</a></td></tr>");
			l25.find("a").click(function(_25) {
				_g4.setCursor(sheet);
			});
			lines.push(l25);
		}
		if(sheet.props.level != null) {
			var col25 = $("<td style='width:35px'>");
			cols.prepend(col25);
			var _g325 = 0;
			var _g225 = sheet.lines.length;
			while(_g325 < _g225) {
				var index25 = [_g325++];
				var l26 = [lines[index25[0]]];
				var c26 = $("<input type='submit' value='Edit'>");
				$("<td>").append(c26).prependTo(l26[0]);
				c26.click((function(l27,index27) {
					return function(_27) {
						l27[0].click();
						var found = null;
						var _g527 = 0;
						var _g627 = _g4.levels;
						while(_g527 < _g627.length) {
							var l28 = _g627[_g527];
							++_g527;
							if(l28.sheet == sheet && l28.index == index27[0]) found = l28;
						}
						if(found == null) {
							found = new Level(_g4,sheet,index27[0]);
							_g4.levels.push(found);
							_g4.selectLevel(found);
							_g4.initContent();
						} else _g4.selectLevel(found);
					};
				})(l26,index25));
			}
		}
		content.empty();
		content.append(cols);
		var snext = 0;
		var _g328 = 0;
		var _g228 = lines.length;
		while(_g328 < _g228) {
			var i28 = _g328++;
			while(sheet.separators[snext] == i28) {
				var sep = $("<tr>").addClass("separator").append("<td colspan=\"" + (colCount + 1) + "\">").appendTo(content);
				var content28 = [sep.find("td")];
				var title = [sheet.props.separatorTitles != null?sheet.props.separatorTitles[snext]:null];
				if(title[0] != null) content28[0].text(title[0]);
				var pos = [snext];
				sep.dblclick((function(pos28,title28,content29) {
					return function(e29) {
						content29[0].empty();
						$("<input>").appendTo(content29[0]).focus().val(title28[0] == null?"":title28[0]).blur((function(pos29,title29,content30) {
							return function(_30) {
								title29[0] = $(this).val();
								$(this).remove();
								content30[0].text(title29[0]);
								var titles = sheet.props.separatorTitles;
								if(titles == null) titles = [];
								while(titles.length < pos29[0]) titles.push(null);
								titles[pos29[0]] = title29[0] == ""?null:title29[0];
								while(titles[titles.length - 1] == null && titles.length > 0) titles.pop();
								if(titles.length == 0) titles = null;
								sheet.props.separatorTitles = titles;
								_g4.save();
							};
						})(pos28,title28,content29)).keypress((function() {
							return function(e30) {
								e30.stopPropagation();
							};
						})()).keydown((function(title30,content31) {
							return function(e31) {
								if(e31.keyCode == 13) {
									$(this).blur();
									e31.preventDefault();
								} else if(e31.keyCode == 27) content31[0].text(title30[0]);
								e31.stopPropagation();
							};
						})(title28,content29));
					};
				})(pos,title,content28));
				++snext;
			}
			content.append(lines[i28]);
		}
		inTodo = true;
		var _g231 = 0;
		while(_g231 < todo.length) {
			var t31 = todo[_g231];
			++_g231;
			t31();
		}
		inTodo = false;
	}
	,openFile: function(file) {
		js_node_webkit_Shell.openItem(file);
	}
	,setCursor: function(s,x,y,sel,update) {
		if(update == null) update = true;
		if(y == null) y = 0;
		if(x == null) x = 0;
		this.cursor.s = s;
		this.cursor.x = x;
		this.cursor.y = y;
		this.cursor.select = sel;
		var ch = this.cursor.onchange;
		if(ch != null) {
			this.cursor.onchange = null;
			ch();
		}
		if(update) this.updateCursor();
	}
	,selectSheet: function(s,manual) {
		if(manual == null) manual = true;
		this.viewSheet = s;
		this.pages.curPage = -1;
		var tmp;
		var _this = this.sheetCursors;
		var key = s.name;
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		this.cursor = tmp;
		if(this.cursor == null) {
			this.cursor = { x : 0, y : 0, s : s};
			var _this1 = this.sheetCursors;
			var key1 = s.name;
			var value = this.cursor;
			if(__map_reserved[key1] != null) _this1.setReserved(key1,value); else _this1.h[key1] = value;
		}
		if(manual) {
			if(this.level != null) this.level.dispose();
			this.level = null;
		}
		this.prefs.curSheet = Lambda.indexOf(this.data.sheets,s);
		$("#sheets li").removeClass("active").filter("#sheet_" + this.prefs.curSheet).addClass("active");
		if(manual) this.refresh();
	}
	,selectLevel: function(l) {
		if(this.level != null) this.level.dispose();
		this.pages.curPage = -1;
		this.level = l;
		this.level.init();
		$("#sheets li").removeClass("active").filter("#level_" + l.sheetPath.split(".").join("_") + "_" + l.index).addClass("active");
	}
	,closeLevel: function(l) {
		l.dispose();
		var i = Lambda.indexOf(this.levels,l);
		HxOverrides.remove(this.levels,l);
		if(this.level == l) this.level = null;
		this.initContent();
	}
	,newSheet: function() {
		var s = $("#newsheet").show();
		s.find("#sheet_name").val("");
		s.find("#sheet_level").removeAttr("checked");
	}
	,deleteColumn: function(sheet,cname) {
		if(cname == null) {
			var tmp;
			var _this = this.smap;
			var key = this.colProps.sheet;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			sheet = tmp.s;
			cname = this.colProps.ref.name;
		}
		if(!SheetData.deleteColumn(sheet,cname)) return;
		$("#newcol").hide();
		this.refresh();
		this.save();
	}
	,editTypes: function() {
		var _g = this;
		if(this.typesStr == null) {
			var tl = [];
			var _g1 = 0;
			var _g11 = this.data.customTypes;
			while(_g1 < _g11.length) {
				var t = _g11[_g1];
				++_g1;
				tl.push("enum " + t.name + " {\n" + this.typeCasesToString(t,"\t") + "\n}");
			}
			this.typesStr = tl.join("\n\n");
		}
		var content = $("#content");
		content.html($("#editTypes").html());
		var text = content.find("textarea");
		var apply = content.find("input.button").first();
		var cancel = content.find("input.button").eq(1);
		var types;
		text.change(function(_) {
			var nstr = text.val();
			if(nstr == _g.typesStr) return;
			_g.typesStr = nstr;
			var errors = [];
			var t1 = StringTools.trim(_g.typesStr);
			var r = new EReg("^enum[ \r\n\t]+([A-Za-z0-9_]+)[ \r\n\t]*\\{([^}]*)\\}","");
			var oldTMap = _g.tmap;
			var descs = [];
			_g.tmap = new haxe_ds_StringMap();
			types = [];
			while(r.match(t1)) {
				var name = r.matched(1);
				var desc = r.matched(2);
				var tmp;
				var _this = _g.tmap;
				if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
				if(tmp != null) errors.push("Duplicate type " + name);
				var td = { name : name, cases : []};
				var _this1 = _g.tmap;
				if(__map_reserved[name] != null) _this1.setReserved(name,td); else _this1.h[name] = td;
				descs.push(desc);
				types.push(td);
				t1 = StringTools.trim(r.matchedRight());
			}
			var _g12 = 0;
			while(_g12 < types.length) {
				var t2 = types[_g12];
				++_g12;
				try {
					t2.cases = _g.parseTypeCases(descs.shift());
				} catch( msg ) {
					if (msg instanceof js__$Boot_HaxeError) msg = msg.val;
					errors.push(msg);
				}
			}
			_g.tmap = oldTMap;
			if(t1 != "") errors.push("Invalid " + StringTools.htmlEscape(t1));
			_g.setErrorMessage(errors.length == 0?null:errors.join("<br>"));
			if(errors.length == 0) apply.removeAttr("disabled"); else apply.attr("disabled","");
		});
		text.keydown(function(e) {
			if(e.keyCode == 9) {
				e.preventDefault();
				new js_Selection(text[0]).insert("\t","","");
			}
			e.stopPropagation();
		});
		text.keyup(function(e2) {
			text.change();
			e2.stopPropagation();
		});
		text.val(this.typesStr);
		cancel.click(function(_2) {
			_g.typesStr = null;
			_g.setErrorMessage();
			_g.quickLoad(_g.curSavedData);
			_g.initContent();
		});
		apply.click(function(_3) {
			var tpairs = _g.makePairs(_g.data.customTypes,types);
			var _g13 = 0;
			while(_g13 < tpairs.length) {
				var p = tpairs[_g13];
				++_g13;
				if(p.b == null) {
					var t3 = p.a;
					var _g2 = 0;
					var _g3 = _g.data.sheets;
					while(_g2 < _g3.length) {
						var s = _g3[_g2];
						++_g2;
						var _g4 = 0;
						var _g5 = s.columns;
						while(_g4 < _g5.length) {
							var c = _g5[_g4];
							++_g4;
							var _g6 = c.type;
							switch(_g6[1]) {
							case 9:
								var name3 = _g6[2];
								if(name3 == t3.name) {
									_g.error("Type " + name3 + " used by " + s.name + "@" + c.name + " cannot be removed");
									return;
								}
								break;
							default:
							}
						}
					}
				}
			}
			var _g14 = 0;
			while(_g14 < types.length) {
				var t4 = [types[_g14]];
				++_g14;
				if(!Lambda.exists(tpairs,(function(t5) {
					return function(p5) {
						return p5.b == t5[0];
					};
				})(t4))) _g.data.customTypes.push(t4[0]);
			}
			var _g15 = 0;
			while(_g15 < tpairs.length) {
				var p6 = tpairs[_g15];
				++_g15;
				if(p6.b == null) HxOverrides.remove(_g.data.customTypes,p6.a); else try {
					_g.updateType(p6.a,p6.b);
				} catch( msg6 ) {
					if (msg6 instanceof js__$Boot_HaxeError) msg6 = msg6.val;
					if( js_Boot.__instanceof(msg6,String) ) {
						_g.error("Error while updating " + p6.b.name + " : " + msg6);
						return;
					} else throw(msg6);
				}
			}
			_g.initContent();
			_g.typesStr = null;
			_g.save();
		});
		this.typesStr = null;
		text.change();
	}
	,newColumn: function(sheetName,ref,index) {
		var form = $("#newcol form");
		this.colProps = { sheet : sheetName, ref : ref, index : index};
		var sheets = $("[name=sheet]");
		sheets.empty();
		var _g1 = 0;
		var _g = this.data.sheets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s = this.data.sheets[i];
			if(s.props.hide) continue;
			$("<option>").attr("value","" + i).text(s.name).appendTo(sheets);
		}
		var types = $("[name=ctype]");
		types.empty();
		types.unbind("change");
		types.change(function(_) {
			$("#col_options").toggleClass("t_edit",types.val() != "");
		});
		$("<option>").attr("value","").text("--- Select ---").appendTo(types);
		var _g2 = 0;
		var _g12 = this.data.customTypes;
		while(_g2 < _g12.length) {
			var t = _g12[_g2];
			++_g2;
			$("<option>").attr("value","" + t.name).text(t.name).appendTo(types);
		}
		form.removeClass("edit").removeClass("create");
		if(ref != null) {
			form.addClass("edit");
			form.find("[name=name]").val(ref.name);
			form.find("[name=type]").val(HxOverrides.substr(ref.type[0],1,null).toLowerCase()).change();
			form.find("[name=req]").prop("checked",!ref.opt);
			var tmp = ref.display == null?"0":Std.string(ref.display);
			form.find("[name=display]").val(tmp);
			form.find("[name=localizable]").prop("checked",ref.kind == "localizable");
			var _g3 = ref.type;
			switch(_g3[1]) {
			case 5:
				var values = _g3[2];
				form.find("[name=values]").val(values.join(","));
				break;
			case 10:
				var values3 = _g3[2];
				form.find("[name=values]").val(values3.join(","));
				break;
			case 6:
				var sname = _g3[2];
				form.find("[name=sheet]").val("" + Lambda.indexOf(this.data.sheets,Lambda.find(this.data.sheets,function(s3) {
					return s3.name == sname;
				})));
				break;
			case 12:
				var sname3 = _g3[2];
				form.find("[name=sheet]").val("" + Lambda.indexOf(this.data.sheets,Lambda.find(this.data.sheets,function(s3) {
					return s3.name == sname3;
				})));
				break;
			case 9:
				var name = _g3[2];
				form.find("[name=ctype]").val(name);
				break;
			default:
			}
		} else {
			form.addClass("create");
			form.find("input").not("[type=submit]").val("");
			form.find("[name=req]").prop("checked",true);
			form.find("[name=localizable]").prop("checked",false);
		}
		types.change();
		$("#newcol").show();
	}
	,newLine: function(sheet,index) {
		SheetData.newLine(sheet,index);
		this.refresh();
		this.save();
	}
	,insertLine: function() {
		if(this.cursor.s != null) this.newLine(this.cursor.s);
	}
	,createSheet: function(name,level) {
		name = StringTools.trim(name);
		if(!this.r_ident.match(name)) {
			this.error("Invalid sheet name");
			return;
		}
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s1 = _g1[_g];
			++_g;
			if(s1.name == name) {
				this.error("Sheet name already in use");
				return;
			}
		}
		$("#newsheet").hide();
		var s = { name : name, columns : [], lines : [], separators : [], props : { }};
		this.prefs.curSheet = this.data.sheets.length;
		this.data.sheets.push(s);
		this.makeSheet(s);
		if(level) this.initLevel(s);
		this.initContent();
		this.save();
	}
	,initLevel: function(s) {
		var cols = [{ n : "id", t : cdb_ColumnType.TId},{ n : "width", t : cdb_ColumnType.TInt},{ n : "height", t : cdb_ColumnType.TInt},{ n : "props", t : cdb_ColumnType.TDynamic},{ n : "tileProps", t : cdb_ColumnType.TList},{ n : "layers", t : cdb_ColumnType.TList}];
		var _g = 0;
		while(_g < cols.length) {
			var c = cols[_g];
			++_g;
			if(SheetData.hasColumn(s,c.n)) {
				if(!SheetData.hasColumn(s,c.n,[c.t])) {
					this.error("Column " + c.n + " already exists but does not have type " + Std.string(c.t));
					return;
				}
			} else {
				var col = { name : c.n, type : c.t, typeStr : null};
				SheetData.addColumn(s,col);
				if(c.n == "layers") {
					var tmp;
					var _this = SheetData.model.smap;
					var key = s.name + "@" + col.name;
					if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
					var s1 = tmp.s;
					SheetData.addColumn(s1,{ name : "name", type : cdb_ColumnType.TString, typeStr : null});
					SheetData.addColumn(s1,{ name : "data", type : cdb_ColumnType.TTileLayer, typeStr : null});
				}
			}
		}
		if(s.props.level == null) s.props.level = { tileSets : { }};
		if(s.lines.length == 0 && s.parent == null) {
			var o = SheetData.newLine(s);
			o.width = 128;
			o.height = 128;
		}
	}
	,createColumn: function() {
		var v = { };
		var cols = $("#col_form input, #col_form select").not("[type=submit]");
		var _g_i = 0;
		var _g_j = cols;
		while(_g_i < _g_j.length) {
			var i = $(_g_j[_g_i++]);
			v[i.attr("name")] = i.attr("type") == "checkbox"?i["is"](":checked")?"on":null:i.val();
		}
		var sheet;
		if(this.colProps.sheet == null) sheet = this.viewSheet; else {
			var tmp;
			var _this = this.smap;
			var key = this.colProps.sheet;
			if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
			sheet = tmp.s;
		}
		var refColumn = this.colProps.ref;
		var t;
		var _g = v.type;
		switch(_g) {
		case "id":
			t = cdb_ColumnType.TId;
			break;
		case "int":
			t = cdb_ColumnType.TInt;
			break;
		case "float":
			t = cdb_ColumnType.TFloat;
			break;
		case "string":
			t = cdb_ColumnType.TString;
			break;
		case "bool":
			t = cdb_ColumnType.TBool;
			break;
		case "enum":
			var vals = StringTools.trim(v.values).split(",");
			if(vals.length == 0) {
				this.error("Missing value list");
				return;
			}
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < vals.length) {
				var f = vals[_g2];
				++_g2;
				_g1.push(StringTools.trim(f));
			}
			t = cdb_ColumnType.TEnum(_g1);
			break;
		case "flags":
			var vals1 = StringTools.trim(v.values).split(",");
			if(vals1.length == 0) {
				this.error("Missing value list");
				return;
			}
			var _g11 = [];
			var _g21 = 0;
			while(_g21 < vals1.length) {
				var f1 = vals1[_g21];
				++_g21;
				_g11.push(StringTools.trim(f1));
			}
			t = cdb_ColumnType.TFlags(_g11);
			break;
		case "ref":
			var s = this.data.sheets[Std.parseInt(v.sheet)];
			if(s == null) {
				this.error("Sheet not found");
				return;
			}
			t = cdb_ColumnType.TRef(s.name);
			break;
		case "image":
			t = cdb_ColumnType.TImage;
			break;
		case "list":
			t = cdb_ColumnType.TList;
			break;
		case "custom":
			var tmp1;
			var _this1 = this.tmap;
			var key1 = v.ctype;
			if(__map_reserved[key1] != null) tmp1 = _this1.getReserved(key1); else tmp1 = _this1.h[key1];
			var t1 = tmp1;
			if(t1 == null) {
				this.error("Type not found");
				return;
			}
			t = cdb_ColumnType.TCustom(t1.name);
			break;
		case "color":
			t = cdb_ColumnType.TColor;
			break;
		case "layer":
			var s1 = this.data.sheets[Std.parseInt(v.sheet)];
			if(s1 == null) {
				this.error("Sheet not found");
				return;
			}
			t = cdb_ColumnType.TLayer(s1.name);
			break;
		case "file":
			t = cdb_ColumnType.TFile;
			break;
		case "tilepos":
			t = cdb_ColumnType.TTilePos;
			break;
		case "tilelayer":
			t = cdb_ColumnType.TTileLayer;
			break;
		case "dynamic":
			t = cdb_ColumnType.TDynamic;
			break;
		case "properties":
			t = cdb_ColumnType.TProperties;
			break;
		default:
			return;
		}
		var c = { type : t, typeStr : null, name : v.name};
		if(v.req != "on") c.opt = true;
		if(v.display != "0") c.display = Std.parseInt(v.display);
		if(v.localizable == "on") c.kind = "localizable";
		if(refColumn != null) {
			var err = Model.prototype.updateColumn.call(this,sheet,refColumn,c);
			if(err != null) {
				this.refresh();
				this.save();
				this.error(err);
				return;
			}
		} else {
			var err1 = SheetData.addColumn(sheet,c,this.colProps.index);
			if(err1 != null) {
				this.error(err1);
				return;
			}
			if(sheet.props.isProps && this.cursor.s.columns == sheet.columns) {
				var obj = this.cursor.s.lines[0];
				if(obj != null) obj[c.name] = this.getDefault(c,true);
			}
		}
		$("#newcol").hide();
		var _g_i1 = 0;
		var _g_j1 = cols;
		while(_g_i1 < _g_j1.length) {
			var c1 = $(_g_j1[_g_i1++]);
			c1.val("");
		}
		this.refresh();
		this.save();
	}
	,initContent: function() {
		var _g2 = this;
		Model.prototype.initContent.call(this);
		$("body").spectrum.clearAll();
		var sheets = $("ul#sheets");
		sheets.children().remove();
		var _g1 = 0;
		var _g = this.data.sheets.length;
		while(_g1 < _g) {
			var i = _g1++;
			var s1 = [this.data.sheets[i]];
			if(s1[0].props.hide) continue;
			var li = [$("<li>")];
			li[0].text(s1[0].name).attr("id","sheet_" + i).appendTo(sheets).click((function(s2) {
				return function(_) {
					_g2.selectSheet(s2[0]);
				};
			})(s1)).dblclick((function(li2,s3) {
				return function(_3) {
					li2[0].empty();
					$("<input>").val(s3[0].name).appendTo(li2[0]).focus().blur((function(li3,s4) {
						return function(_4) {
							li3[0].text(s4[0].name);
							var name = $(this).val();
							if(!_g2.r_ident.match(name)) {
								_g2.error("Invalid sheet name");
								return;
							}
							var f = (function($this) {
								var $r;
								var _this = _g2.smap;
								$r = __map_reserved[name] != null?_this.getReserved(name):_this.h[name];
								return $r;
							}(this));
							if(f != null) {
								if(f.s != s4[0]) _g2.error("Sheet name already in use");
								return;
							}
							var old4 = s4[0].name;
							s4[0].name = name;
							_g2.mapType((function() {
								return function(t) {
									return (function($this) {
										var $r;
										switch(t[1]) {
										case 6:
											$r = (function($this) {
												var $r;
												var o = t[2];
												$r = o == old4?cdb_ColumnType.TRef(name):t;
												return $r;
											}($this));
											break;
										case 12:
											$r = (function($this) {
												var $r;
												var o4 = t[2];
												$r = o4 == old4?cdb_ColumnType.TLayer(name):t;
												return $r;
											}($this));
											break;
										default:
											$r = t;
										}
										return $r;
									}(this));
								};
							})());
							var _g3 = 0;
							var _g4 = _g2.data.sheets;
							while(_g3 < _g4.length) {
								var s5 = _g4[_g3];
								++_g3;
								if(StringTools.startsWith(s5.name,old4 + "@")) s5.name = name + "@" + (function($this) {
									var $r;
									var pos = old4.length + 1;
									$r = HxOverrides.substr(s5.name,pos,null);
									return $r;
								}(this));
							}
							_g2.initContent();
							_g2.save();
						};
					})(li2,s3)).keydown((function() {
						return function(e) {
							if(e.keyCode == 13) $(this).blur(); else if(e.keyCode == 27) _g2.initContent();
							e.stopPropagation();
						};
					})()).keypress((function() {
						return function(e5) {
							e5.stopPropagation();
						};
					})());
				};
			})(li,s1)).mousedown((function(li5,s6) {
				return function(e6) {
					if(e6.which == 3) {
						haxe_Timer.delay((function($this) {
							var $r;
							var f6 = $bind(_g2,_g2.popupSheet);
							var s7 = s6[0];
							var li7 = li5[0];
							$r = (function() {
								return function() {
									f6(s7,li7);
								};
							})();
							return $r;
						}(this)),1);
						e6.stopPropagation();
					}
				};
			})(li,s1));
		}
		this.pages.updateTabs();
		var s = this.data.sheets[this.prefs.curSheet];
		if(s == null) s = this.data.sheets[0];
		if(s != null) this.selectSheet(s,false);
		var old = this.levels;
		var lcur = null;
		this.levels = [];
		var _g7 = 0;
		while(_g7 < old.length) {
			var level = old[_g7];
			++_g7;
			if(!(function($this) {
				var $r;
				var _this8 = $this.smap;
				var key8 = level.sheetPath;
				$r = __map_reserved[key8] != null?_this8.existsReserved(key8):_this8.h.hasOwnProperty(key8);
				return $r;
			}(this))) continue;
			var s8 = ((function($this) {
				var $r;
				var _this7 = $this.smap;
				var key = level.sheetPath;
				$r = __map_reserved[key] != null?_this7.getReserved(key):_this7.h[key];
				return $r;
			}(this))).s;
			if(s8.lines.length < level.index) continue;
			var l = [new Level(this,s8,level.index)];
			if(level == this.level) lcur = l[0];
			this.levels.push(l[0]);
			var li8 = $("<li>");
			var name8 = level.getName();
			if(name8 == "") name8 = "???";
			li8.text(name8).attr("id","level_" + l[0].sheetPath.split(".").join("_") + "_" + l[0].index).appendTo(sheets).click((function(l8) {
				return function(_8) {
					_g2.selectLevel(l8[0]);
				};
			})(l));
		}
		if(this.pages.curPage >= 0) this.pages.select(); else if(lcur != null) this.selectLevel(lcur); else if(this.data.sheets.length == 0) $("#content").html("<a href='javascript:_.newSheet()'>Create a sheet</a>"); else this.refresh();
	}
	,cleanLayers: function() {
		var count = 0;
		var _g = 0;
		var _g1 = this.data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.props.level == null) continue;
			var ts = s.props.level.tileSets;
			var usedLayers = new haxe_ds_StringMap();
			var _g2 = 0;
			var _g3 = s.columns;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				var _g4 = c.type;
				switch(_g4[1]) {
				case 8:
					var tmp;
					var _this = SheetData.model.smap;
					var key = s.name + "@" + c.name;
					if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
					var sub = tmp.s;
					if(!SheetData.hasColumn(sub,"data",[cdb_ColumnType.TTileLayer])) continue;
					var _g5 = 0;
					var _g6 = SheetData.getLines(sub);
					while(_g5 < _g6.length) {
						var obj = _g6[_g5];
						++_g5;
						var v = obj.data;
						if(v == null || v.file == null) continue;
						var key1 = v.file;
						if(__map_reserved[key1] != null) usedLayers.setReserved(key1,true); else usedLayers.h[key1] = true;
					}
					break;
				default:
				}
			}
			var _g21 = 0;
			var _g31 = Reflect.fields(ts);
			while(_g21 < _g31.length) {
				var f = _g31[_g21];
				++_g21;
				if(!(__map_reserved[f] != null?usedLayers.getReserved(f):usedLayers.h[f])) {
					Reflect.deleteField(ts,f);
					++count;
				}
			}
		}
		return count;
	}
	,initMenu: function() {
		var _g = this;
		var menu = new js_node_webkit_Menu({ type : "menubar"});
		var mfile = new js_node_webkit_MenuItem({ label : "File"});
		var mfiles = new js_node_webkit_Menu();
		var mnew = new js_node_webkit_MenuItem({ label : "New"});
		var mopen = new js_node_webkit_MenuItem({ label : "Open..."});
		var mrecent = new js_node_webkit_MenuItem({ label : "Recent Files"});
		var msave = new js_node_webkit_MenuItem({ label : "Save As..."});
		var mclean = new js_node_webkit_MenuItem({ label : "Clean Images"});
		this.mcompress = new js_node_webkit_MenuItem({ label : "Enable Compression", type : "checkbox"});
		this.mcompress.click = function() {
			_g.setCompressionMode(_g.mcompress.checked);
			_g.save();
		};
		var mabout = new js_node_webkit_MenuItem({ label : "About"});
		var mexit = new js_node_webkit_MenuItem({ label : "Exit"});
		var mdebug = new js_node_webkit_MenuItem({ label : "Dev"});
		mnew.click = function() {
			_g.prefs.curFile = null;
			_g.load(true);
		};
		mdebug.click = function() {
			_g.window.showDevTools();
		};
		mopen.click = function() {
			var i = $("<input>").attr("type","file").css("display","none").change(function(e) {
				var j = $(this);
				_g.prefs.curFile = j.val();
				_g.load();
				j.remove();
			});
			i.appendTo($("body"));
			i.click();
		};
		msave.click = function() {
			var i1 = $("<input>").attr("type","file").attr("nwsaveas","new.cdb").css("display","none").change(function(e1) {
				var j1 = $(this);
				_g.prefs.curFile = j1.val();
				_g.save();
				j1.remove();
			});
			i1.appendTo($("body"));
			i1.click();
		};
		mclean.click = function() {
			var lcount = _g.cleanLayers();
			var icount = 0;
			if(_g.imageBank != null) {
				var count = Reflect.fields(_g.imageBank).length;
				_g.cleanImages();
				var count2 = Reflect.fields(_g.imageBank).length;
				icount = count - count2;
				if(count2 == 0) _g.imageBank = null;
			}
			_g.error([lcount + " tileset data removed",icount + " unused images removed"].join("\n"));
			_g.refresh();
			if(lcount > 0) _g.save();
			if(icount > 0) _g.saveImages();
		};
		mexit.click = function() {
			process.exit(0);
		};
		mabout.click = function() {
			$("#about").show();
		};
		var mrecents = new js_node_webkit_Menu();
		var _g1 = 0;
		var _g11 = this.prefs.recent;
		while(_g1 < _g11.length) {
			var file = [_g11[_g1]];
			++_g1;
			var m = new js_node_webkit_MenuItem({ label : file[0]});
			m.click = (function(file1) {
				return function() {
					_g.prefs.curFile = file1[0];
					_g.load();
				};
			})(file);
			mrecents.append(m);
		}
		mrecent.submenu = mrecents;
		var _g2 = 0;
		var _g12 = [mnew,mopen,mrecent,msave,mclean,this.mcompress,mabout,mexit];
		while(_g2 < _g12.length) {
			var m2 = _g12[_g2];
			++_g2;
			mfiles.append(m2);
		}
		mfile.submenu = mfiles;
		menu.append(mfile);
		menu.append(mdebug);
		this.window.menu = menu;
		if(this.prefs.windowPos.x > 0 && this.prefs.windowPos.y > 0) this.window.moveTo(this.prefs.windowPos.x,this.prefs.windowPos.y);
		if(this.prefs.windowPos.w > 50 && this.prefs.windowPos.h > 50) this.window.resizeTo(this.prefs.windowPos.w,this.prefs.windowPos.h);
		this.window.show();
		if(this.prefs.windowPos.max) this.window.maximize();
		this.window.on("close",function() {
			if(_g.prefs.curFile == null && _g.data.sheets.length > 0) {
				if(!window.confirm("Do you want to exit without saving your changes?")) return;
			}
			if(!_g.prefs.windowPos.max) _g.prefs.windowPos = { x : _g.window.x, y : _g.window.y, w : _g.window.width, h : _g.window.height, max : false};
			_g.savePrefs();
			_g.window.close(true);
		});
		this.window.on("maximize",function() {
			_g.prefs.windowPos.max = true;
		});
		this.window.on("unmaximize",function() {
			_g.prefs.windowPos.max = false;
		});
	}
	,getFileTime: function() {
		try {
			return js_node_Fs.statSync(this.prefs.curFile).mtime.getTime();
		} catch( e ) {
			return 0.;
		}
	}
	,checkTime: function() {
		if(this.prefs.curFile == null) return;
		var fileTime = this.getFileTime();
		if(fileTime != this.lastSave && fileTime != 0) this.load();
	}
	,load: function(noError) {
		if(noError == null) noError = false;
		if(sys_FileSystem.exists(this.prefs.curFile + ".mine") && !Resolver.resolveConflict(this.prefs.curFile)) {
			this.error("CDB file has unresolved conflict, merge by hand before reloading.");
			return;
		}
		Model.prototype.load.call(this,noError);
		HxOverrides.remove(this.prefs.recent,this.prefs.curFile);
		this.prefs.recent.unshift(this.prefs.curFile);
		if(this.prefs.recent.length > 8) this.prefs.recent.pop();
		this.lastSave = this.getFileTime();
		this.mcompress.checked = this.data.compress;
	}
	,save: function(history) {
		if(history == null) history = true;
		Model.prototype.save.call(this,history);
		this.lastSave = this.getFileTime();
	}
	,__class__: Main
});
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compare = function(a,b) {
	if(a == b) return 0; else if(a > b) return 1; else return -1;
};
Reflect.isObject = function(v) {
	if(v == null) return false;
	var t = typeof(v);
	return t == "string" || t == "object" && v.__enum__ == null || t == "function" && (v.__name__ || v.__ename__) != null;
};
Reflect.isEnumValue = function(v) {
	if(v != null) return v.__enum__ != null; else return false;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Resolver = function() {
	this.hasError = false;
};
$hxClasses["Resolver"] = Resolver;
Resolver.__name__ = ["Resolver"];
Resolver.resolveConflict = function(file) {
	return new Resolver().check(file);
};
Resolver.prototype = {
	check: function(file) {
		var minRev = 0;
		var maxRev = 0;
		var basePath = file.split("\\").join("/").split("/").pop();
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(HxOverrides.substr(file,0,-basePath.length));
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(StringTools.startsWith(f,basePath + ".r")) {
				var rev = Std.parseInt(HxOverrides.substr(f,basePath.length + 2,null));
				if(minRev == 0 || minRev > rev) minRev = rev;
				if(maxRev == 0 || maxRev < rev) maxRev = rev;
			}
		}
		var merged = js_node_Fs.readFileSync(file,{ encoding : "utf8"}).split("<<<<<<< .mine");
		if(merged.length == 1) return true;
		var endConflict = new EReg(">>>>>>> \\.r[0-9]+[\r\n]+","");
		var _g11 = 1;
		var _g2 = merged.length;
		while(_g11 < _g2) {
			var i = _g11++;
			endConflict.match(merged[i]);
			merged[i] = endConflict.matchedLeft().split("=======").shift() + endConflict.matchedRight();
		}
		var mine = JSON.parse(merged.join(""));
		var origin = JSON.parse(js_node_Fs.readFileSync(file + ".r" + minRev,{ encoding : "utf8"}));
		var other = JSON.parse(js_node_Fs.readFileSync(file + ".r" + maxRev,{ encoding : "utf8"}));
		this.hasError = false;
		try {
			this.resolveRec(mine,origin,other,[]);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,String) ) {
				this.error(e);
				this.hasError = true;
			} else throw(e);
		}
		if(this.hasError) return false;
		try {
			js_node_Fs.writeFileSync(process.env.TEMP + "/" + basePath + ".merged" + minRev + "_" + maxRev,js_node_Fs.readFileSync(file,{ encoding : "utf8"}));
		} catch( e2 ) {
		}
		js_node_Fs.writeFileSync(file,JSON.stringify(other,null,"\t"));
		js_node_Fs.unlinkSync(file + ".mine");
		js_node_Fs.unlinkSync(file + ".r" + minRev);
		js_node_Fs.unlinkSync(file + ".r" + maxRev);
		return true;
	}
	,resolveError: function(message,path) {
		this.error(message + "\n  in\n" + path.join("."));
		this.hasError = true;
	}
	,resolveRec: function(mine,origin,other,path) {
		if(mine == origin || mine == other) return other;
		if(other == origin) return mine;
		if((mine instanceof Array) && mine.__enum__ == null) {
			var target = other;
			if(origin == null) {
				origin = [];
				if(target == null) {
					other = [];
					target = other;
				}
			} else if(target == null) target = []; else if(other.length != mine.length) this.resolveError("Array resize conflict",path);
			var _g1 = 0;
			var _g = mine.length;
			while(_g1 < _g) {
				var i = _g1++;
				var mv = mine[i];
				var name = Reflect.field(mv,"id");
				if(name == null) name = Reflect.field(mv,"name");
				path.push(typeof(name) == "string"?name + "#" + i:"[" + i + "]");
				target[i] = this.resolveRec(mv,origin[i],target[i],path);
				path.pop();
			}
		} else if(Reflect.isObject(mine) && typeof(mine) != "string") {
			var target1 = other;
			if(origin == null) {
				origin = { };
				if(other == null) {
					other = { };
					target1 = other;
				}
			} else if(target1 == null) target1 = { };
			var _g2 = 0;
			var _g12 = Reflect.fields(target1);
			while(_g2 < _g12.length) {
				var f = _g12[_g2];
				++_g2;
				if(!Object.prototype.hasOwnProperty.call(mine,f)) mine[f] = null;
			}
			var _g3 = 0;
			var _g13 = Reflect.fields(mine);
			while(_g3 < _g13.length) {
				var f3 = _g13[_g3];
				++_g3;
				path.push(f3);
				target1[f3] = this.resolveRec(Reflect.field(mine,f3),Reflect.field(origin,f3),Reflect.field(target1,f3),path);
				path.pop();
			}
		} else {
			if(typeof(mine) == "string" && typeof(other) == "string") try {
				var dorigin = cdb_Lz4Reader.decodeString(origin);
				var dmine = cdb_Lz4Reader.decodeString(mine);
				var dother = cdb_Lz4Reader.decodeString(other);
				if(dorigin.length != dmine.length || dorigin.length != dother.length) throw new js__$Boot_HaxeError("resized");
				var _g14 = 0;
				var _g4 = dorigin.length;
				while(_g14 < _g4) {
					var i4 = _g14++;
					var mine4 = dmine.b[i4];
					var origin4 = dorigin.b[i4];
					var other4 = dother.b[i4];
					if(mine4 == origin4 || mine4 == other4) continue;
					if(other4 == origin4) dother.b[i4] = mine4 & 255; else throw new js__$Boot_HaxeError("conflict");
				}
				return cdb_Lz4Reader.encodeBytes(dother,other.substr(0,5) == "BCJNG");
			} catch( e ) {
			}
			var display = function(v) {
				var str = Std.string(v);
				if(str.length > 50) str = HxOverrides.substr(str,0,50) + "...";
				return str;
			};
			var r = window.confirm("A conflict has been found in " + path.join(".") + "\nOrigin = " + display(origin) + "    Mine = " + display(mine) + "    Other = " + display(other) + "\nDo you want to keep your changes (OK) or discard them (CANCEL) ?\n\n");
			if(!window.confirm("Are you sure ?")) throw new js__$Boot_HaxeError("Resolve aborted");
			if(r) other = mine;
		}
		return other;
	}
	,error: function(msg) {
		js_Browser.alert(msg);
	}
	,__class__: Resolver
};
var SheetData = function() { };
$hxClasses["SheetData"] = SheetData;
SheetData.__name__ = ["SheetData"];
SheetData.getSheet = function(name) {
	var tmp;
	var _this = SheetData.model.smap;
	if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
	return tmp.s;
};
SheetData.isLevel = function(sheet) {
	return sheet.props.level != null;
};
SheetData.getSub = function(sheet,c) {
	var tmp;
	var _this = SheetData.model.smap;
	var key = sheet.name + "@" + c.name;
	if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
	return tmp.s;
};
SheetData.getParent = function(sheet) {
	if(!sheet.props.hide) return null;
	var parts = sheet.name.split("@");
	var colName = parts.pop();
	var name = parts.join("@");
	var tmp;
	var _this = SheetData.model.smap;
	if(__map_reserved[name] != null) tmp = _this.getReserved(name); else tmp = _this.h[name];
	return { s : tmp.s, c : colName};
};
SheetData.getLines = function(sheet) {
	var p = SheetData.getParent(sheet);
	if(p == null) return sheet.lines;
	if(p.s.props.level != null && p.c == "tileProps") {
		var all1 = [];
		var sets = p.s.props.level.tileSets;
		var _g = 0;
		var _g1 = Reflect.fields(sets);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var t = Reflect.field(sets,f);
			if(t.props == null) continue;
			var _g2 = 0;
			var _g3 = t.props;
			while(_g2 < _g3.length) {
				var p1 = _g3[_g2];
				++_g2;
				if(p1 != null) all1.push(p1);
			}
		}
		return all1;
	}
	var all = [];
	if(sheet.props.isProps) {
		var _g4 = 0;
		var _g14 = SheetData.getLines(p.s);
		while(_g4 < _g14.length) {
			var obj = _g14[_g4];
			++_g4;
			var v = Reflect.field(obj,p.c);
			if(v != null) all.push(v);
		}
	} else {
		var _g5 = 0;
		var _g15 = SheetData.getLines(p.s);
		while(_g5 < _g15.length) {
			var obj5 = _g15[_g5];
			++_g5;
			var v5 = Reflect.field(obj5,p.c);
			if(v5 != null) {
				var _g25 = 0;
				while(_g25 < v5.length) {
					var v6 = v5[_g25];
					++_g25;
					all.push(v6);
				}
			}
		}
	}
	return all;
};
SheetData.getObjects = function(sheet) {
	var p = SheetData.getParent(sheet);
	if(p == null) {
		var _g = [];
		var _g2 = 0;
		var _g1 = sheet.lines.length;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push({ path : [sheet.lines[i]], indexes : [i]});
		}
		return _g;
	}
	var all = [];
	var _g11 = 0;
	var _g21 = SheetData.getObjects(p.s);
	while(_g11 < _g21.length) {
		var obj = _g21[_g11];
		++_g11;
		var v = Reflect.field(obj.path[obj.path.length - 1],p.c);
		if(v != null) {
			var _g4 = 0;
			var _g3 = v.length;
			while(_g4 < _g3) {
				var i1 = _g4++;
				var sobj = v[i1];
				var p1 = obj.path.slice();
				var idx = obj.indexes.slice();
				p1.push(sobj);
				idx.push(i1);
				all.push({ path : p1, indexes : idx});
			}
		}
	}
	return all;
};
SheetData.newLine = function(sheet,index) {
	var o = { };
	var _g = 0;
	var _g1 = sheet.columns;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		var d = SheetData.model.getDefault(c);
		if(d != null) o[c.name] = d;
	}
	if(index == null) sheet.lines.push(o); else {
		var _g12 = 0;
		var _g3 = sheet.separators.length;
		while(_g12 < _g3) {
			var i = _g12++;
			var s = sheet.separators[i];
			if(s > index) sheet.separators[i] = s + 1;
		}
		sheet.lines.splice(index + 1,0,o);
		var _g2 = [];
		var _g23 = 0;
		var _g13 = sheet.lines.length;
		while(_g23 < _g13) {
			var i3 = _g23++;
			_g2.push(i3 <= index?i3:i3 + 1);
		}
		SheetData.changeLineOrder(sheet,_g2);
	}
	return o;
};
SheetData.getPath = function(sheet) {
	if(sheet.path == null) return sheet.name; else return sheet.path;
};
SheetData.hasColumn = function(s,name,types) {
	var _g = 0;
	var _g1 = s.columns;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		if(c.name == name) {
			if(types != null) {
				var _g2 = 0;
				while(_g2 < types.length) {
					var t = types[_g2];
					++_g2;
					if(Type.enumEq(c.type,t)) return true;
				}
				return false;
			}
			return true;
		}
	}
	return false;
};
SheetData.moveLine = function(sheet,index,delta) {
	if(delta < 0 && index > 0) {
		var _g1 = 0;
		var _g2 = sheet.separators.length;
		while(_g1 < _g2) {
			var i = _g1++;
			if(sheet.separators[i] == index) {
				var i2 = i;
				while(i2 < sheet.separators.length - 1 && sheet.separators[i2 + 1] == index) ++i2;
				sheet.separators[i2]++;
				return index;
			}
		}
		var l = sheet.lines[index];
		sheet.lines.splice(index,1);
		sheet.lines.splice(index - 1,0,l);
		var _g = [];
		var _g22 = 0;
		var _g12 = sheet.lines.length;
		while(_g22 < _g12) {
			var i3 = _g22++;
			_g.push(i3);
		}
		var arr = _g;
		arr[index] = index - 1;
		arr[index - 1] = index;
		SheetData.changeLineOrder(sheet,arr);
		return index - 1;
	} else if(delta > 0 && sheet != null && index < sheet.lines.length - 1) {
		var _g13 = 0;
		var _g4 = sheet.separators.length;
		while(_g13 < _g4) {
			var i4 = _g13++;
			if(sheet.separators[i4] == index + 1) {
				sheet.separators[i4]--;
				return index;
			}
		}
		var l3 = sheet.lines[index];
		sheet.lines.splice(index,1);
		sheet.lines.splice(index + 1,0,l3);
		var _g3 = [];
		var _g24 = 0;
		var _g14 = sheet.lines.length;
		while(_g24 < _g14) {
			var i5 = _g24++;
			_g3.push(i5);
		}
		var arr3 = _g3;
		arr3[index] = index + 1;
		arr3[index + 1] = index;
		SheetData.changeLineOrder(sheet,arr3);
		return index + 1;
	}
	return null;
};
SheetData.deleteLine = function(sheet,index) {
	var _g = [];
	var _g2 = 0;
	var _g1 = sheet.lines.length;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(i < index?i:i - 1);
	}
	var arr = _g;
	arr[index] = -1;
	SheetData.changeLineOrder(sheet,arr);
	sheet.lines.splice(index,1);
	var prev = -1;
	var toRemove = null;
	var _g21 = 0;
	var _g11 = sheet.separators.length;
	while(_g21 < _g11) {
		var i1 = _g21++;
		var s = sheet.separators[i1];
		if(s > index) {
			if(prev == s) toRemove = i1;
			sheet.separators[i1] = s - 1;
		} else prev = s;
	}
	if(toRemove != null) {
		sheet.separators.splice(toRemove,1);
		if(sheet.props.separatorTitles != null) sheet.props.separatorTitles.splice(toRemove,1);
	}
};
SheetData.deleteColumn = function(sheet,cname) {
	var _g = 0;
	var _g1 = sheet.columns;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		if(c.name == cname) {
			HxOverrides.remove(sheet.columns,c);
			var _g2 = 0;
			var _g3 = SheetData.getLines(sheet);
			while(_g2 < _g3.length) {
				var o = _g3[_g2];
				++_g2;
				Reflect.deleteField(o,c.name);
			}
			if(sheet.props.displayColumn == c.name) {
				sheet.props.displayColumn = null;
				SheetData.model.makeSheet(sheet);
			}
			if(sheet.props.displayIcon == c.name) {
				sheet.props.displayIcon = null;
				SheetData.model.makeSheet(sheet);
			}
			if(c.type == cdb_ColumnType.TList || c.type == cdb_ColumnType.TProperties) {
				var tmp;
				var _this = SheetData.model.smap;
				var key = sheet.name + "@" + c.name;
				if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
				SheetData.model.deleteSheet(tmp.s);
			}
			return true;
		}
	}
	return false;
};
SheetData.addColumn = function(sheet,c,index) {
	var _g = 0;
	var _g1 = sheet.columns;
	while(_g < _g1.length) {
		var c2 = _g1[_g];
		++_g;
		if(c2.name == c.name) return "Column already exists"; else if(c2.type == cdb_ColumnType.TId && c.type == cdb_ColumnType.TId) return "Only one ID allowed";
	}
	if(c.name == "index" && sheet.props.hasIndex) return "Sheet already has an index";
	if(c.name == "group" && sheet.props.hasGroup) return "Sheet already has a group";
	if(index == null) sheet.columns.push(c); else sheet.columns.splice(index,0,c);
	var _g2 = 0;
	var _g12 = SheetData.getLines(sheet);
	while(_g2 < _g12.length) {
		var i = _g12[_g2];
		++_g2;
		var def = SheetData.model.getDefault(c);
		if(def != null) i[c.name] = def;
	}
	if(c.type == cdb_ColumnType.TList || c.type == cdb_ColumnType.TProperties) {
		var s = { name : sheet.name + "@" + c.name, props : { hide : true}, separators : [], lines : [], columns : []};
		if(c.type == cdb_ColumnType.TProperties) s.props.isProps = true;
		SheetData.model.data.sheets.push(s);
		SheetData.model.makeSheet(s);
	}
	return null;
};
SheetData.objToString = function(sheet,obj,esc) {
	if(esc == null) esc = false;
	if(obj == null) return "null";
	var fl = [];
	var _g = 0;
	var _g1 = sheet.columns;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		var v = Reflect.field(obj,c.name);
		if(v == null) continue;
		fl.push(c.name + " : " + SheetData.colToString(sheet,c,v,esc));
	}
	if(fl.length == 0) return "{}";
	return "{ " + fl.join(", ") + " }";
};
SheetData.colToString = function(sheet,c,v,esc) {
	if(esc == null) esc = false;
	if(v == null) return "null";
	var _g = c.type;
	switch(_g[1]) {
	case 8:
		var a = v;
		if(a.length == 0) return "[]";
		var tmp;
		var _this = SheetData.model.smap;
		var key = sheet.name + "@" + c.name;
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		var s = tmp.s;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < a.length) {
			var v1 = a[_g2];
			++_g2;
			_g1.push(SheetData.objToString(s,v1,esc));
		}
		return "[ " + _g1.join(", ") + " ]";
	default:
		return SheetData.model.valToString(c.type,v,esc);
	}
};
SheetData.changeLineOrder = function(sheet,remap) {
	var _g = 0;
	var _g1 = SheetData.model.data.sheets;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = s.columns;
		while(_g2 < _g3.length) {
			var c = _g3[_g2];
			++_g2;
			var _g4 = c.type;
			switch(_g4[1]) {
			case 12:
				var t = _g4[2];
				if(t == sheet.name) {
					var _g5 = 0;
					var _g6 = SheetData.getLines(s);
					while(_g5 < _g6.length) {
						var obj = _g6[_g5];
						++_g5;
						var ldat = Reflect.field(obj,c.name);
						if(ldat == null || ldat == "") continue;
						var _g7 = [];
						var _g8 = 0;
						while(_g8 < 256) {
							var i = _g8++;
							_g7.push(i);
						}
						var d = cdb__$Types_Layer_$Impl_$.decode(ldat,_g7);
						var _g9 = 0;
						var _g81 = d.length;
						while(_g9 < _g81) {
							var i1 = _g9++;
							var r = remap[d[i1]];
							if(r < 0) r = 0;
							d[i1] = r;
						}
						ldat = cdb__$Types_Layer_$Impl_$.encode(d,SheetData.model.data.compress);
						obj[c.name] = ldat;
					}
				}
				break;
			default:
			}
		}
	}
};
SheetData.getReferences = function(sheet,index) {
	var id = null;
	var _g = 0;
	var _g1 = sheet.columns;
	try {
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var _g2 = c.type;
			switch(_g2[1]) {
			case 0:
				id = Reflect.field(sheet.lines[index],c.name);
				throw "__break__";
				break;
			default:
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	if(id == "" || id == null) return null;
	var results = [];
	var _g3 = 0;
	var _g13 = SheetData.model.data.sheets;
	while(_g3 < _g13.length) {
		var s = _g13[_g3];
		++_g3;
		var _g23 = 0;
		var _g33 = s.columns;
		while(_g23 < _g33.length) {
			var c3 = _g33[_g23];
			++_g23;
			var _g4 = c3.type;
			switch(_g4[1]) {
			case 6:
				var sname = _g4[2];
				if(sname == sheet.name) {
					var sheets = [];
					var p = { s : s, c : c3.name, id : null};
					while(true) {
						var _g5 = 0;
						var _g6 = p.s.columns;
						try {
							while(_g5 < _g6.length) {
								var c4 = _g6[_g5];
								++_g5;
								var _g7 = c4.type;
								switch(_g7[1]) {
								case 0:
									p.id = c4.name;
									throw "__break__";
									break;
								default:
								}
							}
						} catch( e ) { if( e != "__break__" ) throw e; }
						sheets.unshift(p);
						var p2 = SheetData.getParent(p.s);
						if(p2 == null) break;
						p = { s : p2.s, c : p2.c, id : null};
					}
					var _g54 = 0;
					var _g64 = SheetData.getObjects(s);
					while(_g54 < _g64.length) {
						var o = _g64[_g54];
						++_g54;
						var obj = o.path[o.path.length - 1];
						if(Reflect.field(obj,c3.name) == id) results.push({ s : sheets, o : o});
					}
				}
				break;
			case 9:
				var tname = _g4[2];
				break;
			default:
			}
		}
	}
	return results;
};
SheetData.updateValue = function(sheet,c,index,old) {
	var _g = c.type;
	switch(_g[1]) {
	case 0:
		SheetData.model.makeSheet(sheet);
		break;
	case 3:
		if(sheet.props.level != null && (c.name == "width" || c.name == "height")) {
			var obj = sheet.lines[index];
			var newW = Reflect.field(obj,"width");
			var newH = Reflect.field(obj,"height");
			var oldW = newW;
			var oldH = newH;
			if(c.name == "width") oldW = old; else oldH = old;
			var remapTileLayer = function(v) {
				if(v == null) return null;
				var odat = cdb__$Types_TileLayerData_$Impl_$.decode(v.data);
				var ndat = [];
				if(odat[0] == 65535) ndat = odat; else {
					var pos = 0;
					var _g2 = 0;
					var _g1 = newH;
					while(_g2 < _g1) {
						var y = _g2++;
						if(y >= oldH) {
							var _g4 = 0;
							var _g3 = newW;
							while(_g4 < _g3) {
								var x = _g4++;
								ndat.push(0);
							}
						} else if(newW <= oldW) {
							var _g41 = 0;
							var _g31 = newW;
							while(_g41 < _g31) {
								var x1 = _g41++;
								ndat.push(odat[pos++]);
							}
							pos += oldW - newW;
						} else {
							var _g42 = 0;
							var _g32 = oldW;
							while(_g42 < _g32) {
								var x2 = _g42++;
								ndat.push(odat[pos++]);
							}
							var _g43 = oldW;
							var _g33 = newW;
							while(_g43 < _g33) {
								var x3 = _g43++;
								ndat.push(0);
							}
						}
					}
				}
				return { file : v.file, size : v.size, stride : v.stride, data : cdb__$Types_TileLayerData_$Impl_$.encode(ndat,SheetData.model.data.compress)};
			};
			var _g13 = 0;
			var _g23 = sheet.columns;
			while(_g13 < _g23.length) {
				var c3 = _g23[_g13];
				++_g13;
				var v3 = Reflect.field(obj,c3.name);
				if(v3 == null) continue;
				var _g34 = c3.type;
				switch(_g34[1]) {
				case 12:
					var v4 = v3;
					var _g44 = [];
					var _g5 = 0;
					while(_g5 < 256) {
						var i = _g5++;
						_g44.push(i);
					}
					var odat4 = cdb__$Types_Layer_$Impl_$.decode(v4,_g44);
					var ndat4 = [];
					var _g6 = 0;
					var _g54 = newH;
					while(_g6 < _g54) {
						var y4 = _g6++;
						var _g8 = 0;
						var _g7 = newW;
						while(_g8 < _g7) {
							var x4 = _g8++;
							var k = y4 < oldH && x4 < oldW?odat4[x4 + y4 * oldW]:0;
							ndat4.push(k);
						}
					}
					v4 = cdb__$Types_Layer_$Impl_$.encode(ndat4,SheetData.model.data.compress);
					obj[c3.name] = v4;
					break;
				case 8:
					var tmp;
					var _this = SheetData.model.smap;
					var key = sheet.name + "@" + c3.name;
					if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
					var s = tmp.s;
					if(SheetData.hasColumn(s,"x",[cdb_ColumnType.TInt,cdb_ColumnType.TFloat]) && SheetData.hasColumn(s,"y",[cdb_ColumnType.TInt,cdb_ColumnType.TFloat])) {
						var elts = Reflect.field(obj,c3.name);
						var _g45 = 0;
						var _g55 = elts.slice();
						while(_g45 < _g55.length) {
							var e = _g55[_g45];
							++_g45;
							if(e.x >= newW || e.y >= newH) HxOverrides.remove(elts,e);
						}
					} else if(SheetData.hasColumn(s,"data",[cdb_ColumnType.TTileLayer])) {
						var a = v3;
						var _g46 = 0;
						while(_g46 < a.length) {
							var o = a[_g46];
							++_g46;
							o.data = remapTileLayer(o.data);
						}
					}
					break;
				case 15:
					obj[c3.name] = remapTileLayer(v3);
					break;
				default:
				}
			}
		} else {
			if(sheet.props.displayColumn == c.name) {
				var obj6 = sheet.lines[index];
				var tmp6;
				var _this6 = SheetData.model.smap;
				var key6 = sheet.name;
				if(__map_reserved[key6] != null) tmp6 = _this6.getReserved(key6); else tmp6 = _this6.h[key6];
				var s6 = tmp6;
				var _g16 = 0;
				var _g26 = sheet.columns;
				while(_g16 < _g26.length) {
					var cid = _g26[_g16];
					++_g16;
					if(cid.type == cdb_ColumnType.TId) {
						var id = Reflect.field(obj6,cid.name);
						if(id != null) {
							var disp = Reflect.field(obj6,c.name);
							if(disp == null) disp = "#" + id;
							var tmp7;
							var _this7 = s6.index;
							if(__map_reserved[id] != null) tmp7 = _this7.getReserved(id); else tmp7 = _this7.h[id];
							tmp7.disp = disp;
						}
					}
				}
			}
			if(sheet.props.displayIcon == c.name) {
				var obj7 = sheet.lines[index];
				var tmp8;
				var _this8 = SheetData.model.smap;
				var key8 = sheet.name;
				if(__map_reserved[key8] != null) tmp8 = _this8.getReserved(key8); else tmp8 = _this8.h[key8];
				var s8 = tmp8;
				var _g18 = 0;
				var _g28 = sheet.columns;
				while(_g18 < _g28.length) {
					var cid8 = _g28[_g18];
					++_g18;
					if(cid8.type == cdb_ColumnType.TId) {
						var id8 = Reflect.field(obj7,cid8.name);
						if(id8 != null) {
							var tmp9;
							var _this9 = s8.index;
							if(__map_reserved[id8] != null) tmp9 = _this9.getReserved(id8); else tmp9 = _this9.h[id8];
							tmp9.ico = Reflect.field(obj7,c.name);
						}
					}
				}
			}
		}
		break;
	default:
		if(sheet.props.displayColumn == c.name) {
			var obj9 = sheet.lines[index];
			var tmp10;
			var _this10 = SheetData.model.smap;
			var key10 = sheet.name;
			if(__map_reserved[key10] != null) tmp10 = _this10.getReserved(key10); else tmp10 = _this10.h[key10];
			var s10 = tmp10;
			var _g110 = 0;
			var _g210 = sheet.columns;
			while(_g110 < _g210.length) {
				var cid10 = _g210[_g110];
				++_g110;
				if(cid10.type == cdb_ColumnType.TId) {
					var id10 = Reflect.field(obj9,cid10.name);
					if(id10 != null) {
						var disp10 = Reflect.field(obj9,c.name);
						if(disp10 == null) disp10 = "#" + id10;
						var tmp11;
						var _this11 = s10.index;
						if(__map_reserved[id10] != null) tmp11 = _this11.getReserved(id10); else tmp11 = _this11.h[id10];
						tmp11.disp = disp10;
					}
				}
			}
		}
		if(sheet.props.displayIcon == c.name) {
			var obj11 = sheet.lines[index];
			var tmp12;
			var _this12 = SheetData.model.smap;
			var key12 = sheet.name;
			if(__map_reserved[key12] != null) tmp12 = _this12.getReserved(key12); else tmp12 = _this12.h[key12];
			var s12 = tmp12;
			var _g112 = 0;
			var _g212 = sheet.columns;
			while(_g112 < _g212.length) {
				var cid12 = _g212[_g112];
				++_g112;
				if(cid12.type == cdb_ColumnType.TId) {
					var id12 = Reflect.field(obj11,cid12.name);
					if(id12 != null) {
						var tmp13;
						var _this13 = s12.index;
						if(__map_reserved[id12] != null) tmp13 = _this13.getReserved(id12); else tmp13 = _this13.h[id12];
						tmp13.ico = Reflect.field(obj11,c.name);
					}
				}
			}
		}
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.random = function(x) {
	if(x <= 0) return 0; else return Math.floor(Math.random() * x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) return s.split("\"").join("&quot;").split("'").join("&#039;"); else return s;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) return HxOverrides.substr(s,0,start.length) == start; else return false;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) return HxOverrides.substr(s,slen - elen,elen) == end; else return false;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) return c == 32; else return true;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) break;
	}
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	return Type.createEnum(e,c,params);
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) return true;
	try {
		if(a[0] != b[0]) return false;
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) return false;
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) return false;
	} catch( e1 ) {
		return false;
	}
	return true;
};
var cdb__$BinSerializer_SchemaKind = $hxClasses["cdb._BinSerializer.SchemaKind"] = { __ename__ : ["cdb","_BinSerializer","SchemaKind"], __constructs__ : ["SEnum","SAnon","SMulti"] };
cdb__$BinSerializer_SchemaKind.SEnum = function(e) { var $x = ["SEnum",0,e]; $x.__enum__ = cdb__$BinSerializer_SchemaKind; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SchemaKind.SAnon = function(e) { var $x = ["SAnon",1,e]; $x.__enum__ = cdb__$BinSerializer_SchemaKind; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SchemaKind.SMulti = function(a) { var $x = ["SMulti",2,a]; $x.__enum__ = cdb__$BinSerializer_SchemaKind; $x.toString = $estr; return $x; };
var cdb__$BinSerializer_SData = $hxClasses["cdb._BinSerializer.SData"] = { __ename__ : ["cdb","_BinSerializer","SData"], __constructs__ : ["DInt","DBool","DString","DFloat","DBytes","DDynamic","DNull","DArray","DSchema","DAnon","DIntMap","DStringMap","DEnumMap"] };
cdb__$BinSerializer_SData.DInt = ["DInt",0];
cdb__$BinSerializer_SData.DInt.toString = $estr;
cdb__$BinSerializer_SData.DInt.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DBool = ["DBool",1];
cdb__$BinSerializer_SData.DBool.toString = $estr;
cdb__$BinSerializer_SData.DBool.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DString = ["DString",2];
cdb__$BinSerializer_SData.DString.toString = $estr;
cdb__$BinSerializer_SData.DString.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DFloat = ["DFloat",3];
cdb__$BinSerializer_SData.DFloat.toString = $estr;
cdb__$BinSerializer_SData.DFloat.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DBytes = ["DBytes",4];
cdb__$BinSerializer_SData.DBytes.toString = $estr;
cdb__$BinSerializer_SData.DBytes.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DDynamic = ["DDynamic",5];
cdb__$BinSerializer_SData.DDynamic.toString = $estr;
cdb__$BinSerializer_SData.DDynamic.__enum__ = cdb__$BinSerializer_SData;
cdb__$BinSerializer_SData.DNull = function(d) { var $x = ["DNull",6,d]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DArray = function(d) { var $x = ["DArray",7,d]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DSchema = function(id) { var $x = ["DSchema",8,id]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DAnon = function(a) { var $x = ["DAnon",9,a]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DIntMap = function(d) { var $x = ["DIntMap",10,d]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DStringMap = function(d) { var $x = ["DStringMap",11,d]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
cdb__$BinSerializer_SData.DEnumMap = function(e,d) { var $x = ["DEnumMap",12,e,d]; $x.__enum__ = cdb__$BinSerializer_SData; $x.toString = $estr; return $x; };
var cdb_NullError = function(msg) {
	this.msg = msg;
};
$hxClasses["cdb.NullError"] = cdb_NullError;
cdb_NullError.__name__ = ["cdb","NullError"];
cdb_NullError.prototype = {
	toString: function() {
		return this.msg;
	}
	,__class__: cdb_NullError
};
var cdb_SchemaError = function(s) {
	this.s = s;
};
$hxClasses["cdb.SchemaError"] = cdb_SchemaError;
cdb_SchemaError.__name__ = ["cdb","SchemaError"];
cdb_SchemaError.prototype = {
	toString: function() {
		return "Schema " + this.s.name + " version differs";
	}
	,__class__: cdb_SchemaError
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x;
		var _this = this.shash;
		if(__map_reserved[s] != null) x = _this.getReserved(s); else x = _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null?"null":"" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) _this1.setReserved(s,value); else _this1.h[s] = value;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null?"null":"" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null?"null":"" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null?"null":"" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) this.buf.b += v2 < 0?"m":"p"; else {
				this.buf.b += "d";
				this.buf.b += v2 == null?"null":"" + v2;
			}
			break;
		case 3:
			this.buf.b += v?"t":"f";
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) return;
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v.length;
				var _g2 = 0;
				var _g1 = l;
				while(_g2 < _g1) {
					var i = _g2++;
					if(v[i] == null) ++ucount; else {
						if(ucount > 0) {
							if(ucount == 1) this.buf.b += "n"; else {
								this.buf.b += "u";
								this.buf.b += ucount == null?"null":"" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) this.buf.b += "n"; else {
						this.buf.b += "u";
						this.buf.b += ucount == null?"null":"" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g1_head = v3.h;
				while(_g1_head != null) {
					var val = _g1_head.item;
					_g1_head = _g1_head.next;
					var i3 = val;
					this.serialize(i3);
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v4 = v;
				var tmp = v4.keys();
				while(tmp.hasNext()) {
					var k = tmp.next();
					this.serializeString(k);
					this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v5 = v;
				var tmp5 = v5.keys();
				while(tmp5.hasNext()) {
					var k5 = tmp5.next();
					this.buf.b += ":";
					this.buf.b += k5 == null?"null":"" + k5;
					this.serialize(v5.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v6 = v;
				var tmp6 = v6.keys();
				while(tmp6.hasNext()) {
					var k6 = tmp6.next();
					var id = Reflect.field(k6,"__id__");
					Reflect.deleteField(k6,"__id__");
					this.serialize(k6);
					k6.__id__ = id;
					this.serialize(v6.h[k6.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				var i7 = 0;
				var max = v7.length - 2;
				var charsBuf_b = "";
				var b64 = haxe_Serializer.BASE64;
				while(i7 < max) {
					var b1 = v7.b[i7++];
					var b2 = v7.b[i7++];
					var b3 = v7.b[i7++];
					charsBuf_b += Std.string(b64.charAt(b1 >> 2));
					charsBuf_b += Std.string(b64.charAt((b1 << 4 | b2 >> 4) & 63));
					charsBuf_b += Std.string(b64.charAt((b2 << 2 | b3 >> 6) & 63));
					charsBuf_b += Std.string(b64.charAt(b3 & 63));
				}
				if(i7 == max) {
					var b17 = v7.b[i7++];
					var b27 = v7.b[i7++];
					charsBuf_b += Std.string(b64.charAt(b17 >> 2));
					charsBuf_b += Std.string(b64.charAt((b17 << 4 | b27 >> 4) & 63));
					charsBuf_b += Std.string(b64.charAt(b27 << 2 & 63));
				} else if(i7 == max + 1) {
					var b18 = v7.b[i7++];
					charsBuf_b += Std.string(b64.charAt(b18 >> 2));
					charsBuf_b += Std.string(b64.charAt(b18 << 4 & 63));
				}
				var chars = charsBuf_b;
				this.buf.b += "s";
				this.buf.b += Std.string(chars.length);
				this.buf.b += ":";
				this.buf.b += chars == null?"null":"" + chars;
				break;
			default:
				if(this.useCache) this.cache.pop();
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) this.cache.push(v);
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) this.cache.push(v);
					this.serializeFields(v);
				}
			}
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) return;
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 7:
			var e = _g[2];
			if(this.useCache) {
				if(this.serializeRef(v)) return;
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex?"j":"w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else this.serializeString(v[0]);
			this.buf.b += ":";
			var l8 = v.length;
			this.buf.b += Std.string(l8 - 2);
			var _g28 = 2;
			var _g18 = l8;
			while(_g28 < _g18) {
				var i8 = _g28++;
				this.serialize(v[i8]);
			}
			if(this.useCache) this.cache.push(v);
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var cdb_SchemaSerializer = function() {
	haxe_Serializer.call(this);
};
$hxClasses["cdb.SchemaSerializer"] = cdb_SchemaSerializer;
cdb_SchemaSerializer.__name__ = ["cdb","SchemaSerializer"];
cdb_SchemaSerializer.__super__ = haxe_Serializer;
cdb_SchemaSerializer.prototype = $extend(haxe_Serializer.prototype,{
	serializeRef: function(v) {
		if(js_Boot.__instanceof(v,cdb__$BinSerializer_Schema)) {
			var s = v;
			this.serializeString(s.name);
			return true;
		}
		return haxe_Serializer.prototype.serializeRef.call(this,v);
	}
	,__class__: cdb_SchemaSerializer
});
var cdb__$BinSerializer_Schema = function(name) {
	this.name = name;
	this.id = cdb__$BinSerializer_Schema.DO_HASH(name);
};
$hxClasses["cdb._BinSerializer.Schema"] = cdb__$BinSerializer_Schema;
cdb__$BinSerializer_Schema.__name__ = ["cdb","_BinSerializer","Schema"];
cdb__$BinSerializer_Schema.DO_HASH = function(data) {
	var b = haxe_crypto_Md5.make(haxe_io_Bytes.ofString(data));
	return b.b[0] | b.b[1] << 8 | b.b[2] << 16 | b.b[3] << 24;
};
cdb__$BinSerializer_Schema.prototype = {
	finalize: function() {
		this.hash = 0;
		var s = new cdb_SchemaSerializer();
		s.useCache = true;
		s.useEnumIndex = true;
		s.serialize(this.kind);
		this.hash = cdb__$BinSerializer_Schema.DO_HASH(this.name + s.toString());
	}
	,__class__: cdb__$BinSerializer_Schema
};
var cdb_BinSerializer = function() {
};
$hxClasses["cdb.BinSerializer"] = cdb_BinSerializer;
cdb_BinSerializer.__name__ = ["cdb","BinSerializer"];
cdb_BinSerializer.init = function() {
	if(cdb_BinSerializer.schemas == null) {
		var metas = haxe_rtti_Meta.getType(cdb_BinSerializer);
		cdb_BinSerializer.schemas = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = Reflect.fields(metas);
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var s = haxe_Unserializer.run(Reflect.field(metas,m)[0]);
			s.tag = 0;
			cdb_BinSerializer.schemas.h[s.id] = s;
			var _g2 = s.kind;
			switch(_g2[1]) {
			case 0:
				s.enumValue = Type.resolveEnum(s.name);
				if(s.enumValue == null) throw new js__$Boot_HaxeError("Missing enum " + s.name);
				break;
			default:
			}
		}
		cdb_BinSerializer.inst = new cdb_BinSerializer();
	}
};
cdb_BinSerializer.doSerialize = function(v,sid) {
	cdb_BinSerializer.init();
	cdb_BinSerializer.inst.tag = ++cdb_BinSerializer.TAG;
	cdb_BinSerializer.inst.out = new haxe_io_BytesBuffer();
	cdb_BinSerializer.inst.serializeSchema(cdb_BinSerializer.schemas.h[sid],v);
	var b = cdb_BinSerializer.inst.out.getBytes();
	cdb_BinSerializer.inst.out = null;
	return b;
};
cdb_BinSerializer.doUnserialize = function(v,sid) {
	cdb_BinSerializer.init();
	cdb_BinSerializer.inst.tag = ++cdb_BinSerializer.TAG;
	cdb_BinSerializer.inst.bytes = v;
	cdb_BinSerializer.inst.position = 0;
	var v1 = cdb_BinSerializer.inst.unserializeSchema(cdb_BinSerializer.schemas.h[sid]);
	cdb_BinSerializer.inst.bytes = null;
	return v1;
};
cdb_BinSerializer.setGADTTip = function(e) {
	cdb_BinSerializer.gadtTip = e[1];
};
cdb_BinSerializer.checkSchemasData = function(b) {
	cdb_BinSerializer.init();
	var pos = 0;
	var out = [];
	while(pos < b.length) {
		var len = b.b[pos++];
		var name = b.getString(pos,len);
		pos += len;
		var hash = b.b[pos++];
		hash |= b.b[pos++] << 8;
		hash |= b.b[pos++] << 16;
		hash |= b.b[pos++] << 24;
		var tmp = cdb_BinSerializer.schemas.iterator();
		while(tmp.hasNext()) {
			var s = tmp.next();
			if(s.name == name) {
				if(s.hash != hash) out.push(s);
				break;
			}
		}
	}
	return out;
};
cdb_BinSerializer.getSchemasData = function() {
	cdb_BinSerializer.init();
	var b = new haxe_io_BytesBuffer();
	var tmp = cdb_BinSerializer.schemas.iterator();
	while(tmp.hasNext()) {
		var s = tmp.next();
		b.b.push(s.name.length);
		var src = haxe_io_Bytes.ofString(s.name);
		var b1 = b.b;
		var b2 = src.b;
		var _g1 = 0;
		var _g = src.length;
		while(_g1 < _g) {
			var i = _g1++;
			b.b.push(b2[i]);
		}
		b.b.push(s.hash & 255);
		b.b.push(s.hash >> 8 & 255);
		b.b.push(s.hash >> 16 & 255);
		b.b.push(s.hash >>> 24);
	}
	return b.getBytes();
};
cdb_BinSerializer.prototype = {
	fastField: function(v,n) {
		return v[n];
	}
	,fastSetField: function(o,n,v) {
		o[n] = v;
	}
	,serializeInt: function(v) {
		if(v >= 0 && v < 64) this.out.b.push(v); else if(v >= 0 && v < 16384) {
			this.out.b.push(v & 63 | 64);
			this.out.b.push(v >> 6);
		} else if(v >= 0 && v < 4194304) {
			this.out.b.push(v & 63 | 128);
			this.out.b.push(v >> 6);
			this.out.b.push(v >> 14);
		} else {
			this.out.b.push(192);
			this.out.b.push(v & 255);
			this.out.b.push(v >> 8 & 255);
			this.out.b.push(v >> 16 & 255);
			this.out.b.push(v >>> 24);
		}
	}
	,serializeData: function(d,v) {
		switch(d[1]) {
		case 6:
			var d1 = d[2];
			if(v == null) this.out.b.push(0); else {
				this.out.b.push(1);
				this.serializeData(d1,v);
			}
			break;
		case 0:
			this.serializeInt(v);
			break;
		case 3:
			this.out.addInt64(haxe_io_FPHelper.doubleToI64(v));
			break;
		case 1:
			this.out.b.push(v?1:0);
			break;
		case 2:
			var s = v;
			this.serializeInt(s.length);
			var _this = this.out;
			var src = haxe_io_Bytes.ofString(s);
			var b1 = _this.b;
			var b2 = src.b;
			var _g1 = 0;
			var _g = src.length;
			while(_g1 < _g) {
				var i = _g1++;
				_this.b.push(b2[i]);
			}
			break;
		case 7:
			var d2 = d[2];
			var a = v;
			this.serializeInt(a.length);
			var _g2 = 0;
			while(_g2 < a.length) {
				var v2 = a[_g2];
				++_g2;
				this.serializeData(d2,v2);
			}
			break;
		case 8:
			var sid = d[2];
			this.serializeSchema(cdb_BinSerializer.schemas.h[sid],v);
			break;
		case 11:
			var d3 = d[2];
			var m = v;
			var tmp = m.keys();
			while(tmp.hasNext()) {
				var k = tmp.next();
				this.serializeInt(k.length);
				var _this3 = this.out;
				var src3 = haxe_io_Bytes.ofString(k);
				var b13 = _this3.b;
				var b23 = src3.b;
				var _g13 = 0;
				var _g3 = src3.length;
				while(_g13 < _g3) {
					var i3 = _g13++;
					_this3.b.push(b23[i3]);
				}
				this.serializeData(d3,__map_reserved[k] != null?m.getReserved(k):m.h[k]);
			}
			this.out.b.push(255);
			break;
		case 10:
			var d4 = d[2];
			var m4 = v;
			var tmp4 = m4.keys();
			while(tmp4.hasNext()) {
				var k4 = tmp4.next();
				this.serializeInt(k4);
				this.serializeData(d4,m4.h[k4]);
			}
			this.out.b.push(255);
			break;
		case 12:
			var d5 = d[3];
			var s5 = d[2];
			var m5 = v;
			var tmp5 = m5.keys();
			while(tmp5.hasNext()) {
				var k5 = tmp5.next();
				this.serializeSchema(s5,k5);
				this.serializeData(d5,m5.get(k5));
			}
			this.out.b.push(255);
			break;
		case 9:
			var fields = d[2];
			var _g5 = 0;
			while(_g5 < fields.length) {
				var f = fields[_g5];
				++_g5;
				this.serializeData(f.d,v[f.n]);
			}
			break;
		case 5:
			var str = haxe_Serializer.run(v);
			this.serializeInt(str.length);
			var _this5 = this.out;
			var src5 = haxe_io_Bytes.ofString(str);
			var b15 = _this5.b;
			var b25 = src5.b;
			var _g15 = 0;
			var _g6 = src5.length;
			while(_g15 < _g6) {
				var i6 = _g15++;
				_this5.b.push(b25[i6]);
			}
			break;
		case 4:
			var b = v;
			this.serializeInt(b.length);
			var _this6 = this.out;
			var b16 = _this6.b;
			var b26 = b.b;
			var _g16 = 0;
			var _g7 = b.length;
			while(_g16 < _g7) {
				var i7 = _g16++;
				_this6.b.push(b26[i7]);
			}
			break;
		}
	}
	,serializeSchema: function(s,v) {
		if(cdb_BinSerializer.VERSION_CHECK && s.tag != this.tag) {
			this.out.b.push(s.hash & 255);
			this.out.b.push(s.hash >> 8 & 255);
			this.out.b.push(s.hash >> 16 & 255);
			this.out.b.push(s.hash >>> 24);
			s.tag = this.tag;
		}
		var _g = s.kind;
		switch(_g[1]) {
		case 0:
			var constructs = _g[2];
			var id = v[1];
			this.out.b.push(id);
			var c = constructs[id];
			if(c == null) return;
			var p = v.slice(2);
			var _g2 = 0;
			var _g1 = c.length;
			while(_g2 < _g1) {
				var i = _g2++;
				this.serializeData(c[i],p[i]);
			}
			break;
		case 1:
			var fields = _g[2];
			var _g11 = 0;
			while(_g11 < fields.length) {
				var f = fields[_g11];
				++_g11;
				this.serializeData(f.d,v[f.n]);
			}
			break;
		case 2:
			var choices = _g[2];
			if(v == null) {
				this.out.b.push(255);
				cdb_BinSerializer.gadtTip = -1;
				return;
			}
			var t = cdb_BinSerializer.gadtTip;
			if(t == -1) throw new js__$Boot_HaxeError("Missing GADT Tip");
			cdb_BinSerializer.gadtTip = -1;
			this.out.b.push(t);
			this.serializeData(choices[t],v);
			break;
		}
	}
	,readByte: function() {
		return this.bytes.b[this.position++];
	}
	,readInt: function() {
		var b = this.bytes.b[this.position++];
		if(b < 64) return b;
		if(b < 128) return b & 63 | this.bytes.b[this.position++] << 6;
		if(b < 192) {
			var b21 = this.bytes.b[this.position++];
			var b31 = this.bytes.b[this.position++];
			return b & 63 | b21 << 6 | b31 << 14;
		}
		var b1 = this.bytes.b[this.position++];
		var b2 = this.bytes.b[this.position++];
		var b3 = this.bytes.b[this.position++];
		var b4 = this.bytes.b[this.position++];
		return b1 | b2 << 8 | b3 << 16 | b4 << 24;
	}
	,unserializeData: function(d) {
		switch(d[1]) {
		case 0:
			return this.readInt();
		case 1:
			if(this.bytes.b[this.position++] != 0) return true; else return false;
			break;
		case 6:
			var d1 = d[2];
			if(this.bytes.b[this.position++] == 0) return null;
			return this.unserializeData(d1);
		case 2:
			var len = this.readInt();
			var str = this.bytes.getString(this.position,len);
			this.position += len;
			return str;
		case 3:
			var f = this.bytes.getDouble(this.position);
			this.position += 8;
			return f;
		case 5:
			var len1 = this.readInt();
			var str1 = this.bytes.getString(this.position,len1);
			this.position += len1;
			return haxe_Unserializer.run(str1);
		case 4:
			var len2 = this.readInt();
			var b = this.bytes.sub(this.position,len2);
			this.position += len2;
			return b;
		case 7:
			var d2 = d[2];
			var len3 = this.readInt();
			var _g = [];
			var _g2 = 0;
			var _g1 = len3;
			while(_g2 < _g1) {
				var i = _g2++;
				_g.push(this.unserializeData(d2));
			}
			return _g;
		case 9:
			var fields = d[2];
			var o = { };
			var _g3 = 0;
			while(_g3 < fields.length) {
				var f3 = fields[_g3];
				++_g3;
				o[f3.n] = this.unserializeData(f3.d);
			}
			return o;
		case 8:
			var sid = d[2];
			return this.unserializeSchema(cdb_BinSerializer.schemas.h[sid]);
		case 10:
			var d3 = d[2];
			var m = new haxe_ds_IntMap();
			while(true) {
				var i3 = this.bytes.b[this.position++];
				if(i3 == 255) break;
				this.position--;
				var key = this.readInt();
				var value = this.unserializeData(d3);
				m.h[key] = value;
			}
			return m;
		case 11:
			var d4 = d[2];
			var m4 = new haxe_ds_StringMap();
			while(true) {
				var i4 = this.bytes.b[this.position++];
				if(i4 == 255) break;
				this.position--;
				var len4 = this.readInt();
				var key4 = this.bytes.getString(this.position,len4);
				this.position += len4;
				var value4 = this.unserializeData(d4);
				if(__map_reserved[key4] != null) m4.setReserved(key4,value4); else m4.h[key4] = value4;
			}
			return m4;
		case 12:
			var d5 = d[3];
			var s = d[2];
			var m5 = new haxe_ds_EnumValueMap();
			while(true) {
				var i5 = this.bytes.b[this.position++];
				if(i5 == 255) break;
				this.position--;
				var key5 = this.unserializeSchema(s);
				m5.set(key5,this.unserializeData(d5));
			}
			return m5;
		}
	}
	,unserializeSchema: function(s) {
		if(cdb_BinSerializer.VERSION_CHECK && s.tag != this.tag) {
			var h = this.bytes.b[this.position++];
			h |= this.bytes.b[this.position++] << 8;
			h |= this.bytes.b[this.position++] << 16;
			h |= this.bytes.b[this.position++] << 24;
			if(h != s.hash) throw new js__$Boot_HaxeError(new cdb_SchemaError(s));
			s.tag = this.tag;
		}
		var _g = s.kind;
		switch(_g[1]) {
		case 0:
			var constructs = _g[2];
			var id = this.bytes.b[this.position++];
			var c = constructs[id];
			if(c == null) return Type.createEnumIndex(s.enumValue,id);
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < c.length) {
				var d = c[_g2];
				++_g2;
				_g1.push(this.unserializeData(d));
			}
			var args = _g1;
			return Type.createEnumIndex(s.enumValue,id,args);
		case 2:
			var choices = _g[2];
			var c1 = choices[this.bytes.b[this.position++]];
			if(c1 == null) return null;
			return this.unserializeData(c1);
		case 1:
			var fields = _g[2];
			var o = { };
			var _g11 = 0;
			while(_g11 < fields.length) {
				var f = fields[_g11];
				++_g11;
				o[f.n] = this.unserializeData(f.d);
			}
			return o;
		}
	}
	,__class__: cdb_BinSerializer
};
var cdb_ColumnType = $hxClasses["cdb.ColumnType"] = { __ename__ : ["cdb","ColumnType"], __constructs__ : ["TId","TString","TBool","TInt","TFloat","TEnum","TRef","TImage","TList","TCustom","TFlags","TColor","TLayer","TFile","TTilePos","TTileLayer","TDynamic","TProperties"] };
cdb_ColumnType.TId = ["TId",0];
cdb_ColumnType.TId.toString = $estr;
cdb_ColumnType.TId.__enum__ = cdb_ColumnType;
cdb_ColumnType.TString = ["TString",1];
cdb_ColumnType.TString.toString = $estr;
cdb_ColumnType.TString.__enum__ = cdb_ColumnType;
cdb_ColumnType.TBool = ["TBool",2];
cdb_ColumnType.TBool.toString = $estr;
cdb_ColumnType.TBool.__enum__ = cdb_ColumnType;
cdb_ColumnType.TInt = ["TInt",3];
cdb_ColumnType.TInt.toString = $estr;
cdb_ColumnType.TInt.__enum__ = cdb_ColumnType;
cdb_ColumnType.TFloat = ["TFloat",4];
cdb_ColumnType.TFloat.toString = $estr;
cdb_ColumnType.TFloat.__enum__ = cdb_ColumnType;
cdb_ColumnType.TEnum = function(values) { var $x = ["TEnum",5,values]; $x.__enum__ = cdb_ColumnType; $x.toString = $estr; return $x; };
cdb_ColumnType.TRef = function(sheet) { var $x = ["TRef",6,sheet]; $x.__enum__ = cdb_ColumnType; $x.toString = $estr; return $x; };
cdb_ColumnType.TImage = ["TImage",7];
cdb_ColumnType.TImage.toString = $estr;
cdb_ColumnType.TImage.__enum__ = cdb_ColumnType;
cdb_ColumnType.TList = ["TList",8];
cdb_ColumnType.TList.toString = $estr;
cdb_ColumnType.TList.__enum__ = cdb_ColumnType;
cdb_ColumnType.TCustom = function(name) { var $x = ["TCustom",9,name]; $x.__enum__ = cdb_ColumnType; $x.toString = $estr; return $x; };
cdb_ColumnType.TFlags = function(values) { var $x = ["TFlags",10,values]; $x.__enum__ = cdb_ColumnType; $x.toString = $estr; return $x; };
cdb_ColumnType.TColor = ["TColor",11];
cdb_ColumnType.TColor.toString = $estr;
cdb_ColumnType.TColor.__enum__ = cdb_ColumnType;
cdb_ColumnType.TLayer = function(type) { var $x = ["TLayer",12,type]; $x.__enum__ = cdb_ColumnType; $x.toString = $estr; return $x; };
cdb_ColumnType.TFile = ["TFile",13];
cdb_ColumnType.TFile.toString = $estr;
cdb_ColumnType.TFile.__enum__ = cdb_ColumnType;
cdb_ColumnType.TTilePos = ["TTilePos",14];
cdb_ColumnType.TTilePos.toString = $estr;
cdb_ColumnType.TTilePos.__enum__ = cdb_ColumnType;
cdb_ColumnType.TTileLayer = ["TTileLayer",15];
cdb_ColumnType.TTileLayer.toString = $estr;
cdb_ColumnType.TTileLayer.__enum__ = cdb_ColumnType;
cdb_ColumnType.TDynamic = ["TDynamic",16];
cdb_ColumnType.TDynamic.toString = $estr;
cdb_ColumnType.TDynamic.__enum__ = cdb_ColumnType;
cdb_ColumnType.TProperties = ["TProperties",17];
cdb_ColumnType.TProperties.toString = $estr;
cdb_ColumnType.TProperties.__enum__ = cdb_ColumnType;
var cdb__$Data_TileMode_$Impl_$ = {};
$hxClasses["cdb._Data.TileMode_Impl_"] = cdb__$Data_TileMode_$Impl_$;
cdb__$Data_TileMode_$Impl_$.__name__ = ["cdb","_Data","TileMode_Impl_"];
cdb__$Data_TileMode_$Impl_$._new = function(s) {
	var this1 = s;
	return this1;
};
cdb__$Data_TileMode_$Impl_$.ofString = function(s) {
	return cdb__$Data_TileMode_$Impl_$._new(s);
};
cdb__$Data_TileMode_$Impl_$.toString = function(this1) {
	return this1;
};
var cdb_Lz4Reader = function() {
};
$hxClasses["cdb.Lz4Reader"] = cdb_Lz4Reader;
cdb_Lz4Reader.__name__ = ["cdb","Lz4Reader"];
cdb_Lz4Reader.uncompress = function(src,srcPos,srcLen,out,outPos) {
	var outSave = outPos;
	var srcEnd = srcPos + srcLen;
	if(srcLen == 0) return [srcPos,outPos,0];
	var outLen = out.length;
	while(true) {
		var start = srcPos;
		var tk = src.b[srcPos++];
		var litLen = tk >> 4;
		var matchLen = tk & 15;
		if(litLen == 15) {
			var b;
			while(true) {
				b = src.b[srcPos++];
				litLen += b;
				if(!(b == 255)) break;
			}
		}
		if(outPos + litLen > outLen) return [start,outPos,litLen + matchLen];
		switch(litLen) {
		case 0:
			break;
		case 1:
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			break;
		case 2:
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			break;
		case 3:
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			out.b[outPos] = src.b[srcPos++] & 255;
			++outPos;
			break;
		default:
			out.blit(outPos,src,srcPos,litLen);
			outPos += litLen;
			srcPos += litLen;
		}
		if(srcPos >= srcEnd) break;
		var offset = src.b[srcPos++];
		offset |= src.b[srcPos++] << 8;
		if(matchLen == 15) {
			var b1;
			while(true) {
				b1 = src.b[srcPos++];
				matchLen += b1;
				if(!(b1 == 255)) break;
			}
		}
		matchLen += 4;
		if(outPos + matchLen > outLen) return [start,outPos - litLen,litLen + matchLen];
		if(matchLen >= 64 && matchLen <= offset) {
			out.blit(outPos,out,outPos - offset,matchLen);
			outPos += matchLen;
		} else {
			var copyEnd = outPos + matchLen;
			while(outPos < copyEnd) {
				out.b[outPos] = out.b[outPos - offset] & 255;
				++outPos;
			}
		}
	}
	if(srcPos != srcEnd) throw new js__$Boot_HaxeError("Read too much data " + (srcPos - srcLen));
	return [srcPos,outPos,0];
};
cdb_Lz4Reader.decodeString = function(s) {
	if(s == "") return new haxe_io_Bytes(new ArrayBuffer(0));
	var k = haxe_crypto_Base64.decode(s);
	if(k.b[0] != 4 || k.b[1] != 34 || k.b[2] != 77 || k.b[3] != 24) return k;
	var tmp = new Uint8Array(k.length);
	var _g1 = 0;
	var _g = k.length;
	while(_g1 < _g) {
		var i = _g1++;
		tmp[i] = k.b[i];
	}
	var k1 = lz4.decompress(tmp);
	var b = new haxe_io_Bytes(new ArrayBuffer(k1.length));
	var _g11 = 0;
	var _g2 = k1.length;
	while(_g11 < _g2) {
		var i2 = _g11++;
		b.b[i2] = k1[i2] & 255;
	}
	return b;
};
cdb_Lz4Reader.encodeBytes = function(b,compress) {
	if(compress && b.length > 0) {
		var tmp = new Uint8Array(b.length);
		var _g1 = 0;
		var _g = b.length;
		while(_g1 < _g) {
			var i = _g1++;
			tmp[i] = b.b[i];
		}
		tmp = lz4.compress(tmp,65536);
		b = new haxe_io_Bytes(new ArrayBuffer(tmp.length));
		var _g11 = 0;
		var _g2 = tmp.length;
		while(_g11 < _g2) {
			var i2 = _g11++;
			b.b[i2] = tmp[i2] & 255;
		}
	}
	return haxe_crypto_Base64.encode(b);
};
cdb_Lz4Reader.prototype = {
	b: function() {
		return this.bytes.b[this.pos++];
	}
	,grow: function(out,pos,len) {
		var size = out.length;
		while(true) {
			size = size * 3 >> 1;
			if(!(size < pos + len)) break;
		}
		var out2 = new haxe_io_Bytes(new ArrayBuffer(size));
		out2.blit(0,out,0,pos);
		return out2;
	}
	,read: function(bytes) {
		this.bytes = bytes;
		this.pos = 0;
		if(this.bytes.b[this.pos++] != 4 || this.bytes.b[this.pos++] != 34 || this.bytes.b[this.pos++] != 77 || this.bytes.b[this.pos++] != 24) throw new js__$Boot_HaxeError("Invalid header");
		var flags = this.bytes.b[this.pos++];
		if(flags >> 6 != 1) throw new js__$Boot_HaxeError("Invalid version " + (flags >> 6));
		var blockChecksum = (flags & 16) != 0;
		var streamSize = (flags & 8) != 0;
		var streamChecksum = (flags & 4) != 0;
		if((flags & 2) != 0) throw new js__$Boot_HaxeError("assert");
		var presetDict = (flags & 1) != 0;
		var bd = this.bytes.b[this.pos++];
		if((bd & 128) != 0) throw new js__$Boot_HaxeError("assert");
		var maxBlockSize = [0,0,0,0,65536,262144,1048576,4194304][bd >> 4 & 7];
		if(maxBlockSize == 0) throw new js__$Boot_HaxeError("assert");
		if((bd & 15) != 0) throw new js__$Boot_HaxeError("assert");
		if(streamSize) this.pos += 8;
		if(presetDict) throw new js__$Boot_HaxeError("Preset dictionary not supported");
		var headerChk = this.bytes.b[this.pos++];
		var out = new haxe_io_Bytes(new ArrayBuffer(128));
		var outPos = 0;
		while(true) {
			var size = this.bytes.b[this.pos++] | this.bytes.b[this.pos++] << 8 | this.bytes.b[this.pos++] << 16 | this.bytes.b[this.pos++] << 24;
			if(size == 0) break;
			if((size & -16) == 407710288) {
				var dataSize = this.bytes.b[this.pos++] | this.bytes.b[this.pos++] << 8 | this.bytes.b[this.pos++] << 16 | this.bytes.b[this.pos++] << 24;
				this.pos += dataSize;
				continue;
			}
			if((size & -2147483648) != 0) {
				size &= 2147483647;
				if(outPos + out.length < size) out = this.grow(out,outPos,size);
				out.blit(outPos,bytes,this.pos,size);
				outPos += size;
				this.pos += size;
			} else {
				var srcEnd = this.pos + size;
				while(this.pos < srcEnd) {
					var r = cdb_Lz4Reader.uncompress(bytes,this.pos,srcEnd - this.pos,out,outPos);
					this.pos = r[0];
					outPos = r[1];
					var req = r[2];
					if(req > 0) out = this.grow(out,outPos,req);
				}
			}
			if(blockChecksum) this.pos += 4;
		}
		return out.sub(0,outPos);
	}
	,__class__: cdb_Lz4Reader
};
var cdb_Parser = function() { };
$hxClasses["cdb.Parser"] = cdb_Parser;
cdb_Parser.__name__ = ["cdb","Parser"];
cdb_Parser.saveType = function(t) {
	switch(t[1]) {
	case 6:case 9:case 12:
		return t[1] + ":" + Std.string(t.slice(2)[0]);
	case 5:
		var values = t[2];
		return t[1] + ":" + values.join(",");
	case 10:
		var values1 = t[2];
		return t[1] + ":" + values1.join(",");
	case 0:case 1:case 8:case 3:case 7:case 4:case 2:case 11:case 13:case 14:case 15:case 16:case 17:
		return Std.string(t[1]);
	}
};
cdb_Parser.getType = function(str) {
	var _g = Std.parseInt(str);
	if(_g != null) switch(_g) {
	case 0:
		return cdb_ColumnType.TId;
	case 1:
		return cdb_ColumnType.TString;
	case 2:
		return cdb_ColumnType.TBool;
	case 3:
		return cdb_ColumnType.TInt;
	case 4:
		return cdb_ColumnType.TFloat;
	case 5:
		return cdb_ColumnType.TEnum(HxOverrides.substr(str,str.indexOf(":") + 1,null).split(","));
	case 6:
		return cdb_ColumnType.TRef(HxOverrides.substr(str,str.indexOf(":") + 1,null));
	case 7:
		return cdb_ColumnType.TImage;
	case 8:
		return cdb_ColumnType.TList;
	case 9:
		return cdb_ColumnType.TCustom(HxOverrides.substr(str,str.indexOf(":") + 1,null));
	case 10:
		return cdb_ColumnType.TFlags(HxOverrides.substr(str,str.indexOf(":") + 1,null).split(","));
	case 11:
		return cdb_ColumnType.TColor;
	case 12:
		return cdb_ColumnType.TLayer(HxOverrides.substr(str,str.indexOf(":") + 1,null));
	case 13:
		return cdb_ColumnType.TFile;
	case 14:
		return cdb_ColumnType.TTilePos;
	case 15:
		return cdb_ColumnType.TTileLayer;
	case 16:
		return cdb_ColumnType.TDynamic;
	case 17:
		return cdb_ColumnType.TProperties;
	default:
		throw new js__$Boot_HaxeError("Unknown type " + str);
	} else throw new js__$Boot_HaxeError("Unknown type " + str);
};
cdb_Parser.parse = function(content) {
	if(content == null) throw new js__$Boot_HaxeError("CDB content is null");
	var data = JSON.parse(content);
	var _g = 0;
	var _g1 = data.sheets;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = s.columns;
		while(_g2 < _g3.length) {
			var c = _g3[_g2];
			++_g2;
			c.type = cdb_Parser.getType(c.typeStr);
			c.typeStr = null;
		}
	}
	var _g4 = 0;
	var _g14 = data.customTypes;
	while(_g4 < _g14.length) {
		var t = _g14[_g4];
		++_g4;
		var _g24 = 0;
		var _g34 = t.cases;
		while(_g24 < _g34.length) {
			var c4 = _g34[_g24];
			++_g24;
			var _g44 = 0;
			var _g5 = c4.args;
			while(_g44 < _g5.length) {
				var a = _g5[_g44];
				++_g44;
				a.type = cdb_Parser.getType(a.typeStr);
				a.typeStr = null;
			}
		}
	}
	return data;
};
cdb_Parser.save = function(data) {
	var save = [];
	var _g = 0;
	var _g1 = data.sheets;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = s.columns;
		while(_g2 < _g3.length) {
			var c = _g3[_g2];
			++_g2;
			save.push(c.type);
			if(c.typeStr == null) c.typeStr = cdb_Parser.saveType(c.type);
			Reflect.deleteField(c,"type");
		}
	}
	var _g4 = 0;
	var _g14 = data.customTypes;
	while(_g4 < _g14.length) {
		var t = _g14[_g4];
		++_g4;
		var _g24 = 0;
		var _g34 = t.cases;
		while(_g24 < _g34.length) {
			var c4 = _g34[_g24];
			++_g24;
			var _g44 = 0;
			var _g5 = c4.args;
			while(_g44 < _g5.length) {
				var a = _g5[_g44];
				++_g44;
				save.push(a.type);
				if(a.typeStr == null) a.typeStr = cdb_Parser.saveType(a.type);
				Reflect.deleteField(a,"type");
			}
		}
	}
	var str = JSON.stringify(data,null,"\t");
	var _g6 = 0;
	var _g16 = data.sheets;
	while(_g6 < _g16.length) {
		var s6 = _g16[_g6];
		++_g6;
		var _g26 = 0;
		var _g36 = s6.columns;
		while(_g26 < _g36.length) {
			var c6 = _g36[_g26];
			++_g26;
			c6.type = save.shift();
		}
	}
	var _g7 = 0;
	var _g17 = data.customTypes;
	while(_g7 < _g17.length) {
		var t7 = _g17[_g7];
		++_g7;
		var _g27 = 0;
		var _g37 = t7.cases;
		while(_g27 < _g37.length) {
			var c7 = _g37[_g27];
			++_g27;
			var _g47 = 0;
			var _g57 = c7.args;
			while(_g47 < _g57.length) {
				var a7 = _g57[_g47];
				++_g47;
				a7.type = save.shift();
			}
		}
	}
	return str;
};
var cdb_TileBuilder = function(t,stride,total) {
	this.borders = [];
	this.groundIds = new haxe_ds_StringMap();
	this.groundMap = [];
	var _g1 = 0;
	var _g = total + 1;
	while(_g1 < _g) {
		var i = _g1++;
		this.groundMap[i] = 0;
	}
	this.groundMap[0] = 0;
	this.borders = [];
	var tmp = new haxe_ds_StringMap();
	var _g2 = 0;
	var _g12 = t.sets;
	while(_g2 < _g12.length) {
		var s = _g12[_g2];
		++_g2;
		var _g22 = s.t;
		switch(_g22) {
		case "ground":
			if(s.opts.name != "" && s.opts.name != null) {
				var tmp2;
				var key = s.opts.name;
				if(__map_reserved[key] != null) tmp2 = tmp.getReserved(key); else tmp2 = tmp.h[key];
				var g = tmp2;
				if(g == null) {
					g = [];
					var key2 = s.opts.name;
					if(__map_reserved[key2] != null) tmp.setReserved(key2,g); else tmp.h[key2] = g;
				}
				g.push(s);
			}
			break;
		default:
		}
	}
	var allGrounds = Lambda.array(tmp);
	allGrounds.sort(function(g1,g2) {
		var tmp3;
		var v = g1[0].opts.priority;
		if(v == null) tmp3 = 0; else tmp3 = v;
		var tmp4;
		var v4 = g2[0].opts.priority;
		if(v4 == null) tmp4 = 0; else tmp4 = v4;
		var dp = tmp3 - tmp4;
		if(dp != 0) return dp; else return Reflect.compare(g1[0].opts.name,g2[0].opts.name);
	});
	var gid = 0;
	var _g4 = 0;
	while(_g4 < allGrounds.length) {
		var g4 = allGrounds[_g4];
		++_g4;
		var p;
		var v5 = g4[0].opts.priority;
		if(v5 == null) p = 0; else p = v5;
		if(p > 0) ++gid;
		var fill = [];
		var _g15 = 0;
		while(_g15 < g4.length) {
			var s5 = g4[_g15];
			++_g15;
			var _g3 = 0;
			var _g25 = s5.w;
			while(_g3 < _g25) {
				var dx = _g3++;
				var _g5 = 0;
				var _g45 = s5.h;
				while(_g5 < _g45) {
					var dy = _g5++;
					var tid = s5.x + dx + (s5.y + dy) * stride;
					fill.push(tid);
					this.groundMap[tid + 1] = gid;
				}
			}
		}
		var _this = this.groundIds;
		var key5 = g4[0].opts.name;
		var value = { id : gid, fill : fill};
		if(__map_reserved[key5] != null) _this.setReserved(key5,value); else _this.h[key5] = value;
	}
	var maxGid = gid + 1;
	var allBorders = [];
	var _g6 = 0;
	var _g16 = t.sets;
	while(_g6 < _g16.length) {
		var s6 = _g16[_g6];
		++_g6;
		if(s6.t == "border") allBorders.push(s6);
	}
	allBorders.sort(function(b1,b2) {
		var k = 0;
		if(b1.opts.borderIn != null) ++k;
		if(b1.opts.borderOut != null) k += 2;
		if(b1.opts.borderMode != null) k += 4;
		if(b1.opts.borderIn != null && b1.opts.borderOut != null && b1.opts.borderIn != "lower" && b1.opts.borderOut != "upper") k += 8;
		var tmp6 = k;
		var k6 = 0;
		if(b2.opts.borderIn != null) ++k6;
		if(b2.opts.borderOut != null) k6 += 2;
		if(b2.opts.borderMode != null) k6 += 4;
		if(b2.opts.borderIn != null && b2.opts.borderOut != null && b2.opts.borderIn != "lower" && b2.opts.borderOut != "upper") k6 += 8;
		return tmp6 - k6;
	});
	var _g7 = 0;
	while(_g7 < allBorders.length) {
		var b = allBorders[_g7];
		++_g7;
		var tmp7;
		var _this7 = this.groundIds;
		var key7 = b.opts.borderIn;
		if(__map_reserved[key7] != null) tmp7 = _this7.getReserved(key7); else tmp7 = _this7.h[key7];
		var gid7 = tmp7;
		var tmp8;
		var _this8 = this.groundIds;
		var key8 = b.opts.borderOut;
		if(__map_reserved[key8] != null) tmp8 = _this8.getReserved(key8); else tmp8 = _this8.h[key8];
		var tid8 = tmp8;
		if(gid7 == null && tid8 == null) continue;
		var gids;
		var tids;
		if(gid7 != null) gids = [gid7.id]; else {
			var _g18 = b.opts.borderIn;
			if(_g18 == null) {
				var _g28 = [];
				var _g48 = tid8.id + 1;
				var _g38 = maxGid;
				while(_g48 < _g38) {
					var g8 = _g48++;
					_g28.push(g8);
				}
				gids = _g28;
			} else switch(_g18) {
			case "lower":
				var _g29 = [];
				var _g49 = 0;
				var _g39 = tid8.id;
				while(_g49 < _g39) {
					var g9 = _g49++;
					_g29.push(g9);
				}
				gids = _g29;
				break;
			default:
				continue;
			}
		}
		if(tid8 != null) tids = [tid8.id]; else {
			var _g19 = b.opts.borderOut;
			if(_g19 == null) {
				var _g210 = [];
				var _g410 = 0;
				var _g310 = gid7.id;
				while(_g410 < _g310) {
					var g10 = _g410++;
					_g210.push(g10);
				}
				tids = _g210;
			} else switch(_g19) {
			case "upper":
				var _g211 = [];
				var _g411 = gid7.id + 1;
				var _g311 = maxGid;
				while(_g411 < _g311) {
					var g11 = _g411++;
					_g211.push(g11);
				}
				tids = _g211;
				break;
			default:
				continue;
			}
		}
		var clear = gid7 != null && tid8 != null && b.opts.borderMode == null;
		var _g111 = b.opts.borderMode;
		if(_g111 != null) switch(_g111) {
		case "corner":
			var tmp11 = gids;
			gids = tids;
			tids = tmp11;
			break;
		default:
		}
		var _g112 = 0;
		while(_g112 < gids.length) {
			var g12 = gids[_g112];
			++_g112;
			var _g212 = 0;
			while(_g212 < tids.length) {
				var t12 = tids[_g212];
				++_g212;
				var bt = this.borders[g12 + t12 * 256];
				if(bt == null || clear) {
					var _g312 = [];
					var _g412 = 0;
					while(_g412 < 20) {
						var i12 = _g412++;
						_g312.push([]);
					}
					bt = _g312;
					if(gid7 != null) bt[8] = gid7.fill;
					this.borders[g12 + t12 * 256] = bt;
				}
				var _g413 = 0;
				var _g313 = b.w;
				while(_g413 < _g313) {
					var dx13 = _g413++;
					var _g613 = 0;
					var _g513 = b.h;
					while(_g613 < _g513) {
						var dy13 = _g613++;
						var k13;
						var _g713 = b.opts.borderMode;
						if(_g713 == null) {
							if(dy13 == 0) {
								if(dx13 == 0) k13 = 0; else if(dx13 == b.w - 1) k13 = 2; else k13 = 1;
							} else if(dy13 == b.h - 1) {
								if(dx13 == 0) k13 = 5; else if(dx13 == b.w - 1) k13 = 7; else k13 = 6;
							} else if(dx13 == 0) k13 = 3; else if(dx13 == b.w - 1) k13 = 4; else continue;
						} else switch(_g713) {
						case "corner":
							if(dx13 == 0 && dy13 == 0) k13 = 9; else if(dx13 == b.w - 1 && dy13 == 0) k13 = 10; else if(dx13 == 0 && dy13 == b.h - 1) k13 = 11; else if(dx13 == b.w - 1 && dy13 == b.h - 1) k13 = 12; else continue;
							break;
						case "u":
							if(dx13 == 1 && dy13 == 0) k13 = 13; else if(dx13 == 0 && dy13 == 1) k13 = 14; else if(dx13 == 2 && dy13 == 1) k13 = 15; else if(dx13 == 1 && dy13 == 2) k13 = 16; else continue;
							break;
						case "bottom":
							if(dx13 == 0) k13 = 17; else if(dx13 == b.w - 1) k13 = 19; else k13 = 18;
							break;
						default:
							continue;
						}
						bt[k13].push(b.x + dx13 + (b.y + dy13) * stride);
					}
				}
			}
		}
	}
};
$hxClasses["cdb.TileBuilder"] = cdb_TileBuilder;
cdb_TileBuilder.__name__ = ["cdb","TileBuilder"];
cdb_TileBuilder.prototype = {
	random: function(n) {
		n *= -862048943;
		n = n << 15 | n >>> 17;
		n *= 461845907;
		var h = 5381;
		h ^= n;
		h = h << 13 | h >>> 19;
		h = h * 5 + -430675100;
		h ^= h >> 16;
		h *= -2048144789;
		h ^= h >> 13;
		h *= -1028477387;
		h ^= h >> 16;
		return h;
	}
	,buildGrounds: function(input,width) {
		var _g6 = this;
		var height = input.length / width | 0;
		var p = -1;
		var out = [];
		var _g1 = 0;
		var _g = height;
		while(_g1 < _g) {
			var y = _g1++;
			var _g3 = 0;
			var _g2 = width;
			while(_g3 < _g2) {
				var x = _g3++;
				var v = input[++p];
				var g = this.groundMap[v];
				var gl = x == 0?g:this.groundMap[input[p - 1]];
				var gr = x == width - 1?g:this.groundMap[input[p + 1]];
				var gt = y == 0?g:this.groundMap[input[p - width]];
				var gb = y == height - 1?g:this.groundMap[input[p + width]];
				var gtl = x == 0 || y == 0?g:this.groundMap[input[p - 1 - width]];
				var gtr = x == width - 1 || y == 0?g:this.groundMap[input[p + 1 - width]];
				var gbl = x == 0 || y == height - 1?g:this.groundMap[input[p - 1 + width]];
				var gbr = x == width - 1 || y == height - 1?g:this.groundMap[input[p + 1 + width]];
				var max;
				var a;
				var a1 = gr > gl?gr:gl;
				var b = gt > gb?gt:gb;
				if(a1 > b) a = a1; else a = b;
				var b1;
				var a2 = gtr > gtl?gtr:gtl;
				var b2 = gbr > gbl?gbr:gbl;
				if(a2 > b2) b1 = a2; else b1 = b2;
				if(a > b1) max = a; else max = b1;
				var min;
				var a3;
				var a4 = gr > gl?gl:gr;
				var b4 = gt > gb?gb:gt;
				if(a4 > b4) a3 = b4; else a3 = a4;
				var b5;
				var a5 = gtr > gtl?gtl:gtr;
				var b6 = gbr > gbl?gbl:gbr;
				if(a5 > b6) b5 = b6; else b5 = a5;
				if(a3 > b5) min = b5; else min = a3;
				var _g5 = min;
				var _g4 = max + 1;
				while(_g5 < _g4) {
					var t = _g5++;
					var bb = this.borders[t + g * 256];
					if(bb == null) continue;
					var bits = 0;
					if(t == gtl) bits |= 1;
					if(t == gt) bits |= 2;
					if(t == gtr) bits |= 4;
					if(t == gl) bits |= 8;
					if(t == gr) bits |= 16;
					if(t == gbl) bits |= 32;
					if(t == gb) bits |= 64;
					if(t == gbr) bits |= 128;
					var f8 = false;
					if((bits & 26) == 26) {
						var a8 = bb[13];
						if(a8.length != 0) {
							bits &= -32;
							out.push(x);
							out.push(y);
							out.push(a8.length == 1?a8[0]:a8[_g6.random(x + y * width) % a8.length]);
							f8 = true;
						}
					}
					var f9 = false;
					if((bits & 74) == 74) {
						var a9 = bb[14];
						if(a9.length != 0) {
							bits &= -108;
							out.push(x);
							out.push(y);
							out.push(a9.length == 1?a9[0]:a9[_g6.random(x + y * width) % a9.length]);
							f9 = true;
						}
					}
					var f10 = false;
					if((bits & 82) == 82) {
						var a10 = bb[15];
						if(a10.length != 0) {
							bits &= -215;
							out.push(x);
							out.push(y);
							out.push(a10.length == 1?a10[0]:a10[_g6.random(x + y * width) % a10.length]);
							f10 = true;
						}
					}
					var f11 = false;
					if((bits & 88) == 88) {
						var a11 = bb[16];
						if(a11.length != 0) {
							bits &= -249;
							out.push(x);
							out.push(y);
							out.push(a11.length == 1?a11[0]:a11[_g6.random(x + y * width) % a11.length]);
							f11 = true;
						}
					}
					var f12 = false;
					if((bits & 10) == 10) {
						var a12 = bb[9];
						if(a12.length != 0) {
							bits &= -48;
							out.push(x);
							out.push(y);
							out.push(a12.length == 1?a12[0]:a12[_g6.random(x + y * width) % a12.length]);
							f12 = true;
						}
					}
					var f13 = false;
					if((bits & 18) == 18) {
						var a13 = bb[10];
						if(a13.length != 0) {
							bits &= -152;
							out.push(x);
							out.push(y);
							out.push(a13.length == 1?a13[0]:a13[_g6.random(x + y * width) % a13.length]);
							f13 = true;
						}
					}
					var f14 = false;
					if((bits & 72) == 72) {
						var a14 = bb[11];
						if(a14.length != 0) {
							bits &= -234;
							out.push(x);
							out.push(y);
							out.push(a14.length == 1?a14[0]:a14[_g6.random(x + y * width) % a14.length]);
							f14 = true;
						}
					}
					var f15 = false;
					if((bits & 80) == 80) {
						var a15 = bb[12];
						if(a15.length != 0) {
							bits &= -245;
							out.push(x);
							out.push(y);
							out.push(a15.length == 1?a15[0]:a15[_g6.random(x + y * width) % a15.length]);
							f15 = true;
						}
					}
					var f = false;
					if((bits & 2) == 2) {
						var a16 = bb[6];
						if(a16.length != 0) {
							bits &= -8;
							out.push(x);
							out.push(y);
							out.push(a16.length == 1?a16[0]:a16[_g6.random(x + y * width) % a16.length]);
							f = true;
						}
					}
					if(f) {
						var a17 = bb[18];
						if(a17.length != 0) {
							out.push(x);
							out.push(y + 1);
							if(x > 0 && y > 0 && this.groundMap[input[p - 1 - width]] != t) out.push(a17[0]); else if(x < width - 1 && y > 0 && this.groundMap[input[p + 1 - width]] != t) out.push(a17[a17.length - 1]); else if(a17.length == 1) out.push(a17[0]); else out.push(a17[1 + this.random(x + y * width) % (a17.length - 2)]);
						}
					}
					var f17 = false;
					if((bits & 8) == 8) {
						var a18 = bb[4];
						if(a18.length != 0) {
							bits &= -42;
							out.push(x);
							out.push(y);
							out.push(a18.length == 1?a18[0]:a18[_g6.random(x + y * width) % a18.length]);
							f17 = true;
						}
					}
					var f18 = false;
					if((bits & 16) == 16) {
						var a19 = bb[3];
						if(a19.length != 0) {
							bits &= -149;
							out.push(x);
							out.push(y);
							out.push(a19.length == 1?a19[0]:a19[_g6.random(x + y * width) % a19.length]);
							f18 = true;
						}
					}
					var f19 = false;
					if((bits & 64) == 64) {
						var a20 = bb[1];
						if(a20.length != 0) {
							bits &= -225;
							out.push(x);
							out.push(y);
							out.push(a20.length == 1?a20[0]:a20[_g6.random(x + y * width) % a20.length]);
							f19 = true;
						}
					}
					var f6 = false;
					if((bits & 1) == 1) {
						var a21 = bb[7];
						if(a21.length != 0) {
							bits &= -2;
							out.push(x);
							out.push(y);
							out.push(a21.length == 1?a21[0]:a21[_g6.random(x + y * width) % a21.length]);
							f6 = true;
						}
					}
					if(f6) {
						var a22 = bb[19];
						if(a22.length != 0) {
							var y22 = y + 1;
							out.push(x);
							out.push(y22);
							out.push(a22.length == 1?a22[0]:a22[_g6.random(x + y22 * width) % a22.length]);
						}
					}
					var f7 = false;
					if((bits & 4) == 4) {
						var a23 = bb[5];
						if(a23.length != 0) {
							bits &= -5;
							out.push(x);
							out.push(y);
							out.push(a23.length == 1?a23[0]:a23[_g6.random(x + y * width) % a23.length]);
							f7 = true;
						}
					}
					if(f7) {
						var a24 = bb[17];
						if(a24.length != 0) {
							var y24 = y + 1;
							out.push(x);
							out.push(y24);
							out.push(a24.length == 1?a24[0]:a24[_g6.random(x + y24 * width) % a24.length]);
						}
					}
					var f24 = false;
					if((bits & 32) == 32) {
						var a25 = bb[2];
						if(a25.length != 0) {
							bits &= -33;
							out.push(x);
							out.push(y);
							out.push(a25.length == 1?a25[0]:a25[_g6.random(x + y * width) % a25.length]);
							f24 = true;
						}
					}
					var f25 = false;
					if((bits & 128) == 128) {
						var a26 = bb[0];
						if(a26.length != 0) {
							bits &= -129;
							out.push(x);
							out.push(y);
							out.push(a26.length == 1?a26[0]:a26[_g6.random(x + y * width) % a26.length]);
							f25 = true;
						}
					}
				}
			}
		}
		return out;
	}
	,__class__: cdb_TileBuilder
};
var cdb__$Types_ArrayIterator = function(a) {
	this.a = a;
	this.pos = 0;
};
$hxClasses["cdb._Types.ArrayIterator"] = cdb__$Types_ArrayIterator;
cdb__$Types_ArrayIterator.__name__ = ["cdb","_Types","ArrayIterator"];
cdb__$Types_ArrayIterator.prototype = {
	hasNext: function() {
		return this.pos < this.a.length;
	}
	,next: function() {
		return this.a[this.pos++];
	}
	,__class__: cdb__$Types_ArrayIterator
};
var cdb__$Types_FlagsIterator = function(flags) {
	this.flags = flags;
	this.k = 0;
};
$hxClasses["cdb._Types.FlagsIterator"] = cdb__$Types_FlagsIterator;
cdb__$Types_FlagsIterator.__name__ = ["cdb","_Types","FlagsIterator"];
cdb__$Types_FlagsIterator.prototype = {
	hasNext: function() {
		return this.flags >= 1 << this.k;
	}
	,next: function() {
		while((this.flags & 1 << this.k) == 0) this.k++;
		return this.k++;
	}
	,__class__: cdb__$Types_FlagsIterator
};
var cdb__$Types_ArrayRead_$Impl_$ = {};
$hxClasses["cdb._Types.ArrayRead_Impl_"] = cdb__$Types_ArrayRead_$Impl_$;
cdb__$Types_ArrayRead_$Impl_$.__name__ = ["cdb","_Types","ArrayRead_Impl_"];
cdb__$Types_ArrayRead_$Impl_$._new = function(a) {
	var this1 = a;
	return this1;
};
cdb__$Types_ArrayRead_$Impl_$.get_length = function(this1) {
	return this1.length;
};
cdb__$Types_ArrayRead_$Impl_$.iterator = function(this1) {
	return new cdb__$Types_ArrayIterator(this1);
};
cdb__$Types_ArrayRead_$Impl_$.castArray = function(this1) {
	return this1;
};
cdb__$Types_ArrayRead_$Impl_$.toArrayCopy = function(this1) {
	return this1.slice();
};
cdb__$Types_ArrayRead_$Impl_$.getIndex = function(this1,v) {
	return this1[v];
};
var cdb__$Types_Flags_$Impl_$ = {};
$hxClasses["cdb._Types.Flags_Impl_"] = cdb__$Types_Flags_$Impl_$;
cdb__$Types_Flags_$Impl_$.__name__ = ["cdb","_Types","Flags_Impl_"];
cdb__$Types_Flags_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
cdb__$Types_Flags_$Impl_$.has = function(this1,t) {
	return (this1 & 1 << t) != 0;
};
cdb__$Types_Flags_$Impl_$.set = function(this1,t) {
	this1 |= 1 << t;
};
cdb__$Types_Flags_$Impl_$.unset = function(this1,t) {
	this1 &= ~(1 << t);
};
cdb__$Types_Flags_$Impl_$.iterator = function(this1) {
	var this2 = this1;
	return new cdb__$Types_FlagsIterator(this2);
};
cdb__$Types_Flags_$Impl_$.toInt = function(this1) {
	return this1;
};
var cdb__$Types_Layer_$Impl_$ = {};
$hxClasses["cdb._Types.Layer_Impl_"] = cdb__$Types_Layer_$Impl_$;
cdb__$Types_Layer_$Impl_$.__name__ = ["cdb","_Types","Layer_Impl_"];
cdb__$Types_Layer_$Impl_$._new = function(x) {
	var this1 = x;
	return this1;
};
cdb__$Types_Layer_$Impl_$.decode = function(this1,all) {
	var k = cdb_Lz4Reader.decodeString(this1);
	var _g = [];
	var _g2 = 0;
	var _g1 = k.length;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(all[k.b[i]]);
	}
	return _g;
};
cdb__$Types_Layer_$Impl_$.encode = function(a,compress) {
	var b = new haxe_io_Bytes(new ArrayBuffer(a.length));
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		b.b[i] = a[i] & 255;
	}
	var this1 = cdb_Lz4Reader.encodeBytes(b,compress);
	return this1;
};
var cdb__$Types_TileLayerData_$Impl_$ = {};
$hxClasses["cdb._Types.TileLayerData_Impl_"] = cdb__$Types_TileLayerData_$Impl_$;
cdb__$Types_TileLayerData_$Impl_$.__name__ = ["cdb","_Types","TileLayerData_Impl_"];
cdb__$Types_TileLayerData_$Impl_$._new = function(v) {
	var this1 = v;
	return this1;
};
cdb__$Types_TileLayerData_$Impl_$.decode = function(this1) {
	var k = cdb_Lz4Reader.decodeString(this1);
	var _g = [];
	var _g2 = 0;
	var _g1 = k.length >> 1;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(k.b[i << 1] | k.b[(i << 1) + 1] << 8);
	}
	return _g;
};
cdb__$Types_TileLayerData_$Impl_$.encode = function(a,compress) {
	var b = new haxe_io_Bytes(new ArrayBuffer(a.length * 2));
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		var v = a[i];
		b.b[i << 1] = v & 255 & 255;
		b.b[(i << 1) + 1] = v >> 8 & 255 & 255;
	}
	return cdb__$Types_TileLayerData_$Impl_$._new(cdb_Lz4Reader.encodeBytes(b,compress));
};
var cdb__$Types_LevelPropsAccess_$Impl_$ = {};
$hxClasses["cdb._Types.LevelPropsAccess_Impl_"] = cdb__$Types_LevelPropsAccess_$Impl_$;
cdb__$Types_LevelPropsAccess_$Impl_$.__name__ = ["cdb","_Types","LevelPropsAccess_Impl_"];
cdb__$Types_LevelPropsAccess_$Impl_$.get_tileSize = function(this1) {
	return this1.tileSize;
};
cdb__$Types_LevelPropsAccess_$Impl_$.getTileset = function(this1,i,name) {
	return Reflect.field(i.sheet.props.level.tileSets,name);
};
cdb__$Types_LevelPropsAccess_$Impl_$.getLayer = function(this1,name) {
	if(this1 == null || this1.layers == null) return null;
	var _g = 0;
	var _g1 = this1.layers;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(l.l == name) return l.p;
	}
	return null;
};
var cdb_Index = function(data,name) {
	this.name = name;
	var _g = 0;
	var _g1 = data.sheets;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		if(s.name == name) {
			this.all = s.lines;
			this.sheet = s;
			break;
		}
	}
	if(this.sheet == null) throw new js__$Boot_HaxeError("'" + name + "' not found in CDB data");
};
$hxClasses["cdb.Index"] = cdb_Index;
cdb_Index.__name__ = ["cdb","Index"];
cdb_Index.prototype = {
	__class__: cdb_Index
};
var cdb_IndexId = function(data,name) {
	cdb_Index.call(this,data,name);
	this.byId = new haxe_ds_StringMap();
	this.byIndex = [];
	var _g = 0;
	var _g1 = this.sheet.columns;
	try {
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var _g2 = c.type;
			switch(_g2[1]) {
			case 0:
				var cname = c.name;
				var _g3 = 0;
				var _g4 = this.sheet.lines;
				while(_g3 < _g4.length) {
					var a = _g4[_g3];
					++_g3;
					var id = Reflect.field(a,cname);
					if(id != null && id != "") {
						var _this = this.byId;
						var value = a;
						if(__map_reserved[id] != null) _this.setReserved(id,value); else _this.h[id] = value;
						this.byIndex.push(a);
					}
				}
				throw "__break__";
				break;
			default:
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
};
$hxClasses["cdb.IndexId"] = cdb_IndexId;
cdb_IndexId.__name__ = ["cdb","IndexId"];
cdb_IndexId.__super__ = cdb_Index;
cdb_IndexId.prototype = $extend(cdb_Index.prototype,{
	get: function(k) {
		var tmp;
		var _this = this.byId;
		var key = k;
		if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
		return tmp;
	}
	,resolve: function(id,opt) {
		if(id == null) return null;
		var tmp;
		var _this = this.byId;
		if(__map_reserved[id] != null) tmp = _this.getReserved(id); else tmp = _this.h[id];
		var v = tmp;
		if(v == null && !opt) throw new js__$Boot_HaxeError("Missing " + this.name + "." + id); else return v;
	}
	,__class__: cdb_IndexId
});
var cdb_jq_Message = $hxClasses["cdb.jq.Message"] = { __ename__ : ["cdb","jq","Message"], __constructs__ : ["Create","AddClass","RemoveClass","Append","InsertAt","CreateText","Reset","Dock","Remove","Event","SetAttr","SetStyle","Trigger","Special","Anim","Dispose","Unbind"] };
cdb_jq_Message.Create = function(id,name,attr) { var $x = ["Create",0,id,name,attr]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.AddClass = function(id,name) { var $x = ["AddClass",1,id,name]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.RemoveClass = function(id,name) { var $x = ["RemoveClass",2,id,name]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Append = function(id,to) { var $x = ["Append",3,id,to]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.InsertAt = function(id,to,pos) { var $x = ["InsertAt",4,id,to,pos]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.CreateText = function(id,text,pid) { var $x = ["CreateText",5,id,text,pid]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Reset = function(id) { var $x = ["Reset",6,id]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Dock = function(pid,id,dir,size) { var $x = ["Dock",7,pid,id,dir,size]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Remove = function(id) { var $x = ["Remove",8,id]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Event = function(id,name,eid) { var $x = ["Event",9,id,name,eid]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.SetAttr = function(id,att,val) { var $x = ["SetAttr",10,id,att,val]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.SetStyle = function(id,st,val) { var $x = ["SetStyle",11,id,st,val]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Trigger = function(id,name) { var $x = ["Trigger",12,id,name]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Special = function(id,name,args,eid) { var $x = ["Special",13,id,name,args,eid]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Anim = function(id,name,dur) { var $x = ["Anim",14,id,name,dur]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Dispose = function(id,events) { var $x = ["Dispose",15,id,events]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
cdb_jq_Message.Unbind = function(events) { var $x = ["Unbind",16,events]; $x.__enum__ = cdb_jq_Message; $x.toString = $estr; return $x; };
var cdb_jq_Answer = $hxClasses["cdb.jq.Answer"] = { __ename__ : ["cdb","jq","Answer"], __constructs__ : ["Event","SetValue","Done"] };
cdb_jq_Answer.Event = function(eid,props) { var $x = ["Event",0,eid,props]; $x.__enum__ = cdb_jq_Answer; $x.toString = $estr; return $x; };
cdb_jq_Answer.SetValue = function(id,value) { var $x = ["SetValue",1,id,value]; $x.__enum__ = cdb_jq_Answer; $x.toString = $estr; return $x; };
cdb_jq_Answer.Done = function(eid) { var $x = ["Done",2,eid]; $x.__enum__ = cdb_jq_Answer; $x.toString = $estr; return $x; };
var cdb_jq_DockDirection = $hxClasses["cdb.jq.DockDirection"] = { __ename__ : ["cdb","jq","DockDirection"], __constructs__ : ["Left","Right","Up","Down","Fill"] };
cdb_jq_DockDirection.Left = ["Left",0];
cdb_jq_DockDirection.Left.toString = $estr;
cdb_jq_DockDirection.Left.__enum__ = cdb_jq_DockDirection;
cdb_jq_DockDirection.Right = ["Right",1];
cdb_jq_DockDirection.Right.toString = $estr;
cdb_jq_DockDirection.Right.__enum__ = cdb_jq_DockDirection;
cdb_jq_DockDirection.Up = ["Up",2];
cdb_jq_DockDirection.Up.toString = $estr;
cdb_jq_DockDirection.Up.__enum__ = cdb_jq_DockDirection;
cdb_jq_DockDirection.Down = ["Down",3];
cdb_jq_DockDirection.Down.toString = $estr;
cdb_jq_DockDirection.Down.__enum__ = cdb_jq_DockDirection;
cdb_jq_DockDirection.Fill = ["Fill",4];
cdb_jq_DockDirection.Fill.toString = $estr;
cdb_jq_DockDirection.Fill.__enum__ = cdb_jq_DockDirection;
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) return;
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		var x = HxOverrides.substr(this.buf,p1,this.pos - p1);
		return parseFloat(x);
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(typeof(k) != "string") throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o2 = Type.createEmptyInstance(cl);
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 119:
			var name2 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name2);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name3 = this.unserialize();
			var edecl3 = this.resolver.resolveEnum(name3);
			if(edecl3 == null) throw new js__$Boot_HaxeError("Enum not found " + name3);
			this.pos++;
			var index = this.readDigits();
			var tag = edecl3.__constructs__.slice()[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name3 + "@" + index);
			var e3 = this.unserializeEnum(edecl3,tag);
			this.cache.push(e3);
			return e3;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s4 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s4] != null) h.setReserved(s4,value); else h.h[s4] = value;
			}
			this.pos++;
			return h;
		case 113:
			var h4 = new haxe_ds_IntMap();
			this.cache.push(h4);
			var buf5 = this.buf;
			var c5 = this.buf.charCodeAt(this.pos++);
			while(c5 == 58) {
				var i = this.readDigits();
				var value5 = this.unserialize();
				h4.h[i] = value5;
				c5 = this.buf.charCodeAt(this.pos++);
			}
			if(c5 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h4;
		case 77:
			var h5 = new haxe_ds_ObjectMap();
			this.cache.push(h5);
			var buf6 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s6 = this.unserialize();
				h5.set(s6,this.unserialize());
			}
			this.pos++;
			return h5;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 115:
			var len6 = this.readDigits();
			var buf7 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len6) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i7 = this.pos;
			var rest = len6 & 3;
			var size = (len6 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i7 + (len6 - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i7 < max) {
				var c1 = codes[buf7.charCodeAt(i7++)];
				var c2 = codes[buf7.charCodeAt(i7++)];
				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf7.charCodeAt(i7++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf7.charCodeAt(i7++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c17 = codes[buf7.charCodeAt(i7++)];
				var c27 = codes[buf7.charCodeAt(i7++)];
				bytes.b[bpos++] = (c17 << 2 | c27 >> 4) & 255;
				if(rest == 3) {
					var c37 = codes[buf7.charCodeAt(i7++)];
					bytes.b[bpos++] = (c27 << 4 | c37 >> 2) & 255;
				}
			}
			this.pos += len6;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name7 = this.unserialize();
			var cl7 = this.resolver.resolveClass(name7);
			if(cl7 == null) throw new js__$Boot_HaxeError("Class not found " + name7);
			var o7 = Type.createEmptyInstance(cl7);
			this.cache.push(o7);
			o7.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o7;
		case 65:
			var name8 = this.unserialize();
			var cl8 = this.resolver.resolveClass(name8);
			if(cl8 == null) throw new js__$Boot_HaxeError("Class not found " + name8);
			return cl8;
		case 66:
			var name9 = this.unserialize();
			var e9 = this.resolver.resolveEnum(name9);
			if(e9 == null) throw new js__$Boot_HaxeError("Enum not found " + name9);
			return e9;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) return hb;
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		if(srcpos == 0 && len == src.length) this.b.set(src.b,pos); else this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		return this.data.getFloat64(pos,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g11 = 0;
		var _g2 = this.length;
		while(_g11 < _g2) {
			var i2 = _g11++;
			var c = this.b[i2];
			s_b += String.fromCharCode(chars[c >> 4]);
			s_b += String.fromCharCode(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) complement = true;
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		var _g = bytes.length % 3;
		switch(_g) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0?0:1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) out.b[pout++] = base.b[buf << nbits - curbits & mask] & 255;
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i2 = _g1++;
			tbl[this.base.b[i2]] = i2;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.make = function(b) {
	var h = new haxe_crypto_Md5().doEncode(haxe_crypto_Md5.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(16));
	var p = 0;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		out.b[p++] = h[i] & 255 & 255;
		out.b[p++] = h[i] >> 8 & 255 & 255;
		out.b[p++] = h[i] >> 16 & 255 & 255;
		out.b[p++] = h[i] >>> 24 & 255;
	}
	return out;
};
haxe_crypto_Md5.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g1 = 0;
	var _g = blksSize;
	while(_g1 < _g) {
		var i1 = _g1++;
		blks[i1] = 0;
	}
	var i = 0;
	while(i < b.length) {
		blks[i >> 2] |= b.b[i] << (((b.length << 3) + i & 3) << 3);
		++i;
	}
	blks[i >> 2] |= 128 << (b.length * 8 + i) % 4 * 8;
	var l = b.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) return node.value;
			if(c < 0) node = node.left; else node = node.right;
		}
		return null;
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) return new haxe_ds_TreeNode(null,k,v,null);
		var c = this.compare(k,node.key);
		if(c == 0) return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height); else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null?0:l._height;
		var hr = r == null?0:r._height;
		if(hl > hr + 2) {
			var tmp;
			var _this = l.left;
			if(_this == null) tmp = 0; else tmp = _this._height;
			var tmp1;
			var _this1 = l.right;
			if(_this1 == null) tmp1 = 0; else tmp1 = _this1._height;
			if(tmp >= tmp1) return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r)); else return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
		} else if(hr > hl + 2) {
			var tmp2;
			var _this2 = r.right;
			if(_this2 == null) tmp2 = 0; else tmp2 = _this2._height;
			var tmp3;
			var _this3 = r.left;
			if(_this3 == null) tmp3 = 0; else tmp3 = _this3._height;
			if(tmp2 > tmp3) return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right); else return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
		} else return new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) h = -1;
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var tmp1;
		var _this = this.left;
		if(_this == null) tmp1 = 0; else tmp1 = _this._height;
		var tmp2;
		var _this2 = this.right;
		if(_this2 == null) tmp2 = 0; else tmp2 = _this2._height;
		if(tmp1 > tmp2) {
			var _this3 = this.left;
			if(_this3 == null) tmp = 0; else tmp = _this3._height;
		} else {
			var _this4 = this.right;
			if(_this4 == null) tmp = 0; else tmp = _this4._height;
		}
		this._height = tmp + 1;
	} else this._height = h;
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) return d;
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) return 0;
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) return ld;
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) return d;
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) return this.compare(v1,v2); else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) return this.compareArgs(v1,v2); else return Reflect.compare(v1,v2);
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) return _this.getReserved(key); else return _this.h[key];
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) return null; else return this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	addInt32: function(v) {
		this.b.push(v & 255);
		this.b.push(v >> 8 & 255);
		this.b.push(v >> 16 & 255);
		this.b.push(v >>> 24);
	}
	,addInt64: function(v) {
		this.addInt32(v.low);
		this.addInt32(v.high);
	}
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else this.dir = null;
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = ["haxe","rtti","Meta"];
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) return { }; else return meta.obj;
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	return (val instanceof Error)?val:new js__$Boot_HaxeError(val);
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i2 = _g1++;
					if(i2 != 2) str2 += "," + js_Boot.__string_rec(o[i2],s); else str2 += js_Boot.__string_rec(o[i2],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g12 = 0;
			var _g2 = l;
			while(_g12 < _g2) {
				var i3 = _g12++;
				str1 += (i3 > 0?",":"") + js_Boot.__string_rec(o[i3],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_Lib = function() { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js","Lib"];
var js_Selection = function(doc) {
	this.doc = doc;
};
$hxClasses["js.Selection"] = js_Selection;
js_Selection.__name__ = ["js","Selection"];
js_Selection.prototype = {
	insert: function(left,text,right) {
		this.doc.focus();
		if(this.doc.selectionStart != null) {
			var top = this.doc.scrollTop;
			var start = this.doc.selectionStart;
			var end = this.doc.selectionEnd;
			this.doc.value = Std.string(this.doc.value.substr(0,start)) + left + text + right + Std.string(this.doc.value.substr(end));
			this.doc.selectionStart = start + left.length;
			this.doc.selectionEnd = start + left.length + text.length;
			this.doc.scrollTop = top;
			return;
		}
		var range = js_Lib.document.selection.createRange();
		range.text = left + text + right;
		range.moveStart("character",-text.length - right.length);
		range.moveEnd("character",-right.length);
		range.select();
	}
	,__class__: js_Selection
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) return ctx;
	}
	return null;
};
var js_node_Fs = require("fs");
var js_node_Net = require("net");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_webkit_App = require("nw.gui").App;
var js_node_webkit_Clipboard = require("nw.gui").Clipboard;
var js_node_webkit_Menu = require("nw.gui").Menu;
var js_node_webkit_MenuItem = require("nw.gui").MenuItem;
var js_node_webkit_Shell = require("nw.gui").Shell;
var js_node_webkit_Window = require("nw.gui").Window;
var lvl_Image = function(w,h) {
	this.originY = 0;
	this.originX = 0;
	this.width = w;
	this.height = h;
	this.canvas = window.document.createElement("canvas");
	this.origin = this.canvas;
	this.canvas.width = w;
	this.canvas.height = h;
	this.init();
};
$hxClasses["lvl.Image"] = lvl_Image;
lvl_Image.__name__ = ["lvl","Image"];
lvl_Image.clearCache = function(url) {
	lvl_Image.cache.remove(url);
};
lvl_Image.load = function(url,callb,onError,forceReload) {
	var tmp;
	var _this = lvl_Image.cache;
	if(__map_reserved[url] != null) tmp = _this.getReserved(url); else tmp = _this.h[url];
	var i = tmp;
	if(i != null && !forceReload) {
		var im = new lvl_Image(i.width,i.height);
		im.ctx.drawImage(i,0,0);
		im.origin = i;
		callb(im);
		return;
	}
	i = window.document.createElement("img");
	i.onload = function(_) {
		var tmp1;
		var _this1 = lvl_Image.cache;
		if(__map_reserved[url] != null) tmp1 = _this1.getReserved(url); else tmp1 = _this1.h[url];
		var i2 = tmp1;
		if(i2 == null || forceReload) {
			var _this2 = lvl_Image.cache;
			if(__map_reserved[url] != null) _this2.setReserved(url,i); else _this2.h[url] = i;
		} else i = i2;
		var im1 = new lvl_Image(i.width,i.height);
		im1.ctx.drawImage(i,0,0);
		im1.origin = i;
		callb(im1);
	};
	i.onerror = function(_2) {
		if(onError != null) {
			onError();
			return;
		}
		var i3 = new lvl_Image(16,16);
		i3.fill(-65281);
		callb(i3);
	};
	i.src = url;
};
lvl_Image.fromCanvas = function(c) {
	var i = new lvl_Image(0,0);
	i.width = c.width;
	i.height = c.height;
	i.canvas = i.origin = c;
	i.init();
	return i;
};
lvl_Image.prototype = {
	get_smooth: function() {
		return this.ctx.imageSmoothingEnabled;
	}
	,set_smooth: function(v) {
		return this.ctx.imageSmoothingEnabled = v;
	}
	,get_alpha: function() {
		return this.ctx.globalAlpha;
	}
	,set_alpha: function(v) {
		return this.ctx.globalAlpha = v;
	}
	,init: function() {
		this.ctx = this.canvas.getContext("2d",null);
		this.ctx.imageSmoothingEnabled = false;
	}
	,getColor: function(color) {
		if(color >>> 24 == 255) return "#" + StringTools.hex(color & 16777215,6); else return "rgba(" + (color >> 16 & 255) + "," + (color >> 8 & 255) + "," + (color & 255) + "," + (color >>> 24) / 255 + ")";
	}
	,getCanvas: function() {
		return this.canvas;
	}
	,clear: function() {
		this.ctx.clearRect(0,0,this.width,this.height);
		this.invalidate();
	}
	,invalidate: function() {
		if(this.origin == this.canvas) return;
		this.origin = this.canvas;
		this.originX = this.originY = 0;
		this.origin.texture = null;
	}
	,fill: function(color) {
		this.ctx.fillStyle = this.getColor(color);
		this.ctx.fillRect(0,0,this.width,this.height);
		this.invalidate();
	}
	,fillRect: function(x,y,w,h,color) {
		this.ctx.fillStyle = this.getColor(color);
		this.ctx.fillRect(x,y,w,h);
		this.invalidate();
	}
	,sub: function(x,y,w,h) {
		var i = new lvl_Image(w,h);
		i.ctx.drawImage(this.origin,x,y,w,h,0,0,w,h);
		i.origin = this.origin;
		i.originX = this.originX + x;
		i.originY = this.originY + y;
		return i;
	}
	,text: function(text,x,y,color) {
		if(color == null) color = -1;
		this.ctx.fillStyle = this.getColor(color);
		this.ctx.fillText(text,x,y);
		this.invalidate();
	}
	,draw: function(i,x,y) {
		this.ctx.drawImage(i.origin,i.originX,i.originY,i.width,i.height,x,y,i.width,i.height);
		this.invalidate();
	}
	,drawMat: function(i,m) {
		this.ctx.setTransform(m.a,m.b,m.c,m.d,m.x,m.y);
		this.draw(i,0,0);
		this.ctx.setTransform(1,0,0,1,0,0);
	}
	,drawScaled: function(i,x,y,width,height) {
		this.ctx.drawImage(i.origin,i.originX,i.originY,i.width,i.height,x,y,width,height);
		this.invalidate();
	}
	,drawSub: function(i,srcX,srcY,srcW,srcH,x,y,dstW,dstH) {
		if(dstH == null) dstH = -1;
		if(dstW == null) dstW = -1;
		if(dstW < 0) dstW = srcW;
		if(dstH < 0) dstH = srcH;
		this.ctx.drawImage(i.origin,srcX + i.originX,srcY + i.originY,srcW,srcH,x,y,dstW,dstH);
		this.invalidate();
	}
	,copyFrom: function(i) {
		this.ctx.fillStyle = "rgba(0,0,0,0)";
		this.ctx.fillRect(0,0,this.width,this.height);
		this.ctx.drawImage(i.origin,i.originX,i.originY,i.width,i.height,0,0,this.width,this.height);
		this.invalidate();
	}
	,isBlank: function() {
		var i = this.ctx.getImageData(0,0,this.width,this.height);
		var _g1 = 0;
		var _g = this.width * this.height * 4;
		while(_g1 < _g) {
			var k = _g1++;
			if(i.data[k] != 0) return false;
		}
		return true;
	}
	,getPixel: function(x,y) {
		var i = this.ctx.getImageData(x,y,1,1);
		return i.data[3] << 24 | i.data[0] << 16 | i.data[1] << 8 | i.data[2];
	}
	,setSize: function(width,height) {
		if(width == this.width && height == this.height) return;
		this.canvas.width = width;
		this.canvas.height = height;
		this.canvas.setAttribute("width",width + "px");
		this.canvas.setAttribute("height",height + "px");
		this.width = width;
		this.height = height;
		this.init();
		this.invalidate();
	}
	,resize: function(width,height) {
		if(width == this.width && height == this.height) return;
		var c = window.document.createElement("canvas");
		c.width = width;
		c.height = height;
		var ctx2 = c.getContext("2d",null);
		ctx2.imageSmoothingEnabled = this.ctx.imageSmoothingEnabled;
		ctx2.drawImage(this.canvas,0,0,this.width,this.height,0,0,width,height);
		this.ctx = ctx2;
		this.canvas = c;
		this.width = width;
		this.height = height;
		this.invalidate();
	}
	,__class__: lvl_Image
};
var lvl_Image3D = function(w,h) {
	this.scrollY = 0;
	this.scrollX = 0;
	this.alphaValue = 1.;
	this.zoom = 1;
	lvl_Image.call(this,w,h);
	this.viewport = window.document.createElement("div");
	this.viewport.style.backgroundColor = "black";
	this.viewport.style.overflow = "hidden";
	this.viewport.appendChild(this.canvas);
	this.canvas.width = 2048;
	this.canvas.height = 2048;
	this.canvas.setAttribute("width",2048 + "px");
	this.canvas.setAttribute("height",2048 + "px");
	this.colorCache = new haxe_ds_IntMap();
	this.curDraw = new Float32Array(174768);
	this.curIndex = new Uint16Array(65536);
};
$hxClasses["lvl.Image3D"] = lvl_Image3D;
lvl_Image3D.__name__ = ["lvl","Image3D"];
lvl_Image3D.getInstance = function() {
	if(lvl_Image3D.inst == null) lvl_Image3D.inst = new lvl_Image3D(0,0);
	return lvl_Image3D.inst;
};
lvl_Image3D.fromCanvas = function(c) {
	var i = new lvl_Image3D(0,0);
	i.width = c.width;
	i.height = c.height;
	i.canvas = i.origin = c;
	i.init();
	return i;
};
lvl_Image3D.__super__ = lvl_Image;
lvl_Image3D.prototype = $extend(lvl_Image.prototype,{
	init: function() {
		this.dispose();
		this.gl = this.canvas.gl;
		if(this.gl != null) {
			this.initScale();
			return;
		}
		this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,{ alpha : false, antialias : false});
		if(this.gl == null) js_Browser.alert("Cannot initialize WebGL context ! (windows user : install DirectX redist)");
		this.canvas.gl = this.gl;
		this.gl.disable(2884);
		this.gl.disable(2929);
		var vertex = this.gl.createShader(35633);
		this.gl.shaderSource(vertex,"\n\t\t\tvarying vec2 tuv;\n\t\t\tattribute vec2 pos;\n\t\t\tattribute vec2 uv;\n\t\t\tuniform vec2 scroll;\n\t\t\tvoid main() {\n\t\t\t\ttuv = uv;\n\t\t\t\tgl_Position = vec4(pos + vec2(-1.,1.) + scroll, 0, 1);\n\t\t\t}\n\t\t");
		this.gl.compileShader(vertex);
		if(this.gl.getShaderParameter(vertex,35713) != 1) throw new js__$Boot_HaxeError(this.gl.getShaderInfoLog(vertex));
		var frag = this.gl.createShader(35632);
		this.gl.shaderSource(frag,"\n\t\t\tvarying mediump vec2 tuv;\n\t\t\tuniform sampler2D texture;\n\t\t\tuniform lowp float alpha;\n\t\t\tvoid main() {\n\t\t\t\tlowp vec4 color = texture2D(texture, tuv);\n\t\t\t\tcolor.a *= alpha;\n\t\t\t\tgl_FragColor = color;\n\t\t\t}\n\t\t");
		this.gl.compileShader(frag);
		if(this.gl.getShaderParameter(frag,35713) != 1) throw new js__$Boot_HaxeError(this.gl.getShaderInfoLog(frag));
		var p = this.gl.createProgram();
		this.gl.attachShader(p,vertex);
		this.gl.attachShader(p,frag);
		this.gl.linkProgram(p);
		if(this.gl.getProgramParameter(p,35714) != 1) throw new js__$Boot_HaxeError(this.gl.getProgramInfoLog(p));
		this.gl.useProgram(p);
		this.gl.enableVertexAttribArray(0);
		this.gl.enableVertexAttribArray(1);
		this.gl.enable(3042);
		this.gl.blendFunc(770,771);
		this.uniScroll = this.gl.getUniformLocation(p,"scroll");
		this.uniTex = this.gl.getUniformLocation(p,"texture");
		this.uniAlpha = this.gl.getUniformLocation(p,"alpha");
		this.attribPos = this.gl.getAttribLocation(p,"pos");
		this.attribUV = this.gl.getAttribLocation(p,"uv");
		this.initScale();
	}
	,dispose: function() {
		if(this.texturesObjects != null) {
			var _g = 0;
			var _g1 = this.texturesObjects;
			while(_g < _g1.length) {
				var o = _g1[_g];
				++_g;
				this.gl.deleteTexture(o.texture);
				o.texture = null;
			}
		}
		this.texturesObjects = [];
		if(this.allocatedBuffers != null) {
			var _g2 = 0;
			var _g12 = this.allocatedBuffers;
			while(_g2 < _g12.length) {
				var b = _g12[_g2];
				++_g2;
				this.gl.deleteBuffer(b);
			}
			this.allocatedBuffers = [];
		}
	}
	,get_alpha: function() {
		return this.alphaValue;
	}
	,set_alpha: function(v) {
		if(this.alphaValue == v) return v;
		this.endDraw();
		return this.alphaValue = v;
	}
	,beginDraw: function(t) {
		if(t != this.curTexture) {
			this.endDraw();
			this.curTexture = t;
			this.drawPos = 0;
			this.indexPos = 0;
		}
	}
	,getColorImage: function(color) {
		var i = this.colorCache.h[color];
		if(i != null) return i;
		i = new lvl_Image(1,1);
		i.fill(color);
		this.colorCache.h[color] = i;
		return i;
	}
	,getTexture: function(i) {
		var t = i.origin.texture;
		if(t != null) return t;
		t = this.gl.createTexture();
		i.origin.texture = t;
		t.origin = i.origin;
		this.gl.bindTexture(3553,t);
		this.gl.texParameteri(3553,10240,9728);
		this.gl.texParameteri(3553,10241,9728);
		this.gl.texParameteri(3553,10242,33071);
		this.gl.texParameteri(3553,10243,33071);
		this.gl.texImage2D(3553,0,6408,6408,5121,i.origin);
		this.gl.bindTexture(3553,null);
		this.texturesObjects.push(i.origin);
		t.width = i.origin.width;
		t.height = i.origin.height;
		return t;
	}
	,drawMat: function(i,m) {
		var _g = this;
		this.beginDraw(this.getTexture(i));
		var w = i.width;
		var h = i.height;
		var pos = this.drawPos >> 2;
		this.curDraw[this.drawPos++] = (0 * m.a + 0 * m.c + m.x) * _g.scaleX;
		this.curDraw[this.drawPos++] = (0 * m.b + 0 * m.d + m.y) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v = i.originX;
			$r = (v + 0.001) / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v1 = i.originY;
			$r = v1 / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (w * m.a + 0 * m.c + m.x) * _g.scaleX;
		this.curDraw[this.drawPos++] = (w * m.b + 0 * m.d + m.y) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v2 = i.originX + i.width;
			$r = v2 / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v3 = i.originY;
			$r = v3 / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (0 * m.a + h * m.c + m.x) * _g.scaleX;
		this.curDraw[this.drawPos++] = (0 * m.b + h * m.d + m.y) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v4 = i.originX;
			$r = (v4 + 0.001) / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v5 = i.originY + i.height;
			$r = (v5 + -0.01) / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (w * m.a + h * m.c + m.x) * _g.scaleX;
		this.curDraw[this.drawPos++] = (w * m.b + h * m.d + m.y) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v6 = i.originX + i.width;
			$r = v6 / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v7 = i.originY + i.height;
			$r = (v7 + -0.01) / _g.curTexture.height;
			return $r;
		}(this));
		this.curIndex[this.indexPos++] = pos;
		this.curIndex[this.indexPos++] = pos + 1;
		this.curIndex[this.indexPos++] = pos + 2;
		this.curIndex[this.indexPos++] = pos + 1;
		this.curIndex[this.indexPos++] = pos + 3;
		this.curIndex[this.indexPos++] = pos + 2;
		if(this.indexPos > 65500) this.endDraw();
	}
	,draw: function(i,x,y) {
		var _g = this;
		this.beginDraw(this.getTexture(i));
		var x1 = x;
		var y1 = y;
		var w = i.width;
		var h = i.height;
		var pos = this.drawPos >> 2;
		this.curDraw[this.drawPos++] = x1 * _g.scaleX;
		this.curDraw[this.drawPos++] = y1 * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v = i.originX;
			$r = (v + 0.001) / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v1 = i.originY;
			$r = v1 / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (x1 + w) * _g.scaleX;
		this.curDraw[this.drawPos++] = y1 * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v2 = i.originX + i.width;
			$r = v2 / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v3 = i.originY;
			$r = v3 / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = x1 * _g.scaleX;
		this.curDraw[this.drawPos++] = (y1 + h) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v4 = i.originX;
			$r = (v4 + 0.001) / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v5 = i.originY + i.height;
			$r = (v5 + -0.01) / _g.curTexture.height;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (x1 + w) * _g.scaleX;
		this.curDraw[this.drawPos++] = (y1 + h) * _g.scaleY;
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v6 = i.originX + i.width;
			$r = v6 / _g.curTexture.width;
			return $r;
		}(this));
		this.curDraw[this.drawPos++] = (function($this) {
			var $r;
			var v7 = i.originY + i.height;
			$r = (v7 + -0.01) / _g.curTexture.height;
			return $r;
		}(this));
		this.curIndex[this.indexPos++] = pos;
		this.curIndex[this.indexPos++] = pos + 1;
		this.curIndex[this.indexPos++] = pos + 2;
		this.curIndex[this.indexPos++] = pos + 1;
		this.curIndex[this.indexPos++] = pos + 3;
		this.curIndex[this.indexPos++] = pos + 2;
		if(this.indexPos > 65500) this.endDraw();
	}
	,endDraw: function() {
		var _g = this;
		if(this.curTexture == null || this.indexPos == 0) return;
		var index = this.gl.createBuffer();
		var vertex = this.gl.createBuffer();
		this.gl.bindBuffer(34962,vertex);
		this.gl.bufferData(34962,this.curDraw.subarray(0,this.drawPos),35044);
		this.gl.bindBuffer(34963,index);
		this.gl.bufferData(34963,this.curIndex.subarray(0,this.indexPos),35044);
		var alpha = this.get_alpha();
		var curTexture = this.curTexture;
		var indexPos = this.indexPos;
		this.drawCommands.push(function() {
			_g.gl.bindBuffer(34962,vertex);
			_g.gl.bindBuffer(34963,index);
			_g.gl.vertexAttribPointer(_g.attribPos,2,5126,false,16,0);
			_g.gl.vertexAttribPointer(_g.attribUV,2,5126,false,16,8);
			_g.gl.activeTexture(33984);
			_g.gl.uniform1i(_g.uniTex,0);
			_g.gl.uniform1f(_g.uniAlpha,alpha);
			_g.gl.bindTexture(3553,curTexture);
			_g.gl.drawElements(4,indexPos,5123,0);
		});
		this.allocatedBuffers.push(index);
		this.allocatedBuffers.push(vertex);
		this.indexPos = 0;
		this.drawPos = 0;
	}
	,setSize: function(w,h) {
		this.viewport.style.width = w + "px";
		this.viewport.style.height = h + "px";
		this.width = w;
		this.height = h;
	}
	,initScale: function() {
		this.scaleX = this.zoom / 2048 * 2;
		this.scaleY = this.zoom / 2048 * -2;
	}
	,fill: function(color) {
		var _g = this;
		this.gl.clearColor((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255,(color >>> 24) / 255);
		if(this.allocatedBuffers != null) {
			var _g1 = 0;
			var _g11 = this.allocatedBuffers;
			while(_g1 < _g11.length) {
				var b = _g11[_g1];
				++_g1;
				this.gl.deleteBuffer(b);
			}
		}
		this.allocatedBuffers = [];
		this.drawCommands = [function() {
			_g.gl.clear(16384);
		}];
	}
	,fillRect: function(x,y,w,h,color) {
		var i = this.getColorImage(color);
		i.width = w;
		i.height = h;
		this.draw(i,x,y);
	}
	,flush: function() {
		var _g = this;
		this.endDraw();
		this.drawCommands.push(function() {
			_g.gl.bindBuffer(34962,null);
			_g.gl.bindBuffer(34963,null);
			_g.gl.bindTexture(3553,null);
			_g.gl.finish();
		});
		this.redraw();
	}
	,setScrollPos: function(x,y) {
		if(y == null) y = 0;
		if(x == null) x = 0;
		this.scrollX = x;
		this.scrollY = y;
		this.redraw();
	}
	,redraw: function() {
		this.gl.viewport(0,0,2048,2048);
		this.canvas.style.marginLeft = (this.scrollX | 0) + "px";
		this.canvas.style.marginTop = (this.scrollY | 0) + "px";
		this.gl.uniform2f(this.uniScroll,-this.scrollX * 2 / 2048,this.scrollY * 2 / 2048);
		if(this.drawCommands != null) {
			var _g = 0;
			var _g1 = this.drawCommands;
			while(_g < _g1.length) {
				var d = _g1[_g];
				++_g;
				d();
			}
		}
	}
	,set_zoom: function(z) {
		this.zoom = z;
		this.initScale();
		return z;
	}
	,__class__: lvl_Image3D
});
var lvl_LayerInnerData = $hxClasses["lvl.LayerInnerData"] = { __ename__ : ["lvl","LayerInnerData"], __constructs__ : ["Layer","Objects","Tiles","TileInstances"] };
lvl_LayerInnerData.Layer = function(a) { var $x = ["Layer",0,a]; $x.__enum__ = lvl_LayerInnerData; $x.toString = $estr; return $x; };
lvl_LayerInnerData.Objects = function(idCol,objs) { var $x = ["Objects",1,idCol,objs]; $x.__enum__ = lvl_LayerInnerData; $x.toString = $estr; return $x; };
lvl_LayerInnerData.Tiles = function(t,data) { var $x = ["Tiles",2,t,data]; $x.__enum__ = lvl_LayerInnerData; $x.toString = $estr; return $x; };
lvl_LayerInnerData.TileInstances = function(t,insts) { var $x = ["TileInstances",3,t,insts]; $x.__enum__ = lvl_LayerInnerData; $x.toString = $estr; return $x; };
var lvl_LayerGfx = function(level) {
	this.height = 0;
	this.stride = 0;
	this.level = level;
};
$hxClasses["lvl.LayerGfx"] = lvl_LayerGfx;
lvl_LayerGfx.__name__ = ["lvl","LayerGfx"];
lvl_LayerGfx.prototype = {
	fromSheet: function(sheet,defColor) {
		var _g5 = this;
		this.blanks = [];
		if(sheet == null) {
			this.colors = [defColor];
			this.names = [""];
			return;
		}
		var idCol = null;
		var imageTags = [];
		var _g = 0;
		var _g1 = sheet.columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var _g2 = c.type;
			switch(_g2[1]) {
			case 11:
				var _g3 = [];
				var _g4 = 0;
				var _g51 = sheet.lines;
				while(_g4 < _g51.length) {
					var o = _g51[_g4];
					++_g4;
					var tmp;
					var c1 = Reflect.field(o,c.name);
					if(c1 == null) tmp = 0; else tmp = c1;
					_g3.push(tmp);
				}
				this.colors = _g3;
				break;
			case 7:
				if(this.images == null) this.images = [];
				var size = [this.level.tileSize];
				var _g41 = 0;
				var _g31 = sheet.lines.length;
				while(_g41 < _g31) {
					var idx = [_g41++];
					if(imageTags[idx[0]]) continue;
					var key = Reflect.field(sheet.lines[idx[0]],c.name);
					var idat = this.level.model.getImageData(key);
					if(idat == null) {
						var i = new lvl_Image(size[0],size[0]);
						i.text("#" + idx[0],0,12);
						this.images[idx[0]] = i;
						continue;
					}
					this.level.wait();
					imageTags[idx[0]] = true;
					lvl_Image.load(idat,(function(idx1,size1) {
						return function(i1) {
							i1.resize(size1[0],size1[0]);
							_g5.images[idx1[0]] = i1;
							_g5.level.waitDone();
						};
					})(idx,size));
				}
				break;
			case 14:
				if(this.images == null) this.images = [];
				var size2 = this.level.tileSize;
				var _g42 = 0;
				var _g32 = sheet.lines.length;
				while(_g42 < _g32) {
					var idx2 = [_g42++];
					if(imageTags[idx2[0]]) continue;
					var data = [Reflect.field(sheet.lines[idx2[0]],c.name)];
					if(data[0] == null && this.images[idx2[0]] != null) continue;
					if(data[0] == null) {
						var i2 = new lvl_Image(size2,size2);
						i2.text("#" + idx2[0],0,12);
						this.images[idx2[0]] = i2;
						continue;
					}
					this.level.wait();
					imageTags[idx2[0]] = true;
					lvl_Image.load(this.level.model.getAbsPath(data[0].file),(function(data2,idx3) {
						return function(i3) {
							var i23 = i3.sub(data2[0].x * data2[0].size,data2[0].y * data2[0].size,data2[0].size * (data2[0].width == null?1:data2[0].width),data2[0].size * (data2[0].height == null?1:data2[0].height));
							_g5.images[idx3[0]] = i23;
							_g5.blanks[idx3[0]] = i23.isBlank();
							_g5.level.waitDone();
						};
					})(data,idx2));
					this.level.watch(data[0].file,(function(data3) {
						return function() {
							lvl_Image.clearCache(_g5.level.model.getAbsPath(data3[0].file));
							_g5.level.reload();
						};
					})(data));
				}
				break;
			case 0:
				idCol = c;
				break;
			default:
			}
		}
		this.names = [];
		this.stride = Math.ceil(Math.sqrt(sheet.lines.length));
		this.height = Math.ceil(sheet.lines.length / this.stride);
		this.idToIndex = new haxe_ds_StringMap();
		this.indexToId = [];
		var _g13 = 0;
		var _g6 = sheet.lines.length;
		while(_g13 < _g6) {
			var index = _g13++;
			var o6 = sheet.lines[index];
			var n = sheet.props.displayColumn != null?Reflect.field(o6,sheet.props.displayColumn):null;
			if((n == null || n == "") && idCol != null) n = Reflect.field(o6,idCol.name);
			if(n == null || n == "") n = "#" + index;
			if(idCol != null) {
				var id = Reflect.field(o6,idCol.name);
				if(id != null && id != "") {
					var _this = this.idToIndex;
					if(__map_reserved[id] != null) _this.setReserved(id,index); else _this.h[id] = index;
				}
				this.indexToId[index] = id;
			}
			this.names.push(n);
		}
	}
	,__class__: lvl_LayerGfx
};
var lvl_LayerData = function(level,name,p,target) {
	this.currentHeight = 1;
	this.currentWidth = 1;
	this.current = 0;
	this.lock = false;
	this.visible = true;
	lvl_LayerGfx.call(this,level);
	this.name = name;
	this.props = p;
	this.targetObj = target;
};
$hxClasses["lvl.LayerData"] = lvl_LayerData;
lvl_LayerData.__name__ = ["lvl","LayerData"];
lvl_LayerData.__super__ = lvl_LayerGfx;
lvl_LayerData.prototype = $extend(lvl_LayerGfx.prototype,{
	loadSheetData: function(sheet) {
		if(sheet == null && this.props.color == null) {
			this.props.color = 16711680;
			var _g = 0;
			var _g1 = this.level.sheet.lines;
			while(_g < _g1.length) {
				var o = _g1[_g];
				++_g;
				var props = o.props;
				if(props == null) continue;
				var _g2 = 0;
				var _g3 = props.layers;
				while(_g2 < _g3.length) {
					var l = _g3[_g2];
					++_g2;
					if(l.l == this.name && l.p.color != null) {
						this.props.color = l.p.color;
						props = null;
						break;
					}
				}
				if(props == null) break;
			}
		}
		this.sheet = sheet;
		this.fromSheet(sheet,this.props.color);
		this.loadState();
	}
	,enabled: function() {
		if(this.visible) return !this.lock; else return false;
	}
	,loadState: function() {
		var state;
		try {
			state = haxe_Unserializer.run(js_Browser.getLocalStorage().getItem(this.level.sheetPath + ":" + this.name));
		} catch( e ) {
			state = null;
		}
		if(state != null) {
			this.set_visible(state.visible);
			this.lock = !(!state.lock);
			this.floatCoord = this.hasFloatCoord && !state.lockGrid;
			if(state.current < (this.images != null?this.images.length:this.names.length)) {
				this.set_current(state.current);
				if(this.current % this.stride + state.cw <= this.stride && (this.current / this.stride | 0) + state.ch <= this.height) {
					this.currentWidth = state.cw;
					this.currentHeight = state.ch;
				}
			}
		}
		this.stateLoaded = true;
	}
	,setLayerData: function(val) {
		if(val == null || val == "") {
			var _g = [];
			var _g2 = 0;
			var _g1 = this.level.width * this.level.height;
			while(_g2 < _g1) {
				var x = _g2++;
				_g.push(0);
			}
			this.data = lvl_LayerInnerData.Layer(_g);
		} else {
			var a = cdb_Lz4Reader.decodeString(val);
			if(a.length != this.level.width * this.level.height) throw new js__$Boot_HaxeError("Invalid layer data");
			var _g11 = [];
			var _g3 = 0;
			var _g21 = this.level.width * this.level.height;
			while(_g3 < _g21) {
				var i = _g3++;
				_g11.push(a.b[i]);
			}
			this.data = lvl_LayerInnerData.Layer(_g11);
		}
		if(this.sheet.lines.length > 256) throw new js__$Boot_HaxeError("Too many lines");
	}
	,getTileProp: function(mode) {
		if(this.tileProps == null) return null;
		var _g = 0;
		var _g1 = this.tileProps.sets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.x + s.y * this.stride == this.current && s.t == mode) return s;
		}
		return null;
	}
	,getTileObjects: function() {
		var objs = new haxe_ds_IntMap();
		if(this.tileProps == null) return objs;
		var _g = 0;
		var _g1 = this.tileProps.sets;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.t == "object") objs.h[o.x + o.y * this.stride] = o;
		}
		return objs;
	}
	,getSelObjects: function() {
		if(this.tileProps == null) return [];
		var x = this.current % this.stride;
		var y = this.current / this.stride | 0;
		var out = [];
		var _g = 0;
		var _g1 = this.tileProps.sets;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.t == "object" && !(o.x >= x + this.currentWidth || o.y >= y + this.currentHeight || o.x + o.w <= x || o.y + o.h <= y)) out.push(o);
		}
		return out;
	}
	,setObjectsData: function(id,val) {
		this.data = lvl_LayerInnerData.Objects(id,val);
	}
	,setTilesData: function(val) {
		var _g1 = this;
		var file = val == null?null:val.file;
		var size = val == null?16:val.size;
		var data;
		if(val == null) {
			var _g = [];
			var _g2 = 0;
			var _g11 = this.level.width * this.level.height;
			while(_g2 < _g11) {
				var i = _g2++;
				_g.push(0);
			}
			data = _g;
		} else data = cdb__$Types_TileLayerData_$Impl_$.decode(val.data);
		var stride = val == null?0:val.stride;
		var d = { file : file, size : size, stride : stride};
		this.images = [];
		this.data = lvl_LayerInnerData.Tiles(d,data);
		if(file == null) {
			if(this.props.mode != "tiles" && this.props.mode != null) Reflect.deleteField(this.props,"mode");
			var i1 = new lvl_Image(16,16);
			i1.fill(-65281);
			this.images.push(i1);
			this.loadState();
			return;
		}
		this.level.wait();
		this.level.loadAndSplit(file,size,function(w,h,images,blanks) {
			_g1.images = images;
			_g1.blanks = blanks;
			if(data[0] == 65535) _g1.props.mode = "objects";
			var _g21 = _g1.props.mode;
			if(_g21 == null) {
				var max = w * h;
				var _g4 = 0;
				var _g3 = data.length;
				while(_g4 < _g3) {
					var i2 = _g4++;
					var v = data[i2] - 1;
					if(v < 0) continue;
					var vx = v % stride;
					var vy = v / stride | 0;
					var v2 = vx + vy * w;
					if(vx >= w || vy >= h || blanks[v2]) v2 = -1;
					if(v != v2) {
						data[i2] = v2 + 1;
						_g1.dirty = true;
					}
				}
			} else switch(_g21) {
			case "tiles":case "ground":
				var max2 = w * h;
				var _g42 = 0;
				var _g32 = data.length;
				while(_g42 < _g32) {
					var i3 = _g42++;
					var v3 = data[i3] - 1;
					if(v3 < 0) continue;
					var vx3 = v3 % stride;
					var vy3 = v3 / stride | 0;
					var v23 = vx3 + vy3 * w;
					if(vx3 >= w || vy3 >= h || blanks[v23]) v23 = -1;
					if(v3 != v23) {
						data[i3] = v23 + 1;
						_g1.dirty = true;
					}
				}
				break;
			case "objects":
				var insts = [];
				var p = 1;
				if(data[0] != 65535) throw new js__$Boot_HaxeError("assert");
				while(p < data.length) {
					var x = data[p++];
					var y = data[p++];
					var v4 = data[p++];
					var flip = (v4 & 32768) != 0;
					var rot = x >> 15 | y >> 15 << 1;
					v4 &= 32767;
					var x4 = (x & 32767) / _g1.level.tileSize;
					var y4 = (y & 32767) / _g1.level.tileSize;
					var vx4 = v4 % stride;
					var vy4 = v4 / stride | 0;
					var v24 = vx4 + vy4 * w;
					if(vx4 >= w || vy4 >= h || x4 >= _g1.level.width || y4 >= _g1.level.height) {
						_g1.dirty = true;
						continue;
					}
					if(v4 != v24) _g1.dirty = true;
					insts.push({ x : x4, y : y4, o : v24, flip : flip, rot : rot});
				}
				_g1.data = lvl_LayerInnerData.TileInstances(d,insts);
				_g1.hasRotFlip = true;
				_g1.hasFloatCoord = _g1.floatCoord = true;
				break;
			}
			_g1.stride = d.stride = w;
			_g1.height = h;
			_g1.tileProps = _g1.level.palette.getTileProps(file,w,w * h);
			_g1.loadState();
			_g1.level.waitDone();
		});
	}
	,set_visible: function(v) {
		this.visible = v;
		if(this.comp != null) this.comp.toggleClass("hidden",!this.visible);
		return v;
	}
	,set_current: function(v) {
		this.current = v;
		this.currentWidth = 1;
		this.currentHeight = 1;
		this.saveState();
		return v;
	}
	,setCurrent: function(id,w,h) {
		if(this.current == id && this.currentWidth == w && this.currentHeight == h) return;
		this.current = id;
		this.currentWidth = w;
		this.currentHeight = h;
		this.saveState(false);
	}
	,saveState: function(sync) {
		if(sync == null) sync = true;
		if(!this.stateLoaded) return;
		if(sync && this.data != null) {
			var _g = this.data;
			switch(_g[1]) {
			case 2:
				var t = _g[2];
				var _g1 = 0;
				var _g2 = this.level.layers;
				while(_g1 < _g2.length) {
					var l = _g2[_g1];
					++_g1;
					if(l != this) {
						var _g3 = l.data;
						switch(_g3[1]) {
						case 2:
							var t2 = _g3[2];
							if(t2.file == t.file) l.setCurrent(this.current,this.currentWidth,this.currentHeight);
							break;
						case 3:
							var t21 = _g3[2];
							if(t21.file == t.file) l.setCurrent(this.current,this.currentWidth,this.currentHeight);
							break;
						default:
						}
					}
				}
				break;
			case 3:
				var t1 = _g[2];
				var _g11 = 0;
				var _g21 = this.level.layers;
				while(_g11 < _g21.length) {
					var l1 = _g21[_g11];
					++_g11;
					if(l1 != this) {
						var _g31 = l1.data;
						switch(_g31[1]) {
						case 2:
							var t22 = _g31[2];
							if(t22.file == t1.file) l1.setCurrent(this.current,this.currentWidth,this.currentHeight);
							break;
						case 3:
							var t23 = _g31[2];
							if(t23.file == t1.file) l1.setCurrent(this.current,this.currentWidth,this.currentHeight);
							break;
						default:
						}
					}
				}
				break;
			default:
			}
		}
		var s = { current : this.current, visible : this.visible, lock : this.lock, lockGrid : this.hasFloatCoord && !this.floatCoord, cw : this.currentWidth, ch : this.currentHeight};
		js_Browser.getLocalStorage().setItem(this.level.sheetPath + ":" + this.name,haxe_Serializer.run(s));
	}
	,save: function() {
		if(!this.dirty) return;
		this.dirty = false;
		this.targetObj.o[this.targetObj.f] = this.getData();
	}
	,getData: function() {
		var _g = this.data;
		switch(_g[1]) {
		case 0:
			var data = _g[2];
			var b = new haxe_io_Bytes(new ArrayBuffer(this.level.width * this.level.height));
			var p = 0;
			var _g2 = 0;
			var _g1 = this.level.height;
			while(_g2 < _g1) {
				var y = _g2++;
				var _g4 = 0;
				var _g3 = this.level.width;
				while(_g4 < _g3) {
					var x = _g4++;
					b.b[p] = data[p] & 255;
					++p;
				}
			}
			return cdb_Lz4Reader.encodeBytes(b,this.level.model.compressionEnabled());
		case 1:
			var objs = _g[3];
			return objs;
		case 2:
			var data1 = _g[3];
			var t = _g[2];
			var b1 = new haxe_io_BytesOutput();
			var _g21 = 0;
			var _g11 = data1.length;
			while(_g21 < _g11) {
				var r = _g21++;
				b1.writeUInt16(data1[r]);
			}
			if(t.file == null) return null; else return { file : t.file, size : t.size, stride : t.stride, data : cdb_Lz4Reader.encodeBytes(b1.getBytes(),this.level.model.compressionEnabled())};
			break;
		case 3:
			var insts = _g[3];
			var t1 = _g[2];
			var b2 = new haxe_io_BytesOutput();
			b2.writeUInt16(65535);
			var _g12 = 0;
			while(_g12 < insts.length) {
				var i = insts[_g12];
				++_g12;
				b2.writeUInt16(i.x * this.level.tileSize | 0 | (i.rot & 1) << 15);
				b2.writeUInt16(i.y * this.level.tileSize | 0 | i.rot >> 1 << 15);
				b2.writeUInt16(i.o | (i.flip?1:0) << 15);
			}
			if(t1.file == null) return null; else return { file : t1.file, size : t1.size, stride : t1.stride, data : cdb_Lz4Reader.encodeBytes(b2.getBytes(),this.level.model.compressionEnabled())};
			break;
		}
	}
	,scale: function(s) {
		var width = this.level.width;
		var height = this.level.height;
		var _g = this.data;
		switch(_g[1]) {
		case 2:
			var data = _g[3];
			var ndata = [];
			var _g2 = 0;
			var _g1 = height;
			while(_g2 < _g1) {
				var y = _g2++;
				var _g4 = 0;
				var _g3 = width;
				while(_g4 < _g3) {
					var x = _g4++;
					var tx = x / s | 0;
					var ty = y / s | 0;
					var k = tx >= width || ty >= height?0:data[tx + ty * width];
					ndata.push(k);
				}
			}
			var _g21 = 0;
			var _g11 = width * height;
			while(_g21 < _g11) {
				var i = _g21++;
				data[i] = ndata[i];
			}
			break;
		case 0:
			var data1 = _g[2];
			var ndata1 = [];
			var _g22 = 0;
			var _g12 = height;
			while(_g22 < _g12) {
				var y2 = _g22++;
				var _g42 = 0;
				var _g32 = width;
				while(_g42 < _g32) {
					var x2 = _g42++;
					var tx2 = x2 / s | 0;
					var ty2 = y2 / s | 0;
					var k2 = tx2 >= width || ty2 >= height?0:data1[tx2 + ty2 * width];
					ndata1.push(k2);
				}
			}
			var _g23 = 0;
			var _g13 = width * height;
			while(_g23 < _g13) {
				var i3 = _g23++;
				data1[i3] = ndata1[i3];
			}
			break;
		case 1:
			var objs = _g[3];
			var m = this.floatCoord?this.level.tileSize:1;
			var _g14 = 0;
			var _g24 = objs.slice();
			while(_g14 < _g24.length) {
				var o = _g24[_g14];
				++_g14;
				o.x = (o.x * s * m | 0) / m;
				o.y = (o.y * s * m | 0) / m;
				if(o.x < 0 || o.y < 0 || o.x >= width || o.y >= height) HxOverrides.remove(objs,o);
			}
			break;
		case 3:
			var insts = _g[3];
			var m4 = this.floatCoord?this.level.tileSize:1;
			var _g15 = 0;
			var _g25 = insts.slice();
			while(_g15 < _g25.length) {
				var i5 = _g25[_g15];
				++_g15;
				i5.x = (i5.x * s * m4 | 0) / m4;
				i5.y = (i5.y * s * m4 | 0) / m4;
				if(i5.x < 0 || i5.y < 0 || i5.x >= width || i5.y >= height) HxOverrides.remove(insts,i5);
			}
			break;
		}
	}
	,scroll: function(dx,dy) {
		var width = this.level.width;
		var height = this.level.height;
		var _g = this.data;
		switch(_g[1]) {
		case 2:
			var data = _g[3];
			var ndata = [];
			var _g2 = 0;
			var _g1 = height;
			while(_g2 < _g1) {
				var y = _g2++;
				var _g4 = 0;
				var _g3 = width;
				while(_g4 < _g3) {
					var x = _g4++;
					var tx = x - dx;
					var ty = y - dy;
					var k = tx < 0 || ty < 0 || tx >= width || ty >= height?0:data[tx + ty * width];
					ndata.push(k);
				}
			}
			var _g21 = 0;
			var _g11 = width * height;
			while(_g21 < _g11) {
				var i = _g21++;
				data[i] = ndata[i];
			}
			break;
		case 0:
			var data1 = _g[2];
			var ndata1 = [];
			var _g22 = 0;
			var _g12 = height;
			while(_g22 < _g12) {
				var y2 = _g22++;
				var _g42 = 0;
				var _g32 = width;
				while(_g42 < _g32) {
					var x2 = _g42++;
					var tx2 = x2 - dx;
					var ty2 = y2 - dy;
					var k2 = tx2 < 0 || ty2 < 0 || tx2 >= width || ty2 >= height?0:data1[tx2 + ty2 * width];
					ndata1.push(k2);
				}
			}
			var _g23 = 0;
			var _g13 = width * height;
			while(_g23 < _g13) {
				var i3 = _g23++;
				data1[i3] = ndata1[i3];
			}
			break;
		case 1:
			var objs = _g[3];
			var _g14 = 0;
			var _g24 = objs.slice();
			while(_g14 < _g24.length) {
				var o = _g24[_g14];
				++_g14;
				o.x += dx;
				o.y += dy;
				if(o.x < 0 || o.y < 0 || o.x >= width || o.y >= height) HxOverrides.remove(objs,o);
			}
			break;
		case 3:
			var insts = _g[3];
			var _g15 = 0;
			var _g25 = insts.slice();
			while(_g15 < _g25.length) {
				var i5 = _g25[_g15];
				++_g15;
				i5.x += dx;
				i5.y += dy;
				if(i5.x < 0 || i5.y < 0 || i5.x >= width || i5.y >= height) HxOverrides.remove(insts,i5);
			}
			break;
		}
	}
	,setMode: function(mode) {
		var old = this.props.mode;
		if(old == null) old = "tiles";
		var width = this.level.width;
		var height = this.level.height;
		switch(old) {
		case "ground":case "tiles":
			switch(mode) {
			case "tiles":case "ground":
				break;
			case "objects":
				var _g = this.data;
				switch(_g[1]) {
				case 2:
					var data = _g[3];
					var td = _g[2];
					var oids = new haxe_ds_IntMap();
					var _g11 = 0;
					var _g2 = this.tileProps.sets;
					while(_g11 < _g2.length) {
						var p1 = _g2[_g11];
						++_g11;
						if(p1.t == "object") oids.h[p1.x + p1.y * this.stride] = p1;
					}
					var objs = [];
					var p = -1;
					var _g21 = 0;
					var _g12 = height;
					while(_g21 < _g12) {
						var y = _g21++;
						var _g4 = 0;
						var _g3 = width;
						while(_g4 < _g3) {
							var x = _g4++;
							var d = data[++p] - 1;
							if(d < 0) continue;
							var o = oids.h[d];
							if(o != null) {
								var _g6 = 0;
								var _g5 = o.h;
								while(_g6 < _g5) {
									var dy = _g6++;
									var _g8 = 0;
									var _g7 = o.w;
									while(_g8 < _g7) {
										var dx = _g8++;
										var tp = p + dx + dy * width;
										if(x + dx >= width || y + dy >= height) continue;
										var id = d + dx + dy * this.stride;
										if(data[tp] != id + 1) {
											if(data[tp] == 0 && this.blanks[id]) continue;
											o = null;
											break;
										}
									}
									if(o == null) break;
								}
							}
							if(o == null) objs.push({ x : x, y : y, b : y, id : d}); else {
								var _g62 = 0;
								var _g52 = o.h;
								while(_g62 < _g52) {
									var dy2 = _g62++;
									var _g82 = 0;
									var _g72 = o.w;
									while(_g82 < _g72) {
										var dx2 = _g82++;
										if(x + dx2 >= width || y + dy2 >= height) continue;
										data[p + dx2 + dy2 * width] = 0;
									}
								}
								objs.push({ x : x, y : y, b : y + o.w - 1, id : d});
							}
						}
					}
					objs.sort(function(o1,o2) {
						return o1.b - o2.b;
					});
					var _g1 = [];
					var _g22 = 0;
					while(_g22 < objs.length) {
						var o3 = objs[_g22];
						++_g22;
						_g1.push({ x : o3.x, y : o3.y, o : o3.id, flip : false, rot : 0});
					}
					this.data = lvl_LayerInnerData.TileInstances(td,_g1);
					this.dirty = true;
					break;
				default:
					throw new js__$Boot_HaxeError("assert0");
				}
				break;
			}
			break;
		case "objects":
			switch(mode) {
			case "objects":
				break;
			case "ground":case "tiles":
				var _g9 = this.data;
				switch(_g9[1]) {
				case 3:
					var insts = _g9[3];
					var td9 = _g9[2];
					var objs9 = this.getTileObjects();
					var _g19 = [];
					var _g39 = 0;
					var _g29 = width * height;
					while(_g39 < _g29) {
						var i = _g39++;
						_g19.push(0);
					}
					var data9 = _g19;
					var _g210 = 0;
					while(_g210 < insts.length) {
						var i10 = insts[_g210];
						++_g210;
						var x10 = i10.x | 0;
						var y10 = i10.y | 0;
						var obj = objs9.h[i10.o];
						if(obj == null) data9[x10 + y10 * width] = i10.o + 1; else {
							var _g410 = 0;
							var _g310 = obj.h;
							while(_g410 < _g310) {
								var dy10 = _g410++;
								var _g610 = 0;
								var _g510 = obj.w;
								while(_g610 < _g510) {
									var dx10 = _g610++;
									var x11 = x10 + dx10;
									var y11 = y10 + dy10;
									if(x11 < width && y11 < height) data9[x11 + y11 * width] = i10.o + dx10 + dy10 * this.stride + 1;
								}
							}
						}
					}
					this.data = lvl_LayerInnerData.Tiles(td9,data9);
					this.dirty = true;
					break;
				default:
					throw new js__$Boot_HaxeError("assert1");
				}
				break;
			}
			break;
		}
		this.props.mode = mode;
		if(mode == "tiles") Reflect.deleteField(this.props,"mode");
	}
	,initMatrix: function(m,w,h,rot,flip) {
		m.a = 1;
		m.b = 0;
		m.c = 0;
		m.d = 1;
		m.x = -w * 0.5;
		m.y = -h * 0.5;
		if(rot != 0) {
			var a = Math.PI * rot / 2;
			var c = Math.cos(a);
			var s = Math.sin(a);
			var x = m.x;
			var y = m.y;
			m.a = c;
			m.b = s;
			m.c = -s;
			m.d = c;
			m.x = x * c - y * s;
			m.y = x * s + y * c;
		}
		if(flip) {
			m.a = -m.a;
			m.c = -m.c;
			m.x = -m.x;
		}
		m.x += Math.abs(m.a * w * 0.5 + m.c * h * 0.5);
		m.y += Math.abs(m.b * w * 0.5 + m.d * h * 0.5);
	}
	,draw: function(view) {
		view.set_alpha(this.props.alpha);
		var width = this.level.width;
		var height = this.level.height;
		var size = this.level.tileSize;
		var _g = this.data;
		switch(_g[1]) {
		case 0:
			var data = _g[2];
			var first = this.level.layers[0] == this;
			var _g2 = 0;
			var _g1 = height;
			while(_g2 < _g1) {
				var y = _g2++;
				var _g4 = 0;
				var _g3 = width;
				while(_g4 < _g3) {
					var x = _g4++;
					var k = data[x + y * width];
					if(k == 0 && !first) continue;
					if(this.images != null) {
						var i = this.images[k];
						view.draw(i,x * size - (i.width - size >> 1),y * size - (i.height - size));
						continue;
					}
					view.fillRect(x * size,y * size,size,size,this.colors[k] | -16777216);
				}
			}
			break;
		case 2:
			var data1 = _g[3];
			var t = _g[2];
			var _g21 = 0;
			var _g11 = height;
			while(_g21 < _g11) {
				var y1 = _g21++;
				var _g41 = 0;
				var _g31 = width;
				while(_g41 < _g31) {
					var x1 = _g41++;
					var k1 = data1[x1 + y1 * width] - 1;
					if(k1 < 0) continue;
					view.draw(this.images[k1],x1 * size,y1 * size);
				}
			}
			if(this.props.mode == "ground") {
				var b = new cdb_TileBuilder(this.tileProps,this.stride,this.images.length);
				var a = b.buildGrounds(data1,width);
				var p = 0;
				var max = a.length;
				while(p < max) {
					var x2 = a[p++];
					var y2 = a[p++];
					var id = a[p++];
					view.draw(this.images[id],x2 * size,y2 * size);
				}
			}
			break;
		case 3:
			var insts = _g[3];
			var objs = this.getTileObjects();
			var mat = { a : 1., b : 0., c : 0., d : 1., x : 0., y : 0.};
			var _g12 = 0;
			while(_g12 < insts.length) {
				var i2 = insts[_g12];
				++_g12;
				var x3 = i2.x * size | 0;
				var y3 = i2.y * size | 0;
				var obj = objs.h[i2.o];
				var w = obj == null?1:obj.w;
				var h = obj == null?1:obj.h;
				var w3 = w * size;
				var h3 = h * size;
				var rot = i2.rot;
				var flip = i2.flip;
				mat.a = 1;
				mat.b = 0;
				mat.c = 0;
				mat.d = 1;
				mat.x = -w3 * 0.5;
				mat.y = -h3 * 0.5;
				if(rot != 0) {
					var a3 = Math.PI * rot / 2;
					var c = Math.cos(a3);
					var s = Math.sin(a3);
					var x4 = mat.x;
					var y4 = mat.y;
					mat.a = c;
					mat.b = s;
					mat.c = -s;
					mat.d = c;
					mat.x = x4 * c - y4 * s;
					mat.y = x4 * s + y4 * c;
				}
				if(flip) {
					mat.a = -mat.a;
					mat.c = -mat.c;
					mat.x = -mat.x;
				}
				mat.x += Math.abs(mat.a * w3 * 0.5 + mat.c * h3 * 0.5);
				mat.y += Math.abs(mat.b * w3 * 0.5 + mat.d * h3 * 0.5);
				mat.x += x3;
				mat.y += y3;
				if(obj == null) {
					view.drawMat(this.images[i2.o],mat);
					view.fillRect(x3,y3,size,size,-2130771968);
				} else {
					var px = mat.x;
					var py = mat.y;
					var _g34 = 0;
					var _g24 = obj.h;
					while(_g34 < _g24) {
						var dy = _g34++;
						var _g5 = 0;
						var _g44 = obj.w;
						while(_g5 < _g44) {
							var dx = _g5++;
							mat.x = px + dx * size * mat.a + dy * size * mat.c;
							mat.y = py + dx * size * mat.b + dy * size * mat.d;
							view.drawMat(this.images[i2.o + dx + dy * this.stride],mat);
						}
					}
				}
			}
			break;
		case 1:
			var objs4 = _g[3];
			var idCol = _g[2];
			if(idCol == null) {
				var col = this.props.color | -1610612736;
				var _g14 = 0;
				while(_g14 < objs4.length) {
					var o = objs4[_g14];
					++_g14;
					var w4 = this.hasSize?o.width * size:size;
					var h4 = this.hasSize?o.height * size:size;
					view.fillRect(o.x * size | 0,o.y * size | 0,w4 | 0,h4 | 0,col);
				}
				var col4 = this.props.color | -16777216;
				var _g15 = 0;
				while(_g15 < objs4.length) {
					var o5 = objs4[_g15];
					++_g15;
					var w5 = this.hasSize?o5.width * size | 0:size;
					var h5 = this.hasSize?o5.height * size | 0:size;
					var px5 = o5.x * size | 0;
					var py5 = o5.y * size | 0;
					view.fillRect(px5,py5,w5,1,col4);
					view.fillRect(px5,py5 + h5 - 1,w5,1,col4);
					view.fillRect(px5,py5 + 1,1,h5 - 2,col4);
					view.fillRect(px5 + w5 - 1,py5 + 1,1,h5 - 2,col4);
				}
			} else {
				var _g16 = 0;
				while(_g16 < objs4.length) {
					var o6 = objs4[_g16];
					++_g16;
					var id6 = Reflect.field(o6,idCol);
					var tmp;
					var _this = this.idToIndex;
					if(__map_reserved[id6] != null) tmp = _this.getReserved(id6); else tmp = _this.h[id6];
					var k6 = tmp;
					if(k6 == null) {
						var w7 = this.hasSize?o6.width * size:size;
						var h7 = this.hasSize?o6.height * size:size;
						view.fillRect(o6.x * size | 0,o6.y * size | 0,w7 | 0,h7 | 0,-65281);
						continue;
					}
					if(this.images != null) {
						var i7 = this.images[k6];
						view.draw(i7,(o6.x * size | 0) - (i7.width - size >> 1),(o6.y * size | 0) - (i7.height - size));
						continue;
					}
					var w6 = this.hasSize?o6.width * size:size;
					var h6 = this.hasSize?o6.height * size:size;
					view.fillRect(o6.x * size | 0,o6.y * size | 0,w6 | 0,h6 | 0,this.colors[k6] | -16777216);
				}
			}
			break;
		}
	}
	,__class__: lvl_LayerData
});
var lvl_Palette = function(level) {
	this.modeCursor = 0;
	this.mode = null;
	this.randomMode = false;
	this.paintMode = false;
	this.small = false;
	this.level = level;
};
$hxClasses["lvl.Palette"] = lvl_Palette;
lvl_Palette.__name__ = ["lvl","Palette"];
lvl_Palette.prototype = {
	init: function() {
		this.perTileProps = [];
		var _g = 0;
		var _g1 = this.level.sheet.columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == "tileProps" && (c.type == cdb_ColumnType.TList || c.type == cdb_ColumnType.TProperties)) {
				var tmp;
				var _this = SheetData.model.smap;
				var key = this.level.sheet.name + "@" + c.name;
				if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
				this.perTileProps = tmp.s.columns;
			}
		}
		this.perTileGfx = new haxe_ds_StringMap();
		var _g2 = 0;
		var _g12 = this.perTileProps;
		while(_g2 < _g12.length) {
			var c2 = _g12[_g2];
			++_g2;
			var _g22 = c2.type;
			switch(_g22[1]) {
			case 6:
				var s = _g22[2];
				var g = new lvl_LayerGfx(this.level);
				var tmp2;
				var _this2 = this.level.model.smap;
				if(__map_reserved[s] != null) tmp2 = _this2.getReserved(s); else tmp2 = _this2.h[s];
				g.fromSheet(tmp2.s,16711680);
				var _this3 = this.perTileGfx;
				var key3 = c2.name;
				if(__map_reserved[key3] != null) _this3.setReserved(key3,g); else _this3.h[key3] = g;
				break;
			default:
			}
		}
	}
	,getDefault: function(c) {
		return this.level.model.getDefault(c);
	}
	,getTileProp: function(x,y,create) {
		if(create == null) create = true;
		var l = this.currentLayer;
		var a = x + y * l.stride;
		var p = this.currentLayer.tileProps.props[a];
		if(p == null) {
			if(!create) return null;
			p = { };
			var _g = 0;
			var _g1 = this.perTileProps;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var v = this.getDefault(c);
				if(v != null) p[c.name] = v;
			}
			this.currentLayer.tileProps.props[a] = p;
		}
		return p;
	}
	,getTileProps: function(file,stride,max) {
		var p = Reflect.field(this.level.sheet.props.level.tileSets,file);
		if(p == null) {
			p = { stride : stride, sets : [], props : []};
			this.level.sheet.props.level.tileSets[file] = p;
		} else {
			if(p.sets == null) p.sets = [];
			if(p.props == null) p.props = [];
			Reflect.deleteField(p,"tags");
			if(p.stride == null) p.stride = stride; else if(p.stride != stride) {
				var out = [];
				var _g1 = 0;
				var _g = Math.ceil(p.props.length / p.stride);
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = p.stride;
					while(_g3 < _g2) {
						var x = _g3++;
						out[x + y * stride] = p.props[x + y * p.stride];
					}
				}
				while(out.length > 0 && (out[out.length - 1] == null || out.length > max)) out.pop();
				p.props = out;
				p.stride = stride;
			}
			if(p.props.length > max) p.props.splice(max,p.props.length - max);
			var _g4 = 0;
			var _g14 = p.sets.slice();
			while(_g4 < _g14.length) {
				var s = _g14[_g4];
				++_g4;
				if(s.x + s.w > stride || (s.y + s.h) * stride > max) HxOverrides.remove(p.sets,s);
			}
		}
		return p;
	}
	,saveTileProps: function() {
		var pr = this.currentLayer.tileProps.props;
		var _g1 = 0;
		var _g = pr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = pr[i];
			if(p == null) continue;
			var def = true;
			var _g2 = 0;
			var _g3 = this.perTileProps;
			while(_g2 < _g3.length) {
				var c = _g3[_g2];
				++_g2;
				var v = Reflect.field(p,c.name);
				if(v != null && v != this.getDefault(c)) {
					def = false;
					break;
				}
			}
			if(def) pr[i] = null;
		}
		while(pr.length > 0 && pr[pr.length - 1] == null) pr.pop();
		this.level.save();
		this.level.setCursor();
	}
	,reset: function() {
		if(this.p != null) {
			this.p.remove();
			this.select = null;
		}
	}
	,layerChanged: function(l) {
		var _g = this;
		this.currentLayer = l;
		this.p = $($("#paletteContent").html()).appendTo(this.level.content);
		this.p.toggleClass("small",this.small);
		var i = lvl_Image.fromCanvas(this.p.find("canvas.view")[0]);
		this.zoom = 1;
		while(this.zoom < 4 && l.stride * this.zoom * this.level.tileSize < 256 && l.height * this.zoom * this.level.tileSize < 256) this.zoom++;
		var tsize = this.level.tileSize * this.zoom;
		var scaleUp = 0;
		var scaleDown = 0;
		i.setSize(l.stride * (tsize + 1),l.height * (tsize + 1));
		var _g1 = 0;
		var _g2 = l.images.length;
		while(_g1 < _g2) {
			var n = _g1++;
			var x = n % l.stride * (tsize + 1);
			var y = (n / l.stride | 0) * (tsize + 1);
			var li = l.images[n];
			if(li.width == tsize && li.height == tsize) i.draw(li,x,y); else {
				var sw = tsize / li.width;
				var sh = tsize / li.height;
				if(sw > 1) ++scaleUp; else if(sw < 1) ++scaleDown;
				if(sh > 1) ++scaleUp; else if(sh < 1) ++scaleDown;
				i.drawScaled(li,x,y,tsize,tsize);
			}
		}
		if(scaleUp > scaleDown && scaleUp != 0) $(i.getCanvas()).css("image-rendering","pixelated");
		var jsel = this.p.find("canvas.select");
		var jpreview = this.p.find(".preview").hide();
		var ipreview = lvl_Image.fromCanvas(jpreview.find("canvas")[0]);
		this.select = lvl_Image.fromCanvas(jsel[0]);
		this.select.setSize(i.width,i.height);
		this.p.find(".icon.random").toggleClass("active",this.randomMode);
		this.p.find(".icon.paint").toggleClass("active",this.paintMode);
		this.p.find(".icon.small").toggleClass("active",this.small);
		this.p.mousedown(function(e) {
			e.stopPropagation();
		});
		this.p.mouseup(function(e2) {
			e2.stopPropagation();
		});
		var curPreview = -1;
		var start_x = l.current % l.stride;
		var start_y = l.current / l.stride | 0;
		var start_down = false;
		jsel.mousedown(function(e3) {
			_g.p.find("input[type=text]:focus").blur();
			var o = jsel.offset();
			var x3 = (e3.pageX - o.left) / (_g.level.tileSize * _g.zoom + 1) | 0;
			var y3 = (e3.pageY - o.top) / (_g.level.tileSize * _g.zoom + 1) | 0;
			if(x3 + y3 * l.stride >= l.images.length) return;
			if(e3.shiftKey) {
				var x0 = x3 < start_x?x3:start_x;
				var y0 = y3 < start_y?y3:start_y;
				var x1 = x3 < start_x?start_x:x3;
				var y1 = y3 < start_y?start_y:y3;
				l.set_current(x0 + y0 * l.stride);
				l.currentWidth = x1 - x0 + 1;
				l.currentHeight = y1 - y0 + 1;
				l.saveState();
				_g.level.setCursor();
			} else {
				start_x = x3;
				start_y = y3;
				if(l.tileProps != null && (_g.mode == null || _g.mode == "t_objects")) {
					var _g13 = 0;
					var _g23 = l.tileProps.sets;
					while(_g13 < _g23.length) {
						var p = _g23[_g13];
						++_g13;
						if(x3 >= p.x && y3 >= p.y && x3 < p.x + p.w && y3 < p.y + p.h && p.t == "object") {
							l.set_current(p.x + p.y * l.stride);
							l.currentWidth = p.w;
							l.currentHeight = p.h;
							l.saveState();
							_g.level.setCursor();
							return;
						}
					}
				}
				start_down = true;
				_g.level.mouseCapture = jsel;
				l.set_current(x3 + y3 * l.stride);
				_g.level.setCursor();
			}
			var prop = _g.getProp();
			if(prop != null) {
				var pick = e3.which == 3;
				var _g14 = prop.type;
				switch(_g14[1]) {
				case 2:
					if(!pick) {
						var v = _g.getTileProp(x3,y3);
						v[prop.name] = !Reflect.field(v,prop.name);
						_g.saveTileProps();
					}
					break;
				case 6:
					var tmp;
					var _this = _g.perTileGfx;
					var key = prop.name;
					if(__map_reserved[key] != null) tmp = _this.getReserved(key); else tmp = _this.h[key];
					var c = tmp;
					if(pick) {
						var idx;
						var key4 = Reflect.field(_g.getTileProp(x3,y3),prop.name);
						var _this4 = c.idToIndex;
						if(__map_reserved[key4] != null) idx = _this4.getReserved(key4); else idx = _this4.h[key4];
						_g.modeCursor = idx == null?-1:idx;
						_g.level.setCursor();
						return;
					}
					var v4 = _g.modeCursor < 0?_g.getDefault(prop):c.indexToId[_g.modeCursor];
					if(v4 == null) Reflect.deleteField(_g.getTileProp(x3,y3),prop.name); else _g.getTileProp(x3,y3)[prop.name] = v4;
					_g.saveTileProps();
					break;
				case 5:
					if(pick) {
						var idx5 = Reflect.field(_g.getTileProp(x3,y3),prop.name);
						_g.modeCursor = idx5 == null?-1:idx5;
						_g.level.setCursor();
						return;
					}
					var v5 = _g.modeCursor < 0?_g.getDefault(prop):_g.modeCursor;
					if(v5 == null) Reflect.deleteField(_g.getTileProp(x3,y3),prop.name); else _g.getTileProp(x3,y3)[prop.name] = v5;
					_g.saveTileProps();
					break;
				default:
				}
			}
		});
		jsel.mousemove(function(e5) {
			var o5 = jsel.offset();
			var x5 = (e5.pageX - o5.left) / (_g.level.tileSize * _g.zoom + 1) | 0;
			var y5 = (e5.pageY - o5.top) / (_g.level.tileSize * _g.zoom + 1) | 0;
			var infos = x5 + "," + y5;
			var id = x5 + y5 * l.stride;
			if(id >= l.images.length || l.blanks[id]) {
				curPreview = -1;
				jpreview.hide();
			} else {
				if(curPreview != id) {
					curPreview = id;
					jpreview.show();
					ipreview.fill(-12582848);
					ipreview.copyFrom(l.images[id]);
				}
				if(l.names != null) infos += " " + l.names[id];
			}
			if(l.tileProps != null) _g.level.content.find(".cursorPosition").text(infos); else _g.p.find(".infos").text(infos);
			if(!start_down) return;
			var x05 = x5 < start_x?x5:start_x;
			var y05 = y5 < start_y?y5:start_y;
			var x15 = x5 < start_x?start_x:x5;
			var y15 = y5 < start_y?start_y:y5;
			l.set_current(x05 + y05 * l.stride);
			l.currentWidth = x15 - x05 + 1;
			l.currentHeight = y15 - y05 + 1;
			l.saveState();
			_g.level.setCursor();
		});
		jsel.mouseleave(function(e6) {
			if(l.tileProps != null) _g.level.content.find(".cursorPosition").text(""); else _g.p.find(".infos").text("");
			curPreview = -1;
			jpreview.hide();
		});
		this.p.mouseleave(function(_) {
			start_down = false;
		});
		this.p.mousemove(function(e7) {
			_g.level.mousePos.x = e7.pageX | 0;
			_g.level.mousePos.y = e7.pageY | 0;
			_g.level.updateCursorPos();
			if(_g.level.selection == null) _g.level.cursor.hide();
		});
		this.p.mouseup(function(_7) {
			start_down = false;
			_g.level.content.mouseup();
		});
	}
	,updateSelect: function() {
		var _g3 = this;
		if(this.select == null) return;
		var l = this.currentLayer;
		this.select.clear();
		var used = [];
		var _g = l.data;
		switch(_g[1]) {
		case 2:
			var data = _g[3];
			var _g1 = 0;
			while(_g1 < data.length) {
				var k = data[_g1];
				++_g1;
				if(k == 0) continue;
				used[k - 1] = true;
			}
			break;
		case 0:
			var data1 = _g[2];
			var _g11 = 0;
			while(_g11 < data1.length) {
				var k1 = data1[_g11];
				++_g11;
				used[k1] = true;
			}
			break;
		case 1:
			var objs = _g[3];
			var id = _g[2];
			var _g12 = 0;
			while(_g12 < objs.length) {
				var o = objs[_g12];
				++_g12;
				var id2;
				var key = Reflect.field(o,id);
				var _this = l.idToIndex;
				if(__map_reserved[key] != null) id2 = _this.getReserved(key); else id2 = _this.h[key];
				if(id2 != null) used[id2] = true;
			}
			break;
		case 3:
			var insts = _g[3];
			var objs2 = l.getTileObjects();
			var _g13 = 0;
			while(_g13 < insts.length) {
				var i = insts[_g13];
				++_g13;
				var t = objs2.h[i.o];
				if(t == null) {
					used[i.o] = true;
					continue;
				}
				var _g33 = 0;
				var _g2 = t.h;
				while(_g33 < _g2) {
					var dy = _g33++;
					var _g5 = 0;
					var _g4 = t.w;
					while(_g5 < _g4) {
						var dx = _g5++;
						used[i.o + dx + dy * l.stride] = true;
					}
				}
			}
			break;
		}
		var tsize = this.level.tileSize * this.zoom;
		var _g14 = 0;
		var _g6 = l.images.length;
		while(_g14 < _g6) {
			var i6 = _g14++;
			if(used[i6]) continue;
			this.select.fillRect(i6 % l.stride * (tsize + 1),(i6 / l.stride | 0) * (tsize + 1),tsize,tsize,805306368);
		}
		var prop = this.getProp();
		var tmp;
		if(!(prop == null)) {
			var tmp6;
			var _g7 = prop.type;
			switch(_g7[1]) {
			case 2:case 6:case 5:
				tmp6 = true;
				break;
			default:
				tmp6 = false;
			}
			tmp = !tmp6;
		} else tmp = true;
		if(tmp) {
			var objs7 = this.mode == null?l.getSelObjects():[];
			if(objs7.length > 1) {
				var _g8 = 0;
				while(_g8 < objs7.length) {
					var o8 = objs7[_g8];
					++_g8;
					this.select.fillRect(o8.x * (tsize + 1),o8.y * (tsize + 1),(tsize + 1) * o8.w - 1,(tsize + 1) * o8.h - 1,-2141478405);
				}
			} else this.select.fillRect(l.current % l.stride * (tsize + 1),(l.current / l.stride | 0) * (tsize + 1),(tsize + 1) * l.currentWidth - 1,(tsize + 1) * l.currentHeight - 1,-2141478405);
		}
		if(prop != null) {
			var def = this.getDefault(prop);
			var _g9 = prop.type;
			switch(_g9[1]) {
			case 2:
				var k9 = 0;
				var _g29 = 0;
				var _g19 = l.height;
				while(_g29 < _g19) {
					var y = _g29++;
					var _g49 = 0;
					var _g39 = l.stride;
					while(_g49 < _g39) {
						var x = _g49++;
						var p = l.tileProps.props[k9++];
						if(p == null) continue;
						var v = Reflect.field(p,prop.name);
						if(v == def) continue;
						this.select.fillRect(x * (tsize + 1),y * (tsize + 1),tsize,tsize,v?-2131010655:-2141455455);
					}
				}
				break;
			case 6:
				var tmp9;
				var _this9 = this.perTileGfx;
				var key9 = prop.name;
				if(__map_reserved[key9] != null) tmp9 = _this9.getReserved(key9); else tmp9 = _this9.h[key9];
				var gfx = tmp9;
				var k10 = 0;
				this.select.set_alpha(0.5);
				var _g210 = 0;
				var _g110 = l.height;
				while(_g210 < _g110) {
					var y10 = _g210++;
					var _g410 = 0;
					var _g310 = l.stride;
					while(_g410 < _g310) {
						var x10 = _g410++;
						var p10 = l.tileProps.props[k10++];
						if(p10 == null) continue;
						var r = Reflect.field(p10,prop.name);
						var tmp10;
						var _this10 = gfx.idToIndex;
						if(__map_reserved[r] != null) tmp10 = _this10.getReserved(r); else tmp10 = _this10.h[r];
						var v10 = tmp10;
						if(v10 == null || r == def) continue;
						this.select.drawScaled(gfx.images[v10],x10 * (tsize + 1),y10 * (tsize + 1),tsize,tsize);
					}
				}
				this.select.set_alpha(1);
				break;
			case 5:
				var k11 = 0;
				var _g211 = 0;
				var _g111 = l.height;
				while(_g211 < _g111) {
					var y11 = _g211++;
					var _g411 = 0;
					var _g311 = l.stride;
					while(_g411 < _g311) {
						var x11 = _g411++;
						var p11 = l.tileProps.props[k11++];
						if(p11 == null) continue;
						var v11 = Reflect.field(p11,prop.name);
						if(v11 == null || v11 == def) continue;
						this.select.fillRect(x11 * (tsize + 1),y11 * (tsize + 1),tsize,tsize,lvl_Palette.colorPalette[v11] | -2147483648);
					}
				}
				break;
			case 3:case 4:case 1:case 11:case 13:case 16:
				var k12 = 0;
				var _g212 = 0;
				var _g112 = l.height;
				while(_g212 < _g112) {
					var y12 = _g212++;
					var _g412 = 0;
					var _g312 = l.stride;
					while(_g412 < _g312) {
						var x12 = _g412++;
						var p12 = l.tileProps.props[k12++];
						if(p12 == null) continue;
						var v12 = Reflect.field(p12,prop.name);
						if(v12 == null || v12 == def) continue;
						this.select.fillRect(x12 * (tsize + 1),y12 * (tsize + 1),tsize,1,-1);
						this.select.fillRect(x12 * (tsize + 1),y12 * (tsize + 1),1,tsize,-1);
						this.select.fillRect(x12 * (tsize + 1),(y12 + 1) * (tsize + 1) - 1,tsize,1,-1);
						this.select.fillRect((x12 + 1) * (tsize + 1) - 1,y12 * (tsize + 1),1,tsize,-1);
					}
				}
				break;
			default:
			}
		}
		var m = this.p.find(".mode");
		var sel = this.p.find(".sel");
		if(l.tileProps == null) {
			m.hide();
			sel.show();
		} else {
			sel.hide();
			var grounds = [];
			var _g16 = 0;
			var _g116 = l.tileProps.sets;
			while(_g16 < _g116.length) {
				var s = _g116[_g16];
				++_g16;
				var color;
				var _g216 = s.t;
				switch(_g216) {
				case "tile":
					continue;
					break;
				case "ground":
					if(s.opts.name != null && s.opts.name != "") {
						HxOverrides.remove(grounds,s.opts.name);
						grounds.push(s.opts.name);
					}
					if(this.mode != null && this.mode != "t_ground") continue;
					if(this.mode == null) color = 40960; else color = 65280;
					break;
				case "border":
					if(this.mode != "t_border") continue;
					color = 65535;
					break;
				case "object":
					if(this.mode != null && this.mode != "t_object") continue;
					if(this.mode == null) color = 8388608; else color = 16711680;
					break;
				case "group":
					if(this.mode != "t_group") continue;
					color = 16777215;
					break;
				}
				color |= -16777216;
				var tsize16 = this.level.tileSize * this.zoom;
				var px = s.x * (tsize16 + 1);
				var py = s.y * (tsize16 + 1);
				var w = s.w * (tsize16 + 1) - 1;
				var h = s.h * (tsize16 + 1) - 1;
				this.select.fillRect(px,py,w,1,color);
				this.select.fillRect(px,py + h - 1,w,1,color);
				this.select.fillRect(px,py,1,h,color);
				this.select.fillRect(px + w - 1,py,1,h,color);
			}
			var tmode = cdb__$Data_TileMode_$Impl_$.ofString(this.mode == null?"":HxOverrides.substr(this.mode,2,null));
			var tobj = l.getTileProp(tmode);
			if(tobj == null) tobj = { x : 0, y : 0, w : 0, h : 0, t : "tile", opts : { }};
			var _g15 = [];
			var _g117 = 0;
			var _g217 = ["tile","object","ground","border","group"];
			while(_g117 < _g217.length) {
				var m17 = _g217[_g117];
				++_g117;
				_g15.push("<option value=\"t_" + m17 + "\">" + (HxOverrides.substr(m17,0,1).toUpperCase() + HxOverrides.substr(m17,1,null)) + "</option>");
			}
			var baseModes = _g15.join("\n");
			var _g115 = [];
			var _g218 = 0;
			var _g318 = this.perTileProps;
			while(_g218 < _g318.length) {
				var t18 = _g318[_g218];
				++_g218;
				_g115.push("<option value=\"" + t18.name + "\">" + t18.name + "</option>");
			}
			var props = _g115.join("\n");
			m.find("[name=mode]").html(baseModes + props).val(this.mode == null?"t_tile":this.mode);
			m.attr("class","").addClass("mode");
			if(prop != null) {
				var _g219 = prop.type;
				switch(_g219[1]) {
				case 6:
					var tmp19;
					var _this19 = this.perTileGfx;
					var key19 = prop.name;
					if(__map_reserved[key19] != null) tmp19 = _this19.getReserved(key19); else tmp19 = _this19.h[key19];
					var gfx19 = tmp19;
					m.addClass("m_ref");
					var refList = m.find(".opt.refList");
					refList.html("");
					if(prop.opt) $("<div>").addClass("icon").addClass("delete").appendTo(refList).toggleClass("active",this.modeCursor < 0).click(function(_) {
						_g3.modeCursor = -1;
						_g3.level.setCursor();
					});
					var _g419 = 0;
					var _g319 = gfx19.images.length;
					while(_g419 < _g319) {
						var i19 = [_g419++];
						var d = $("<div>").addClass("icon").css({ background : "url('" + gfx19.images[i19[0]].getCanvas().toDataURL() + "')"});
						d.appendTo(refList);
						d.toggleClass("active",this.modeCursor == i19[0]);
						d.attr("title",gfx19.names[i19[0]]);
						d.click((function(i20) {
							return function(_20) {
								_g3.modeCursor = i20[0];
								_g3.level.setCursor();
							};
						})(i19));
					}
					break;
				case 5:
					var values = _g219[2];
					m.addClass("m_ref");
					var refList20 = m.find(".opt.refList");
					refList20.html("");
					if(prop.opt) $("<div>").addClass("icon").addClass("delete").appendTo(refList20).toggleClass("active",this.modeCursor < 0).click(function(_21) {
						_g3.modeCursor = -1;
						_g3.level.setCursor();
					});
					var _g421 = 0;
					var _g321 = values.length;
					while(_g421 < _g321) {
						var i21 = [_g421++];
						var d21 = $("<div>").addClass("icon").css({ background : this.level.toColor(lvl_Palette.colorPalette[i21[0]]), width : "auto"}).text(values[i21[0]]);
						d21.appendTo(refList20);
						d21.toggleClass("active",this.modeCursor == i21[0]);
						d21.click((function(i22) {
							return function(_22) {
								_g3.modeCursor = i22[0];
								_g3.level.setCursor();
							};
						})(i21));
					}
					break;
				case 3:case 4:case 1:case 16:
					m.addClass("m_value");
					var p22 = this.getTileProp(l.current % l.stride,l.current / l.stride | 0,false);
					var v22 = p22 == null?null:Reflect.field(p22,prop.name);
					m.find("[name=value]").val(prop.type == cdb_ColumnType.TDynamic?JSON.stringify(v22):v22 == null?"":"" + v22);
					break;
				default:
				}
			} else if("t_" + cdb__$Data_TileMode_$Impl_$.toString(tobj.t) != this.mode) {
				if(this.mode == null) m.addClass("m_tile"); else m.addClass("m_create").addClass("c_" + HxOverrides.substr(this.mode,2,null));
			} else {
				m.addClass("m_" + HxOverrides.substr(this.mode,2,null)).addClass("m_exists");
				var _g222 = tobj.t;
				switch(_g222) {
				case "tile":case "object":
					break;
				case "ground":
					m.find("[name=name]").val(tobj.opts.name == null?"":tobj.opts.name);
					m.find("[name=priority]").val("" + (tobj.opts.priority == null?0:tobj.opts.priority));
					break;
				case "group":
					m.find("[name=name]").val(tobj.opts.name == null?"":tobj.opts.name);
					m.find("[name=value]").val(tobj.opts.value == null?"":JSON.stringify(tobj.opts.value)).width(80).width(m.parent().width() - 300);
					break;
				case "border":
					var _g322 = [];
					var _g422 = 0;
					while(_g422 < grounds.length) {
						var g = grounds[_g422];
						++_g422;
						_g322.push("<option value=\"" + g + "\">" + g + "</option>");
					}
					var opts = _g322.join("");
					m.find("[name=border_in]").html("<option value='null'>upper</option><option value='lower'>lower</option>" + opts).val(Std.string(tobj.opts.borderIn));
					m.find("[name=border_out]").html("<option value='null'>lower</option><option value='upper'>upper</option>" + opts).val(Std.string(tobj.opts.borderOut));
					m.find("[name=border_mode]").val(Std.string(tobj.opts.borderMode));
					break;
				}
			}
			m.show();
		}
	}
	,getProp: function() {
		if(this.mode == null || HxOverrides.substr(this.mode,0,2) == "t_" || this.currentLayer.tileProps == null) return null;
		var _g = 0;
		var _g1 = this.perTileProps;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == this.mode) return c;
		}
		return null;
	}
	,option: function(name,val) {
		if(this.p == null) return false;
		var m = cdb__$Data_TileMode_$Impl_$.ofString(this.mode == null?"":HxOverrides.substr(this.mode,2,null));
		var l = this.currentLayer;
		if(val != null) val = StringTools.trim(val);
		switch(name) {
		case "random":
			this.randomMode = !this.randomMode;
			var tmp;
			var _g = l.data;
			switch(_g[1]) {
			case 3:
				tmp = true;
				break;
			default:
				tmp = false;
			}
			if(tmp) this.randomMode = false;
			this.p.find(".icon.random").toggleClass("active",this.randomMode);
			this.level.savePrefs();
			this.level.setCursor();
			return false;
		case "paint":
			this.paintMode = !this.paintMode;
			var tmp1;
			var _g1 = l.data;
			switch(_g1[1]) {
			case 3:
				tmp1 = true;
				break;
			default:
				tmp1 = false;
			}
			if(tmp1) this.paintMode = false;
			this.level.savePrefs();
			this.p.find(".icon.paint").toggleClass("active",this.paintMode);
			return false;
		case "mode":
			this.mode = val == "t_tile"?null:val;
			this.modeCursor = 0;
			this.level.savePrefs();
			this.level.setCursor();
			break;
		case "toggleMode":
			var s = l.getTileProp(m);
			if(s == null) {
				s = { x : l.current % l.stride, y : l.current / l.stride | 0, w : l.currentWidth, h : l.currentHeight, t : m, opts : { }};
				l.tileProps.sets.push(s);
			} else HxOverrides.remove(l.tileProps.sets,s);
			this.level.setCursor();
			break;
		case "name":
			var s1 = l.getTileProp(m);
			if(s1 != null) s1.opts.name = val;
			break;
		case "value":
			var p = this.getProp();
			if(p != null) {
				var t = this.getTileProp(l.current % l.stride,l.current / l.stride | 0);
				var v;
				var _g2 = p.type;
				switch(_g2[1]) {
				case 3:
					v = Std.parseInt(val);
					break;
				case 4:
					v = parseFloat(val);
					break;
				case 1:
					v = val;
					break;
				case 16:
					try {
						v = this.level.model.parseDynamic(val);
					} catch( e ) {
						v = null;
					}
					break;
				default:
					throw new js__$Boot_HaxeError("assert");
				}
				if(v == null) Reflect.deleteField(t,p.name); else t[p.name] = v;
				this.saveTileProps();
				return false;
			}
			var s2 = l.getTileProp(m);
			if(s2 != null) {
				var v2;
				if(val == null) v2 = s2.opts.value; else try {
					v2 = this.level.model.parseDynamic(val);
				} catch( e2 ) {
					v2 = null;
				}
				if(v2 == null) Reflect.deleteField(s2.opts,"value"); else s2.opts.value = v2;
				this.p.find("[name=value]").val(v2 == null?"":JSON.stringify(v2));
			}
			break;
		case "priority":
			var s3 = l.getTileProp(m);
			if(s3 != null) s3.opts.priority = Std.parseInt(val);
			break;
		case "border_in":
			var s4 = l.getTileProp(m);
			if(s4 != null) {
				if(val == "null") Reflect.deleteField(s4.opts,"borderIn"); else s4.opts.borderIn = val;
			}
			break;
		case "border_out":
			var s5 = l.getTileProp(m);
			if(s5 != null) {
				if(val == "null") Reflect.deleteField(s5.opts,"borderOut"); else s5.opts.borderOut = val;
			}
			break;
		case "border_mode":
			var s6 = l.getTileProp(m);
			if(s6 != null) {
				if(val == "null") Reflect.deleteField(s6.opts,"borderMode"); else s6.opts.borderMode = val;
			}
			break;
		case "small":
			this.small = !this.small;
			this.level.savePrefs();
			this.p.toggleClass("small",this.small);
			this.p.find(".icon.small").toggleClass("active",this.small);
			return false;
		}
		return true;
	}
	,__class__: lvl_Palette
};
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = ["sys","FileSystem"];
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		return false;
	}
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
if(Array.prototype.filter == null) Array.prototype.filter = function(f1) {
	var a1 = [];
	var _g11 = 0;
	var _g2 = this.length;
	while(_g11 < _g2) {
		var i2 = _g11++;
		var e = this[i2];
		if(f1(e)) a1.push(e);
	}
	return a1;
};
var __map_reserved = {}
Level.UID = 0;
Level.loadedTilesCache = new haxe_ds_StringMap();
K.INSERT = 45;
K.DELETE = 46;
K.LEFT = 37;
K.UP = 38;
K.RIGHT = 39;
K.DOWN = 40;
K.ESC = 27;
K.TAB = 9;
K.SPACE = 32;
K.ENTER = 13;
K.F2 = 113;
K.F3 = 114;
K.F4 = 115;
K.NUMPAD_ADD = 107;
K.NUMPAD_SUB = 109;
K.NUMPAD_DIV = 111;
Main.UID = 0;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
cdb_BinSerializer.__meta__ = { obj : { s_1522840838 : ["cy25:cdb._BinSerializer.Schemay4:hashi-923295011y4:kindwy29:cdb._BinSerializer.SchemaKindy5:SEnum:1aawy24:cdb._BinSerializer.SDatay4:DInt:0wR5y7:DString:0wR5y5:DNull:1wR5y6:DArray:1wR5y5:DAnon:1aoy1:dwR5R7:0y1:ny4:namegoR11wR5R7:0R12y5:valueghhawR5R6:0wR5R7:0hawR5R6:0wR5R7:0hawR5R6:0wR5R6:0hawR5R6:0wR5R6:0wR5R6:0hawR5R6:0wR5R7:0wR5R8:1wR5R6:0hawR5R6:0hawR5R6:0wR5R6:0wR5y7:DSchema:1i223952291wR5R8:1wR5y6:DFloat:0hawR5R6:0hawR5R6:0wR5R7:0wR5R6:0hawR5R6:0wR5R7:0wR5R8:1wR5R7:0hawR5R6:0wR5R7:0wR5R8:1wR5R7:0hawR5R6:0wR5R7:0hawR5R6:0wR5R7:0wR5R9:1wR5y8:DDynamic:0wR5R8:1wR5R6:0hawR5R6:0wR5R7:0wR5R8:1wR5R16:0hawR5R6:0wR5R8:1wR5R9:1wR5R6:0hawR5R9:1wR5R6:0hhR13y14:cdb.jq.Messagey2:idi1522840838g"], s_223952291 : ["cy25:cdb._BinSerializer.Schemay4:hashi471112403y4:kindwy29:cdb._BinSerializer.SchemaKindy5:SEnum:1au5hy4:namey20:cdb.jq.DockDirectiony2:idi223952291g"], s_560507292 : ["cy25:cdb._BinSerializer.Schemay4:hashi842410256y4:kindwy29:cdb._BinSerializer.SchemaKindy5:SEnum:1aawy24:cdb._BinSerializer.SDatay4:DInt:0wR5y5:DNull:1wR5y7:DSchema:1i1835035702hawR5R6:0wR5y7:DString:0hawR5R6:0hhy4:namey13:cdb.jq.Answery2:idi560507292g"], s_1835035702 : ["cy25:cdb._BinSerializer.Schemay4:hashi1439494620y4:kindwy29:cdb._BinSerializer.SchemaKindy5:SAnon:1aoy1:dwy24:cdb._BinSerializer.SDatay5:DNull:1wR6y5:DBool:0y1:ny7:ctrlKeygoR5wR6R7:1wR6y4:DInt:0R9y7:keyCodegoR5wR6R7:1wR6R8:0R9y8:shiftKeygoR5wR6R7:1wR6y8:DDynamic:0R9y5:valuegoR5wR6R7:1wR6R11:0R9y5:whichghy4:namey17:cdb.jq.EventPropsy2:idi1835035702g"]}};
cdb_BinSerializer.VERSION_CHECK = false;
cdb_BinSerializer.TAG = 0;
cdb_BinSerializer.gadtTip = -1;
cdb__$Data_TileMode_$Impl_$.Tile = "tile";
cdb__$Data_TileMode_$Impl_$.Ground = "ground";
cdb__$Data_TileMode_$Impl_$.Border = "border";
cdb__$Data_TileMode_$Impl_$.Object = "object";
cdb__$Data_TileMode_$Impl_$.Group = "group";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	var this1;
	this1 = x;
	$r = this1;
	return $r;
}(this));
js_Boot.__toStr = {}.toString;
lvl_Image.cache = new haxe_ds_StringMap();
lvl_Image3D.CANVAS_SIZE = 2048;
lvl_Palette.colorPalette = [16711680,65280,16711935,65535,16776960,16777215,33023,65408,8388863,8453888,16711808,16744448];
Main.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
